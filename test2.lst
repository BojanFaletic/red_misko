   1               		.file	"test2.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB1:
  15               		.file 1 "test2.c"
   1:test2.c       **** #include <avr/interrupt.h>
   2:test2.c       **** #include <stdio.h>
   3:test2.c       **** 
   4:test2.c       **** #include "lib/gpio.h"
   5:test2.c       **** #include "lib/io_interrupt.h"
   6:test2.c       **** #include "lib/uart.h"
   7:test2.c       **** 
   8:test2.c       **** #define DELAY 16000
   9:test2.c       **** 
  10:test2.c       **** int main()
  11:test2.c       **** {
  16               		.loc 1 11 1 view -0
  17               		.cfi_startproc
  18 0000 CDB7      		in r28,__SP_L__
  19 0002 DEB7      		in r29,__SP_H__
  20               	.LCFI0:
  21               		.cfi_def_cfa_register 28
  22 0004 2897      		sbiw r28,8
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 10
  25 0006 0FB6      		in __tmp_reg__,__SREG__
  26 0008 F894      		cli
  27 000a DEBF      		out __SP_H__,r29
  28 000c 0FBE      		out __SREG__,__tmp_reg__
  29 000e CDBF      		out __SP_L__,r28
  30               	/* prologue: function */
  31               	/* frame size = 8 */
  32               	/* stack size = 8 */
  33               	.L__stack_usage = 8
  12:test2.c       ****     gpio_init();
  34               		.loc 1 12 5 view .LVU1
  35 0010 0E94 0000 		call gpio_init
  36               	.LVL0:
  13:test2.c       ****     io_interrupt_enable(0);
  37               		.loc 1 13 5 view .LVU2
  38 0014 90E0      		ldi r25,0
  39 0016 80E0      		ldi r24,0
  40 0018 0E94 0000 		call io_interrupt_enable
  41               	.LVL1:
  14:test2.c       ****     io_interrupt_enable(1);
  42               		.loc 1 14 5 view .LVU3
  43 001c 81E0      		ldi r24,lo8(1)
  44 001e 90E0      		ldi r25,0
  45 0020 0E94 0000 		call io_interrupt_enable
  46               	.LVL2:
  15:test2.c       ****     io_pullup_enable(0);
  47               		.loc 1 15 5 view .LVU4
  48 0024 90E0      		ldi r25,0
  49 0026 80E0      		ldi r24,0
  50 0028 0E94 0000 		call io_pullup_enable
  51               	.LVL3:
  16:test2.c       ****     io_pullup_enable(1);
  52               		.loc 1 16 5 view .LVU5
  53 002c 81E0      		ldi r24,lo8(1)
  54 002e 90E0      		ldi r25,0
  55 0030 0E94 0000 		call io_pullup_enable
  56               	.LVL4:
  17:test2.c       ****     
  18:test2.c       ****     uart_init();
  57               		.loc 1 18 5 view .LVU6
  58 0034 0E94 0000 		call uart_init
  59               	.LVL5:
  19:test2.c       ****     stdout = &uart_output;
  60               		.loc 1 19 5 view .LVU7
  61               		.loc 1 19 12 is_stmt 0 view .LVU8
  62 0038 80E0      		ldi r24,lo8(uart_output)
  63 003a 90E0      		ldi r25,hi8(uart_output)
  64 003c 9093 0000 		sts __iob+2+1,r25
  65 0040 8093 0000 		sts __iob+2,r24
  20:test2.c       ****     stdin  = &uart_input;
  66               		.loc 1 20 5 is_stmt 1 view .LVU9
  67               		.loc 1 20 12 is_stmt 0 view .LVU10
  68 0044 80E0      		ldi r24,lo8(uart_input)
  69 0046 90E0      		ldi r25,hi8(uart_input)
  70 0048 9093 0000 		sts __iob+1,r25
  71 004c 8093 0000 		sts __iob,r24
  72               	.L6:
  21:test2.c       **** 
  22:test2.c       ****     while(1)
  73               		.loc 1 22 5 is_stmt 1 view .LVU11
  23:test2.c       ****     {
  24:test2.c       ****         gpio_write(1,1);
  74               		.loc 1 24 9 view .LVU12
  75 0050 61E0      		ldi r22,lo8(1)
  76 0052 81E0      		ldi r24,lo8(1)
  77 0054 0E94 0000 		call gpio_write
  78               	.LVL6:
  25:test2.c       ****         for (volatile unsigned long i = 0; i < DELAY; i++);
  79               		.loc 1 25 9 view .LVU13
  80               	.LBB2:
  81               		.loc 1 25 14 view .LVU14
  82               		.loc 1 25 37 is_stmt 0 view .LVU15
  83 0058 1D82      		std Y+5,__zero_reg__
  84 005a 1E82      		std Y+6,__zero_reg__
  85 005c 1F82      		std Y+7,__zero_reg__
  86 005e 1886      		std Y+8,__zero_reg__
  87               	.L2:
  88               		.loc 1 25 44 is_stmt 1 discriminator 1 view .LVU16
  89               		.loc 1 25 46 is_stmt 0 discriminator 1 view .LVU17
  90 0060 8D81      		ldd r24,Y+5
  91 0062 9E81      		ldd r25,Y+6
  92 0064 AF81      		ldd r26,Y+7
  93 0066 B885      		ldd r27,Y+8
  94               		.loc 1 25 9 discriminator 1 view .LVU18
  95 0068 8038      		cpi r24,-128
  96 006a 9E43      		sbci r25,62
  97 006c A105      		cpc r26,__zero_reg__
  98 006e B105      		cpc r27,__zero_reg__
  99 0070 00F0      		brlo .L3
 100               	.LBE2:
  26:test2.c       ****         gpio_write(1,0);
 101               		.loc 1 26 9 is_stmt 1 view .LVU19
 102 0072 60E0      		ldi r22,0
 103 0074 81E0      		ldi r24,lo8(1)
 104 0076 0E94 0000 		call gpio_write
 105               	.LVL7:
  27:test2.c       ****         for (volatile unsigned long i = 0; i < DELAY; i++);
 106               		.loc 1 27 9 view .LVU20
 107               	.LBB3:
 108               		.loc 1 27 14 view .LVU21
 109               		.loc 1 27 37 is_stmt 0 view .LVU22
 110 007a 1982      		std Y+1,__zero_reg__
 111 007c 1A82      		std Y+2,__zero_reg__
 112 007e 1B82      		std Y+3,__zero_reg__
 113 0080 1C82      		std Y+4,__zero_reg__
 114               	.L4:
 115               		.loc 1 27 44 is_stmt 1 discriminator 1 view .LVU23
 116               		.loc 1 27 46 is_stmt 0 discriminator 1 view .LVU24
 117 0082 8981      		ldd r24,Y+1
 118 0084 9A81      		ldd r25,Y+2
 119 0086 AB81      		ldd r26,Y+3
 120 0088 BC81      		ldd r27,Y+4
 121               		.loc 1 27 9 discriminator 1 view .LVU25
 122 008a 8038      		cpi r24,-128
 123 008c 9E43      		sbci r25,62
 124 008e A105      		cpc r26,__zero_reg__
 125 0090 B105      		cpc r27,__zero_reg__
 126 0092 00F4      		brsh .L6
 127               		.loc 1 27 59 is_stmt 1 discriminator 3 view .LVU26
 128               		.loc 1 27 55 discriminator 3 view .LVU27
 129               		.loc 1 27 56 is_stmt 0 discriminator 3 view .LVU28
 130 0094 8981      		ldd r24,Y+1
 131 0096 9A81      		ldd r25,Y+2
 132 0098 AB81      		ldd r26,Y+3
 133 009a BC81      		ldd r27,Y+4
 134 009c 0196      		adiw r24,1
 135 009e A11D      		adc r26,__zero_reg__
 136 00a0 B11D      		adc r27,__zero_reg__
 137 00a2 8983      		std Y+1,r24
 138 00a4 9A83      		std Y+2,r25
 139 00a6 AB83      		std Y+3,r26
 140 00a8 BC83      		std Y+4,r27
 141 00aa 00C0      		rjmp .L4
 142               	.L3:
 143               	.LBE3:
 144               	.LBB4:
  25:test2.c       ****         for (volatile unsigned long i = 0; i < DELAY; i++);
 145               		.loc 1 25 59 is_stmt 1 discriminator 3 view .LVU29
  25:test2.c       ****         for (volatile unsigned long i = 0; i < DELAY; i++);
 146               		.loc 1 25 55 discriminator 3 view .LVU30
  25:test2.c       ****         for (volatile unsigned long i = 0; i < DELAY; i++);
 147               		.loc 1 25 56 is_stmt 0 discriminator 3 view .LVU31
 148 00ac 8D81      		ldd r24,Y+5
 149 00ae 9E81      		ldd r25,Y+6
 150 00b0 AF81      		ldd r26,Y+7
 151 00b2 B885      		ldd r27,Y+8
 152 00b4 0196      		adiw r24,1
 153 00b6 A11D      		adc r26,__zero_reg__
 154 00b8 B11D      		adc r27,__zero_reg__
 155 00ba 8D83      		std Y+5,r24
 156 00bc 9E83      		std Y+6,r25
 157 00be AF83      		std Y+7,r26
 158 00c0 B887      		std Y+8,r27
 159 00c2 00C0      		rjmp .L2
 160               	.LBE4:
 161               		.cfi_endproc
 162               	.LFE1:
 164               		.section	.rodata.str1.1,"aMS",@progbits,1
 165               	.LC0:
 166 0000 4C65 6674 		.string	"Left"
 166      00
 167               	.LC1:
 168 0005 5269 6768 		.string	"Right"
 168      7400 
 169               		.text
 170               	.global	__vector_1
 172               	__vector_1:
 173               	.LFB2:
  28:test2.c       ****     }
  29:test2.c       **** }
  30:test2.c       **** 
  31:test2.c       **** 
  32:test2.c       **** ISR(INT0_vect)
  33:test2.c       **** {
 174               		.loc 1 33 1 is_stmt 1 view -0
 175               		.cfi_startproc
 176 0000 1F92      		push r1
 177               	.LCFI2:
 178               		.cfi_def_cfa_offset 3
 179               		.cfi_offset 1, -2
 180 0002 0F92      		push r0
 181               	.LCFI3:
 182               		.cfi_def_cfa_offset 4
 183               		.cfi_offset 0, -3
 184 0004 0FB6      		in r0,__SREG__
 185 0006 0F92      		push r0
 186 0008 1124      		clr __zero_reg__
 187 000a 2F93      		push r18
 188               	.LCFI4:
 189               		.cfi_def_cfa_offset 5
 190               		.cfi_offset 18, -4
 191 000c 3F93      		push r19
 192               	.LCFI5:
 193               		.cfi_def_cfa_offset 6
 194               		.cfi_offset 19, -5
 195 000e 4F93      		push r20
 196               	.LCFI6:
 197               		.cfi_def_cfa_offset 7
 198               		.cfi_offset 20, -6
 199 0010 5F93      		push r21
 200               	.LCFI7:
 201               		.cfi_def_cfa_offset 8
 202               		.cfi_offset 21, -7
 203 0012 6F93      		push r22
 204               	.LCFI8:
 205               		.cfi_def_cfa_offset 9
 206               		.cfi_offset 22, -8
 207 0014 7F93      		push r23
 208               	.LCFI9:
 209               		.cfi_def_cfa_offset 10
 210               		.cfi_offset 23, -9
 211 0016 8F93      		push r24
 212               	.LCFI10:
 213               		.cfi_def_cfa_offset 11
 214               		.cfi_offset 24, -10
 215 0018 9F93      		push r25
 216               	.LCFI11:
 217               		.cfi_def_cfa_offset 12
 218               		.cfi_offset 25, -11
 219 001a AF93      		push r26
 220               	.LCFI12:
 221               		.cfi_def_cfa_offset 13
 222               		.cfi_offset 26, -12
 223 001c BF93      		push r27
 224               	.LCFI13:
 225               		.cfi_def_cfa_offset 14
 226               		.cfi_offset 27, -13
 227 001e EF93      		push r30
 228               	.LCFI14:
 229               		.cfi_def_cfa_offset 15
 230               		.cfi_offset 30, -14
 231 0020 FF93      		push r31
 232               	.LCFI15:
 233               		.cfi_def_cfa_offset 16
 234               		.cfi_offset 31, -15
 235               	/* prologue: Signal */
 236               	/* frame size = 0 */
 237               	/* stack size = 15 */
 238               	.L__stack_usage = 15
  34:test2.c       ****     gpio_write(2,1);
 239               		.loc 1 34 5 view .LVU33
 240 0022 61E0      		ldi r22,lo8(1)
 241 0024 82E0      		ldi r24,lo8(2)
 242 0026 0E94 0000 		call gpio_write
 243               	.LVL8:
  35:test2.c       ****     if(gpio_read(5))
 244               		.loc 1 35 5 view .LVU34
 245               	.LBB5:
 246               		.loc 1 35 8 is_stmt 0 view .LVU35
 247 002a 85E0      		ldi r24,lo8(5)
 248 002c 90E0      		ldi r25,0
 249 002e 0E94 0000 		call gpio_read
 250               	.LVL9:
 251               		.loc 1 35 7 view .LVU36
 252 0032 892B      		or r24,r25
 253 0034 01F0      		breq .L8
  36:test2.c       ****         printf("Left\n");
 254               		.loc 1 36 9 is_stmt 1 view .LVU37
 255 0036 80E0      		ldi r24,lo8(.LC0)
 256 0038 90E0      		ldi r25,hi8(.LC0)
 257               	.L10:
  37:test2.c       ****     else
  38:test2.c       ****         printf("Right\n");
 258               		.loc 1 38 9 is_stmt 0 view .LVU38
 259 003a 0E94 0000 		call puts
 260               	.LVL10:
 261               	/* epilogue start */
 262               	.LBE5:
  39:test2.c       **** }
 263               		.loc 1 39 1 view .LVU39
 264 003e FF91      		pop r31
 265 0040 EF91      		pop r30
 266 0042 BF91      		pop r27
 267 0044 AF91      		pop r26
 268 0046 9F91      		pop r25
 269 0048 8F91      		pop r24
 270 004a 7F91      		pop r23
 271 004c 6F91      		pop r22
 272 004e 5F91      		pop r21
 273 0050 4F91      		pop r20
 274 0052 3F91      		pop r19
 275 0054 2F91      		pop r18
 276 0056 0F90      		pop r0
 277 0058 0FBE      		out __SREG__,r0
 278 005a 0F90      		pop r0
 279 005c 1F90      		pop r1
 280 005e 1895      		reti
 281               	.L8:
 282               	.LBB6:
  38:test2.c       **** }
 283               		.loc 1 38 9 is_stmt 1 view .LVU40
 284 0060 80E0      		ldi r24,lo8(.LC1)
 285 0062 90E0      		ldi r25,hi8(.LC1)
 286 0064 00C0      		rjmp .L10
 287               	.LBE6:
 288               		.cfi_endproc
 289               	.LFE2:
 291               	.global	__vector_2
 293               	__vector_2:
 294               	.LFB3:
  40:test2.c       **** 
  41:test2.c       **** ISR(INT1_vect)
  42:test2.c       **** {
 295               		.loc 1 42 1 view -0
 296               		.cfi_startproc
 297 0066 1F92      		push r1
 298               	.LCFI16:
 299               		.cfi_def_cfa_offset 3
 300               		.cfi_offset 1, -2
 301 0068 0F92      		push r0
 302               	.LCFI17:
 303               		.cfi_def_cfa_offset 4
 304               		.cfi_offset 0, -3
 305 006a 0FB6      		in r0,__SREG__
 306 006c 0F92      		push r0
 307 006e 1124      		clr __zero_reg__
 308 0070 2F93      		push r18
 309               	.LCFI18:
 310               		.cfi_def_cfa_offset 5
 311               		.cfi_offset 18, -4
 312 0072 3F93      		push r19
 313               	.LCFI19:
 314               		.cfi_def_cfa_offset 6
 315               		.cfi_offset 19, -5
 316 0074 4F93      		push r20
 317               	.LCFI20:
 318               		.cfi_def_cfa_offset 7
 319               		.cfi_offset 20, -6
 320 0076 5F93      		push r21
 321               	.LCFI21:
 322               		.cfi_def_cfa_offset 8
 323               		.cfi_offset 21, -7
 324 0078 6F93      		push r22
 325               	.LCFI22:
 326               		.cfi_def_cfa_offset 9
 327               		.cfi_offset 22, -8
 328 007a 7F93      		push r23
 329               	.LCFI23:
 330               		.cfi_def_cfa_offset 10
 331               		.cfi_offset 23, -9
 332 007c 8F93      		push r24
 333               	.LCFI24:
 334               		.cfi_def_cfa_offset 11
 335               		.cfi_offset 24, -10
 336 007e 9F93      		push r25
 337               	.LCFI25:
 338               		.cfi_def_cfa_offset 12
 339               		.cfi_offset 25, -11
 340 0080 AF93      		push r26
 341               	.LCFI26:
 342               		.cfi_def_cfa_offset 13
 343               		.cfi_offset 26, -12
 344 0082 BF93      		push r27
 345               	.LCFI27:
 346               		.cfi_def_cfa_offset 14
 347               		.cfi_offset 27, -13
 348 0084 EF93      		push r30
 349               	.LCFI28:
 350               		.cfi_def_cfa_offset 15
 351               		.cfi_offset 30, -14
 352 0086 FF93      		push r31
 353               	.LCFI29:
 354               		.cfi_def_cfa_offset 16
 355               		.cfi_offset 31, -15
 356               	/* prologue: Signal */
 357               	/* frame size = 0 */
 358               	/* stack size = 15 */
 359               	.L__stack_usage = 15
  43:test2.c       ****     gpio_write(2,0);
 360               		.loc 1 43 5 view .LVU42
 361 0088 60E0      		ldi r22,0
 362 008a 82E0      		ldi r24,lo8(2)
 363 008c 0E94 0000 		call gpio_write
 364               	.LVL11:
 365               	/* epilogue start */
  44:test2.c       **** }
 366               		.loc 1 44 1 is_stmt 0 view .LVU43
 367 0090 FF91      		pop r31
 368 0092 EF91      		pop r30
 369 0094 BF91      		pop r27
 370 0096 AF91      		pop r26
 371 0098 9F91      		pop r25
 372 009a 8F91      		pop r24
 373 009c 7F91      		pop r23
 374 009e 6F91      		pop r22
 375 00a0 5F91      		pop r21
 376 00a2 4F91      		pop r20
 377 00a4 3F91      		pop r19
 378 00a6 2F91      		pop r18
 379 00a8 0F90      		pop r0
 380 00aa 0FBE      		out __SREG__,r0
 381 00ac 0F90      		pop r0
 382 00ae 1F90      		pop r1
 383 00b0 1895      		reti
 384               		.cfi_endproc
 385               	.LFE3:
 387               	.global	uart_input
 388               		.data
 391               	uart_input:
 392 0000 0000 00   		.zero	3
 393 0003 01        		.byte	1
 394 0004 0000 0000 		.zero	4
 395 0008 0000      		.word	0
 396 000a 0000      		.word	gs(uart_getchar)
 397 000c 0000      		.word	0
 398               	.global	uart_output
 401               	uart_output:
 402 000e 0000 00   		.zero	3
 403 0011 02        		.byte	2
 404 0012 0000 0000 		.zero	4
 405 0016 0000      		.word	gs(uart_putchar)
 406 0018 0000      		.word	0
 407 001a 0000      		.word	0
 408               		.text
 409               	.Letext0:
 410               		.file 2 "/usr/avr/include/stdio.h"
 411               		.file 3 "/usr/avr/include/stdint.h"
 412               		.file 4 "lib/uart.h"
 413               		.file 5 "lib/gpio.h"
 414               		.file 6 "lib/io_interrupt.h"
 415               		.file 7 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 test2.c
     /tmp/cc8o7sma.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cc8o7sma.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cc8o7sma.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cc8o7sma.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cc8o7sma.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cc8o7sma.s:13     .text.startup:0000000000000000 main
     /tmp/cc8o7sma.s:401    .data:000000000000000e uart_output
     /tmp/cc8o7sma.s:391    .data:0000000000000000 uart_input
     /tmp/cc8o7sma.s:172    .text:0000000000000000 __vector_1
     /tmp/cc8o7sma.s:293    .text:0000000000000066 __vector_2

UNDEFINED SYMBOLS
gpio_init
io_interrupt_enable
io_pullup_enable
uart_init
__iob
gpio_write
gpio_read
puts
uart_getchar
uart_putchar
__do_copy_data
