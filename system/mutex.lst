   1               		.file	"mutex.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	osMutexCreate
  12               	osMutexCreate:
  13               	.LFB16:
  14               		.file 1 "system/mutex.c"
   1:system/mutex.c **** /*
   2:system/mutex.c ****  * Operating system for Atmel AVR microcontrollers
   3:system/mutex.c ****  * Copyright (c) 2015 Konrad Kusnierz <iryont@gmail.com>
   4:system/mutex.c ****  *
   5:system/mutex.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy
   6:system/mutex.c ****  * of this software and associated documentation files (the "Software"), to deal
   7:system/mutex.c ****  * in the Software without restriction, including without limitation the rights
   8:system/mutex.c ****  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   9:system/mutex.c ****  * copies of the Software, and to permit persons to whom the Software is
  10:system/mutex.c ****  * furnished to do so, subject to the following conditions:
  11:system/mutex.c ****  *
  12:system/mutex.c ****  * The above copyright notice and this permission notice shall be included in
  13:system/mutex.c ****  * all copies or substantial portions of the Software.
  14:system/mutex.c ****  *
  15:system/mutex.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:system/mutex.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  17:system/mutex.c ****  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  18:system/mutex.c ****  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  19:system/mutex.c ****  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  20:system/mutex.c ****  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  21:system/mutex.c ****  * THE SOFTWARE.
  22:system/mutex.c ****  */
  23:system/mutex.c **** 
  24:system/mutex.c **** #include <stdlib.h>
  25:system/mutex.c **** #include "mutex.h"
  26:system/mutex.c **** #include "asm.h"
  27:system/mutex.c **** 
  28:system/mutex.c **** Mutex* osMutexCreate()
  29:system/mutex.c **** {
  15               		.loc 1 29 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  30:system/mutex.c ****     Mutex *mutex = (Mutex*)malloc(sizeof(Mutex));
  21               		.loc 1 30 5 view .LVU1
  22               		.loc 1 30 28 is_stmt 0 view .LVU2
  23 0000 81E0      		ldi r24,lo8(1)
  24 0002 90E0      		ldi r25,0
  25 0004 0E94 0000 		call malloc
  26               	.LVL0:
  27 0008 FC01      		movw r30,r24
  28               	.LVL1:
  31:system/mutex.c ****     mutex->atomic = 0;
  29               		.loc 1 31 5 is_stmt 1 view .LVU3
  30               		.loc 1 31 19 is_stmt 0 view .LVU4
  31 000a 1082      		st Z,__zero_reg__
  32:system/mutex.c ****     return mutex;
  32               		.loc 1 32 5 is_stmt 1 view .LVU5
  33               	/* epilogue start */
  33:system/mutex.c **** }
  34               		.loc 1 33 1 is_stmt 0 view .LVU6
  35 000c 0895      		ret
  36               		.cfi_endproc
  37               	.LFE16:
  39               	.global	osMutexDestroy
  41               	osMutexDestroy:
  42               	.LVL2:
  43               	.LFB17:
  34:system/mutex.c **** 
  35:system/mutex.c **** void osMutexDestroy(Mutex *mutex)
  36:system/mutex.c **** {
  44               		.loc 1 36 1 is_stmt 1 view -0
  45               		.cfi_startproc
  46               	/* prologue: function */
  47               	/* frame size = 0 */
  48               	/* stack size = 0 */
  49               	.L__stack_usage = 0
  37:system/mutex.c ****     free(mutex);
  50               		.loc 1 37 5 view .LVU8
  51 000e 0C94 0000 		jmp free
  52               	.LVL3:
  53               		.loc 1 37 5 is_stmt 0 view .LVU9
  54               		.cfi_endproc
  55               	.LFE17:
  57               	.global	osMutexLock
  59               	osMutexLock:
  60               	.LVL4:
  61               	.LFB18:
  38:system/mutex.c **** }
  39:system/mutex.c **** 
  40:system/mutex.c **** void osMutexLock(Mutex *mutex)
  41:system/mutex.c **** {
  62               		.loc 1 41 1 is_stmt 1 view -0
  63               		.cfi_startproc
  64               		.loc 1 41 1 is_stmt 0 view .LVU11
  65 0012 CF93      		push r28
  66               	.LCFI0:
  67               		.cfi_def_cfa_offset 3
  68               		.cfi_offset 28, -2
  69 0014 DF93      		push r29
  70               	.LCFI1:
  71               		.cfi_def_cfa_offset 4
  72               		.cfi_offset 29, -3
  73               	/* prologue: function */
  74               	/* frame size = 0 */
  75               	/* stack size = 2 */
  76               	.L__stack_usage = 2
  77 0016 D82F      		mov r29,r24
  78 0018 C92F      		mov r28,r25
  42:system/mutex.c ****     while(osTAS(&mutex->atomic))
  79               		.loc 1 42 5 is_stmt 1 view .LVU12
  80               	.LVL5:
  81               	.L4:
  82               		.loc 1 42 10 view .LVU13
  83               		.loc 1 42 11 is_stmt 0 view .LVU14
  84 001a 8D2F      		mov r24,r29
  85 001c 9C2F      		mov r25,r28
  86 001e 0E94 0000 		call osTAS
  87               	.LVL6:
  88               		.loc 1 42 10 view .LVU15
  89 0022 8111      		cpse r24,__zero_reg__
  90 0024 00C0      		rjmp .L5
  91               	/* epilogue start */
  43:system/mutex.c ****         osNonResumableYield();
  44:system/mutex.c **** }
  92               		.loc 1 44 1 view .LVU16
  93 0026 DF91      		pop r29
  94 0028 CF91      		pop r28
  95 002a 0895      		ret
  96               	.L5:
  43:system/mutex.c ****         osNonResumableYield();
  97               		.loc 1 43 9 is_stmt 1 view .LVU17
  98 002c 0E94 0000 		call osNonResumableYield
  99               	.LVL7:
 100 0030 00C0      		rjmp .L4
 101               		.cfi_endproc
 102               	.LFE18:
 104               	.global	osMutexUnlock
 106               	osMutexUnlock:
 107               	.LVL8:
 108               	.LFB19:
  45:system/mutex.c **** 
  46:system/mutex.c **** void osMutexUnlock(Mutex *mutex)
  47:system/mutex.c **** {
 109               		.loc 1 47 1 view -0
 110               		.cfi_startproc
 111               	/* prologue: function */
 112               	/* frame size = 0 */
 113               	/* stack size = 0 */
 114               	.L__stack_usage = 0
  48:system/mutex.c ****     osCAS(&mutex->atomic, 1, 0);
 115               		.loc 1 48 5 view .LVU19
 116 0032 40E0      		ldi r20,0
 117 0034 61E0      		ldi r22,lo8(1)
 118 0036 0E94 0000 		call osCAS
 119               	.LVL9:
  49:system/mutex.c ****     osResumableYield();
 120               		.loc 1 49 5 view .LVU20
 121 003a 0E94 0000 		call osResumableYield
 122               	.LVL10:
 123               	/* epilogue start */
  50:system/mutex.c **** }
 124               		.loc 1 50 1 is_stmt 0 view .LVU21
 125 003e 0895      		ret
 126               		.cfi_endproc
 127               	.LFE19:
 129               	.Letext0:
 130               		.file 2 "/usr/avr/include/stdlib.h"
 131               		.file 3 "/usr/lib/gcc/avr/9.2.0/include/stddef.h"
 132               		.file 4 "/usr/avr/include/stdint.h"
 133               		.file 5 "/usr/avr/include/stdio.h"
 134               		.file 6 "system/mutex.h"
 135               		.file 7 "system/asm.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 mutex.c
     /tmp/ccxGqkW3.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccxGqkW3.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccxGqkW3.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccxGqkW3.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccxGqkW3.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccxGqkW3.s:12     .text:0000000000000000 osMutexCreate
     /tmp/ccxGqkW3.s:41     .text:000000000000000e osMutexDestroy
     /tmp/ccxGqkW3.s:59     .text:0000000000000012 osMutexLock
     /tmp/ccxGqkW3.s:106    .text:0000000000000032 osMutexUnlock

UNDEFINED SYMBOLS
malloc
free
osTAS
osNonResumableYield
osCAS
osResumableYield
