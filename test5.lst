   1               		.file	"test5.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 4361 6C6C 		.string	"Callback function"
  12      6261 636B 
  12      2066 756E 
  12      6374 696F 
  12      6E00 
  13               		.text
  14               	.global	window_1_callback
  16               	window_1_callback:
  17               	.LVL0:
  18               	.LFB17:
  19               		.file 1 "test5.c"
   1:test5.c       **** #include "lib/delay.h"
   2:test5.c       **** #include "lib/gpio.h"
   3:test5.c       **** #include "lib/pirc_lcd/XPT2046.h"
   4:test5.c       **** #include "lib/uart.h"
   5:test5.c       **** #include "system/system.h"
   6:test5.c       **** #include <avr/io.h>
   7:test5.c       **** #include <stdbool.h>
   8:test5.c       **** #include <stdio.h>
   9:test5.c       **** 
  10:test5.c       **** 
  11:test5.c       **** 
  12:test5.c       **** 
  13:test5.c       **** #include "lib/pirc_lcd/LCD_Ili9341.h"
  14:test5.c       **** void window_1_callback(UG_MESSAGE *msg) { printf("Callback function\n"); }
  20               		.loc 1 14 41 view -0
  21               		.cfi_startproc
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 0 */
  25               	.L__stack_usage = 0
  26               		.loc 1 14 43 view .LVU1
  27 0000 80E0      		ldi r24,lo8(.LC0)
  28 0002 90E0      		ldi r25,hi8(.LC0)
  29               	.LVL1:
  30               		.loc 1 14 43 is_stmt 0 view .LVU2
  31 0004 0C94 0000 		jmp puts
  32               	.LVL2:
  33               		.cfi_endproc
  34               	.LFE17:
  36               		.section	.rodata.str1.1
  37               	.LC1:
  38 0012 4865 6C6C 		.string	"Hello"
  38      6F00 
  39               	.LC2:
  40 0018 5547 5F57 		.string	"UG_WindowCreate err!"
  40      696E 646F 
  40      7743 7265 
  40      6174 6520 
  40      6572 7221 
  41               	.LC3:
  42 002d 4950 2063 		.string	"IP config"
  42      6F6E 6669 
  42      6700 
  43               	.LC4:
  44 0037 5547 5F42 		.string	"UG_ButtonCreate err!"
  44      7574 746F 
  44      6E43 7265 
  44      6174 6520 
  44      6572 7221 
  45               	.LC5:
  46 004c 5547 5F42 		.string	"UG_ButtonSetForeColor err!"
  46      7574 746F 
  46      6E53 6574 
  46      466F 7265 
  46      436F 6C6F 
  47               	.LC6:
  48 0067 5547 5F42 		.string	"UG_ButtonSetBackColor err!"
  48      7574 746F 
  48      6E53 6574 
  48      4261 636B 
  48      436F 6C6F 
  49               	.LC7:
  50 0082 5547 5F42 		.string	"UG_ButtonShow err!"
  50      7574 746F 
  50      6E53 686F 
  50      7720 6572 
  50      7221 00
  51               	.LC8:
  52 0095 5547 5F57 		.string	"UG_WindowShow err!"
  52      696E 646F 
  52      7753 686F 
  52      7720 6572 
  52      7221 00
  53               	.LC9:
  54 00a8 4950 00   		.string	"IP"
  55               		.text
  56               	.global	draw_home_scren
  58               	draw_home_scren:
  59               	.LFB18:
  15:test5.c       **** #define MAX_OBJECTS 10
  16:test5.c       **** 
  17:test5.c       **** void draw_home_scren() {
  60               		.loc 1 17 24 is_stmt 1 view -0
  61               		.cfi_startproc
  62 0008 CF92      		push r12
  63               	.LCFI0:
  64               		.cfi_def_cfa_offset 3
  65               		.cfi_offset 12, -2
  66 000a DF92      		push r13
  67               	.LCFI1:
  68               		.cfi_def_cfa_offset 4
  69               		.cfi_offset 13, -3
  70 000c EF92      		push r14
  71               	.LCFI2:
  72               		.cfi_def_cfa_offset 5
  73               		.cfi_offset 14, -4
  74 000e FF92      		push r15
  75               	.LCFI3:
  76               		.cfi_def_cfa_offset 6
  77               		.cfi_offset 15, -5
  78 0010 0F93      		push r16
  79               	.LCFI4:
  80               		.cfi_def_cfa_offset 7
  81               		.cfi_offset 16, -6
  82 0012 1F93      		push r17
  83               	.LCFI5:
  84               		.cfi_def_cfa_offset 8
  85               		.cfi_offset 17, -7
  86 0014 CF93      		push r28
  87               	.LCFI6:
  88               		.cfi_def_cfa_offset 9
  89               		.cfi_offset 28, -8
  90 0016 DF93      		push r29
  91               	.LCFI7:
  92               		.cfi_def_cfa_offset 10
  93               		.cfi_offset 29, -9
  94 0018 CDB7      		in r28,__SP_L__
  95 001a DEB7      		in r29,__SP_H__
  96               	.LCFI8:
  97               		.cfi_def_cfa_register 28
  98 001c CE52      		subi r28,46
  99 001e D140      		sbci r29,1
 100               	.LCFI9:
 101               		.cfi_def_cfa_offset 312
 102 0020 0FB6      		in __tmp_reg__,__SREG__
 103 0022 F894      		cli
 104 0024 DEBF      		out __SP_H__,r29
 105 0026 0FBE      		out __SREG__,__tmp_reg__
 106 0028 CDBF      		out __SP_L__,r28
 107               	/* prologue: function */
 108               	/* frame size = 302 */
 109               	/* stack size = 310 */
 110               	.L__stack_usage = 310
  18:test5.c       ****   UG_WINDOW window;
 111               		.loc 1 18 3 view .LVU4
  19:test5.c       ****   UG_OBJECT obj_list[MAX_OBJECTS];
 112               		.loc 1 19 3 view .LVU5
  20:test5.c       ****   UG_BUTTON button;
 113               		.loc 1 20 3 view .LVU6
  21:test5.c       ****   UG_U8 btn_id = 1;
 114               		.loc 1 21 3 view .LVU7
 115               	.LVL3:
  22:test5.c       ****   struct cb *cb;
 116               		.loc 1 22 3 view .LVU8
  23:test5.c       **** 
  24:test5.c       ****   printf("Hello\n");
 117               		.loc 1 24 3 view .LVU9
 118 002a 80E0      		ldi r24,lo8(.LC1)
 119 002c 90E0      		ldi r25,hi8(.LC1)
 120 002e 0E94 0000 		call puts
 121               	.LVL4:
  25:test5.c       ****   int status;
 122               		.loc 1 25 3 view .LVU10
  26:test5.c       ****   status = UG_WindowCreate(&window, obj_list, MAX_OBJECTS, window_1_callback);
 123               		.loc 1 26 3 view .LVU11
 124               		.loc 1 26 12 is_stmt 0 view .LVU12
 125 0032 20E0      		ldi r18,lo8(gs(window_1_callback))
 126 0034 30E0      		ldi r19,hi8(gs(window_1_callback))
 127 0036 4AE0      		ldi r20,lo8(10)
 128 0038 BE01      		movw r22,r28
 129 003a 6F5F      		subi r22,-1
 130 003c 7F4F      		sbci r23,-1
 131 003e CE01      		movw r24,r28
 132 0040 8550      		subi r24,5
 133 0042 9F4F      		sbci r25,-1
 134 0044 0E94 0000 		call UG_WindowCreate
 135               	.LVL5:
  27:test5.c       ****   if (status != UG_RESULT_OK)
 136               		.loc 1 27 3 is_stmt 1 view .LVU13
 137               		.loc 1 27 6 is_stmt 0 view .LVU14
 138 0048 8823      		tst r24
 139 004a 01F0      		breq .L3
  28:test5.c       ****     printf("UG_WindowCreate err!\n");
 140               		.loc 1 28 5 is_stmt 1 view .LVU15
 141 004c 80E0      		ldi r24,lo8(.LC2)
 142 004e 90E0      		ldi r25,hi8(.LC2)
 143               	.LVL6:
 144               		.loc 1 28 5 is_stmt 0 view .LVU16
 145 0050 0E94 0000 		call puts
 146               	.LVL7:
 147               	.L3:
  29:test5.c       **** 
  30:test5.c       ****   UG_WindowSetBackColor(&window, ILI9341_BLACK);
 148               		.loc 1 30 3 is_stmt 1 view .LVU17
 149 0054 70E0      		ldi r23,0
 150 0056 60E0      		ldi r22,0
 151 0058 CE01      		movw r24,r28
 152 005a 8550      		subi r24,5
 153 005c 9F4F      		sbci r25,-1
 154 005e 0E94 0000 		call UG_WindowSetBackColor
 155               	.LVL8:
  31:test5.c       ****   UG_WindowSetTitleTextColor(&window, ILI9341_BLACK);
 156               		.loc 1 31 3 view .LVU18
 157 0062 70E0      		ldi r23,0
 158 0064 60E0      		ldi r22,0
 159 0066 CE01      		movw r24,r28
 160 0068 8550      		subi r24,5
 161 006a 9F4F      		sbci r25,-1
 162 006c 0E94 0000 		call UG_WindowSetTitleTextColor
 163               	.LVL9:
  32:test5.c       ****   UG_WindowSetTitleColor(&window, ILI9341_GREEN);
 164               		.loc 1 32 3 view .LVU19
 165 0070 60EE      		ldi r22,lo8(-32)
 166 0072 77E0      		ldi r23,lo8(7)
 167 0074 CE01      		movw r24,r28
 168 0076 8550      		subi r24,5
 169 0078 9F4F      		sbci r25,-1
 170 007a 0E94 0000 		call UG_WindowSetTitleColor
 171               	.LVL10:
  33:test5.c       ****   UG_WindowSetTitleText(&window, "IP config");
 172               		.loc 1 33 3 view .LVU20
 173 007e 60E0      		ldi r22,lo8(.LC3)
 174 0080 70E0      		ldi r23,hi8(.LC3)
 175 0082 CE01      		movw r24,r28
 176 0084 8550      		subi r24,5
 177 0086 9F4F      		sbci r25,-1
 178 0088 0E94 0000 		call UG_WindowSetTitleText
 179               	.LVL11:
  34:test5.c       ****   UG_WindowSetTitleHeight(&window, 30);
 180               		.loc 1 34 3 view .LVU21
 181 008c 6EE1      		ldi r22,lo8(30)
 182 008e CE01      		movw r24,r28
 183 0090 8550      		subi r24,5
 184 0092 9F4F      		sbci r25,-1
 185 0094 0E94 0000 		call UG_WindowSetTitleHeight
 186               	.LVL12:
  35:test5.c       **** 
  36:test5.c       ****   status = UG_ButtonCreate(&window, &button, btn_id, 10, 10, 110, 60);
 187               		.loc 1 36 3 view .LVU22
 188               		.loc 1 36 12 is_stmt 0 view .LVU23
 189 0098 8CE3      		ldi r24,lo8(60)
 190 009a C82E      		mov r12,r24
 191 009c D12C      		mov r13,__zero_reg__
 192 009e 9EE6      		ldi r25,lo8(110)
 193 00a0 E92E      		mov r14,r25
 194 00a2 F12C      		mov r15,__zero_reg__
 195 00a4 0AE0      		ldi r16,lo8(10)
 196 00a6 10E0      		ldi r17,0
 197 00a8 2AE0      		ldi r18,lo8(10)
 198 00aa 30E0      		ldi r19,0
 199 00ac 41E0      		ldi r20,lo8(1)
 200 00ae BE01      		movw r22,r28
 201 00b0 625E      		subi r22,-30
 202 00b2 7E4F      		sbci r23,-2
 203 00b4 CE01      		movw r24,r28
 204 00b6 8550      		subi r24,5
 205 00b8 9F4F      		sbci r25,-1
 206 00ba 0E94 0000 		call UG_ButtonCreate
 207               	.LVL13:
  37:test5.c       ****   if (status != UG_RESULT_OK)
 208               		.loc 1 37 3 is_stmt 1 view .LVU24
 209               		.loc 1 37 6 is_stmt 0 view .LVU25
 210 00be 8823      		tst r24
 211 00c0 01F0      		breq .L4
  38:test5.c       ****     printf("UG_ButtonCreate err!\n");
 212               		.loc 1 38 5 is_stmt 1 view .LVU26
 213 00c2 80E0      		ldi r24,lo8(.LC4)
 214 00c4 90E0      		ldi r25,hi8(.LC4)
 215               	.LVL14:
 216               		.loc 1 38 5 is_stmt 0 view .LVU27
 217 00c6 0E94 0000 		call puts
 218               	.LVL15:
 219               	.L4:
  39:test5.c       **** 
  40:test5.c       ****   status = UG_ButtonSetForeColor(&window, btn_id, ILI9341_BLACK);
 220               		.loc 1 40 3 is_stmt 1 view .LVU28
 221               		.loc 1 40 12 is_stmt 0 view .LVU29
 222 00ca 50E0      		ldi r21,0
 223 00cc 40E0      		ldi r20,0
 224 00ce 61E0      		ldi r22,lo8(1)
 225 00d0 CE01      		movw r24,r28
 226 00d2 8550      		subi r24,5
 227 00d4 9F4F      		sbci r25,-1
 228 00d6 0E94 0000 		call UG_ButtonSetForeColor
 229               	.LVL16:
  41:test5.c       ****   if (status != UG_RESULT_OK)
 230               		.loc 1 41 3 is_stmt 1 view .LVU30
 231               		.loc 1 41 6 is_stmt 0 view .LVU31
 232 00da 8823      		tst r24
 233 00dc 01F0      		breq .L5
  42:test5.c       ****     printf("UG_ButtonSetForeColor err!\n");
 234               		.loc 1 42 5 is_stmt 1 view .LVU32
 235 00de 80E0      		ldi r24,lo8(.LC5)
 236 00e0 90E0      		ldi r25,hi8(.LC5)
 237               	.LVL17:
 238               		.loc 1 42 5 is_stmt 0 view .LVU33
 239 00e2 0E94 0000 		call puts
 240               	.LVL18:
 241               	.L5:
  43:test5.c       **** 
  44:test5.c       ****   status = UG_ButtonSetBackColor(&window, btn_id, ILI9341_YELLOW);
 242               		.loc 1 44 3 is_stmt 1 view .LVU34
 243               		.loc 1 44 12 is_stmt 0 view .LVU35
 244 00e6 40EE      		ldi r20,lo8(-32)
 245 00e8 5FEF      		ldi r21,lo8(-1)
 246 00ea 61E0      		ldi r22,lo8(1)
 247 00ec CE01      		movw r24,r28
 248 00ee 8550      		subi r24,5
 249 00f0 9F4F      		sbci r25,-1
 250 00f2 0E94 0000 		call UG_ButtonSetBackColor
 251               	.LVL19:
  45:test5.c       ****   if (status != UG_RESULT_OK)
 252               		.loc 1 45 3 is_stmt 1 view .LVU36
 253               		.loc 1 45 6 is_stmt 0 view .LVU37
 254 00f6 8823      		tst r24
 255 00f8 01F0      		breq .L6
  46:test5.c       ****     printf("UG_ButtonSetBackColor err!\n");
 256               		.loc 1 46 5 is_stmt 1 view .LVU38
 257 00fa 80E0      		ldi r24,lo8(.LC6)
 258 00fc 90E0      		ldi r25,hi8(.LC6)
 259               	.LVL20:
 260               		.loc 1 46 5 is_stmt 0 view .LVU39
 261 00fe 0E94 0000 		call puts
 262               	.LVL21:
 263               	.L6:
  47:test5.c       **** 
  48:test5.c       ****   status = UG_ButtonShow(&window, btn_id);
 264               		.loc 1 48 3 is_stmt 1 view .LVU40
 265               		.loc 1 48 12 is_stmt 0 view .LVU41
 266 0102 61E0      		ldi r22,lo8(1)
 267 0104 CE01      		movw r24,r28
 268 0106 8550      		subi r24,5
 269 0108 9F4F      		sbci r25,-1
 270 010a 0E94 0000 		call UG_ButtonShow
 271               	.LVL22:
  49:test5.c       ****   if (status != UG_RESULT_OK)
 272               		.loc 1 49 3 is_stmt 1 view .LVU42
 273               		.loc 1 49 6 is_stmt 0 view .LVU43
 274 010e 8823      		tst r24
 275 0110 01F0      		breq .L7
  50:test5.c       ****     printf("UG_ButtonShow err!\n");
 276               		.loc 1 50 5 is_stmt 1 view .LVU44
 277 0112 80E0      		ldi r24,lo8(.LC7)
 278 0114 90E0      		ldi r25,hi8(.LC7)
 279               	.LVL23:
 280               		.loc 1 50 5 is_stmt 0 view .LVU45
 281 0116 0E94 0000 		call puts
 282               	.LVL24:
 283               	.L7:
  51:test5.c       **** 
  52:test5.c       ****   UG_WindowSetTitleInactiveColor(&window, ILI9341_GREEN);
 284               		.loc 1 52 3 is_stmt 1 view .LVU46
 285 011a 60EE      		ldi r22,lo8(-32)
 286 011c 77E0      		ldi r23,lo8(7)
 287 011e CE01      		movw r24,r28
 288 0120 8550      		subi r24,5
 289 0122 9F4F      		sbci r25,-1
 290 0124 0E94 0000 		call UG_WindowSetTitleInactiveColor
 291               	.LVL25:
  53:test5.c       **** 
  54:test5.c       ****   status = UG_WindowShow(&window);
 292               		.loc 1 54 3 view .LVU47
 293               		.loc 1 54 12 is_stmt 0 view .LVU48
 294 0128 CE01      		movw r24,r28
 295 012a 8550      		subi r24,5
 296 012c 9F4F      		sbci r25,-1
 297 012e 0E94 0000 		call UG_WindowShow
 298               	.LVL26:
  55:test5.c       ****   if (status != UG_RESULT_OK)
 299               		.loc 1 55 3 is_stmt 1 view .LVU49
 300               		.loc 1 55 6 is_stmt 0 view .LVU50
 301 0132 8823      		tst r24
 302 0134 01F0      		breq .L8
  56:test5.c       ****     printf("UG_WindowShow err!\n");
 303               		.loc 1 56 5 is_stmt 1 view .LVU51
 304 0136 80E0      		ldi r24,lo8(.LC8)
 305 0138 90E0      		ldi r25,hi8(.LC8)
 306               	.LVL27:
 307               		.loc 1 56 5 is_stmt 0 view .LVU52
 308 013a 0E94 0000 		call puts
 309               	.LVL28:
 310               	.L8:
  57:test5.c       **** 
  58:test5.c       ****   UG_ButtonSetText(&window, btn_id, "IP");
 311               		.loc 1 58 3 is_stmt 1 view .LVU53
 312 013e 40E0      		ldi r20,lo8(.LC9)
 313 0140 50E0      		ldi r21,hi8(.LC9)
 314 0142 61E0      		ldi r22,lo8(1)
 315 0144 CE01      		movw r24,r28
 316 0146 8550      		subi r24,5
 317 0148 9F4F      		sbci r25,-1
 318 014a 0E94 0000 		call UG_ButtonSetText
 319               	.LVL29:
  59:test5.c       **** 
  60:test5.c       ****   UG_Update();
 320               		.loc 1 60 3 view .LVU54
 321 014e 0E94 0000 		call UG_Update
 322               	.LVL30:
 323               	/* epilogue start */
  61:test5.c       ****   /*
  62:test5.c       **** 
  63:test5.c       ****       UG_ConsolePutString("Hello world\n");
  64:test5.c       ****       UG_DrawLine(0,0, 320,0, ILI9341_WHITE);
  65:test5.c       ****     */
  66:test5.c       **** }
 324               		.loc 1 66 1 is_stmt 0 view .LVU55
 325 0152 C25D      		subi r28,-46
 326 0154 DE4F      		sbci r29,-2
 327 0156 0FB6      		in __tmp_reg__,__SREG__
 328 0158 F894      		cli
 329 015a DEBF      		out __SP_H__,r29
 330 015c 0FBE      		out __SREG__,__tmp_reg__
 331 015e CDBF      		out __SP_L__,r28
 332 0160 DF91      		pop r29
 333 0162 CF91      		pop r28
 334 0164 1F91      		pop r17
 335 0166 0F91      		pop r16
 336 0168 FF90      		pop r15
 337 016a EF90      		pop r14
 338 016c DF90      		pop r13
 339 016e CF90      		pop r12
 340 0170 0895      		ret
 341               		.cfi_endproc
 342               	.LFE18:
 344               		.section	.rodata.str1.1
 345               	.LC10:
 346 00ab 5475 6368 		.string	"Tuching, X = %d, Y = %d\n"
 346      696E 672C 
 346      2058 203D 
 346      2025 642C 
 346      2059 203D 
 347               		.section	.text.startup,"ax",@progbits
 348               	.global	main
 350               	main:
 351               	.LFB19:
  67:test5.c       **** 
  68:test5.c       **** int main() {
 352               		.loc 1 68 12 is_stmt 1 view -0
 353               		.cfi_startproc
 354 0000 00D0      		rcall .
 355 0002 00D0      		rcall .
 356               	.LCFI10:
 357               		.cfi_def_cfa_offset 6
 358 0004 CDB7      		in r28,__SP_L__
 359 0006 DEB7      		in r29,__SP_H__
 360               	.LCFI11:
 361               		.cfi_def_cfa_register 28
 362               	/* prologue: function */
 363               	/* frame size = 4 */
 364               	/* stack size = 4 */
 365               	.L__stack_usage = 4
  69:test5.c       ****   LCD_Init();
 366               		.loc 1 69 3 view .LVU57
 367 0008 0E94 0000 		call LCD_Init
 368               	.LVL31:
  70:test5.c       ****   XPT2046_Init(240, 320);
 369               		.loc 1 70 3 view .LVU58
 370 000c 60E4      		ldi r22,lo8(64)
 371 000e 71E0      		ldi r23,lo8(1)
 372 0010 80EF      		ldi r24,lo8(-16)
 373 0012 90E0      		ldi r25,0
 374 0014 0E94 0000 		call XPT2046_Init
 375               	.LVL32:
  71:test5.c       ****   XPT2046_setCalibration(122, 264, 1775, 1972);
 376               		.loc 1 71 3 view .LVU59
 377 0018 24EB      		ldi r18,lo8(-76)
 378 001a 37E0      		ldi r19,lo8(7)
 379 001c 4FEE      		ldi r20,lo8(-17)
 380 001e 56E0      		ldi r21,lo8(6)
 381 0020 68E0      		ldi r22,lo8(8)
 382 0022 71E0      		ldi r23,lo8(1)
 383 0024 8AE7      		ldi r24,lo8(122)
 384 0026 90E0      		ldi r25,0
 385 0028 0E94 0000 		call XPT2046_setCalibration
 386               	.LVL33:
  72:test5.c       **** 
  73:test5.c       ****   uart_init();
 387               		.loc 1 73 3 view .LVU60
 388 002c 0E94 0000 		call uart_init
 389               	.LVL34:
  74:test5.c       ****   stdin = &uart_input;
 390               		.loc 1 74 3 view .LVU61
 391               		.loc 1 74 9 is_stmt 0 view .LVU62
 392 0030 80E0      		ldi r24,lo8(uart_input)
 393 0032 90E0      		ldi r25,hi8(uart_input)
 394 0034 9093 0000 		sts __iob+1,r25
 395 0038 8093 0000 		sts __iob,r24
  75:test5.c       ****   stdout = &uart_output;
 396               		.loc 1 75 3 is_stmt 1 view .LVU63
 397               		.loc 1 75 10 is_stmt 0 view .LVU64
 398 003c 80E0      		ldi r24,lo8(uart_output)
 399 003e 90E0      		ldi r25,hi8(uart_output)
 400 0040 9093 0000 		sts __iob+2+1,r25
 401 0044 8093 0000 		sts __iob+2,r24
  76:test5.c       **** 
  77:test5.c       ****   draw_home_scren();
 402               		.loc 1 77 3 is_stmt 1 view .LVU65
 403 0048 0E94 0000 		call draw_home_scren
 404               	.LVL35:
  78:test5.c       **** 
  79:test5.c       ****   uint8_t update = 0;
 405               		.loc 1 79 3 view .LVU66
  80:test5.c       **** 
  81:test5.c       ****   uint16_t x, y, x_prev, y_prev;
  82:test5.c       ****   while (1) {
  83:test5.c       ****     if (XPT2046_isTouching()) {
  84:test5.c       ****       // XPT2046_getPosition(&x,&y,MODE_DFR,32);
  85:test5.c       ****       XPT2046_getPosition(&x, &y, MODE_DFR, 32);
  86:test5.c       ****       printf("Tuching, X = %d, Y = %d\n", x, y);
 406               		.loc 1 86 7 is_stmt 0 view .LVU67
 407 004c 00E0      		ldi r16,lo8(.LC10)
 408 004e 10E0      		ldi r17,hi8(.LC10)
 409               	.L30:
 410               	.LVL36:
  81:test5.c       ****   while (1) {
 411               		.loc 1 81 3 is_stmt 1 view .LVU68
  82:test5.c       ****     if (XPT2046_isTouching()) {
 412               		.loc 1 82 3 view .LVU69
  83:test5.c       ****       // XPT2046_getPosition(&x,&y,MODE_DFR,32);
 413               		.loc 1 83 5 view .LVU70
  83:test5.c       ****       // XPT2046_getPosition(&x,&y,MODE_DFR,32);
 414               		.loc 1 83 9 is_stmt 0 view .LVU71
 415 0050 0E94 0000 		call XPT2046_isTouching
 416               	.LVL37:
  83:test5.c       ****       // XPT2046_getPosition(&x,&y,MODE_DFR,32);
 417               		.loc 1 83 8 view .LVU72
 418 0054 8823      		tst r24
 419 0056 01F0      		breq .L28
  85:test5.c       ****       printf("Tuching, X = %d, Y = %d\n", x, y);
 420               		.loc 1 85 7 is_stmt 1 view .LVU73
 421 0058 20E2      		ldi r18,lo8(32)
 422 005a 41E0      		ldi r20,lo8(1)
 423 005c BE01      		movw r22,r28
 424 005e 6F5F      		subi r22,-1
 425 0060 7F4F      		sbci r23,-1
 426 0062 CE01      		movw r24,r28
 427 0064 0396      		adiw r24,3
 428 0066 0E94 0000 		call XPT2046_getPosition
 429               	.LVL38:
 430               		.loc 1 86 7 view .LVU74
 431 006a 8A81      		ldd r24,Y+2
 432 006c 8F93      		push r24
 433 006e 8981      		ldd r24,Y+1
 434 0070 8F93      		push r24
 435 0072 8C81      		ldd r24,Y+4
 436 0074 8F93      		push r24
 437 0076 8B81      		ldd r24,Y+3
 438 0078 8F93      		push r24
 439 007a 1F93      		push r17
 440 007c 0F93      		push r16
 441 007e 0E94 0000 		call printf
 442               	.LVL39:
  87:test5.c       ****       UG_TouchUpdate(x, y, TOUCH_STATE_PRESSED);
 443               		.loc 1 87 7 view .LVU75
 444 0082 6981      		ldd r22,Y+1
 445 0084 7A81      		ldd r23,Y+2
 446 0086 41E0      		ldi r20,lo8(1)
 447 0088 8B81      		ldd r24,Y+3
 448 008a 9C81      		ldd r25,Y+4
 449 008c 0E94 0000 		call UG_TouchUpdate
 450               	.LVL40:
  88:test5.c       ****       
  89:test5.c       ****       x_prev = x;
 451               		.loc 1 89 7 view .LVU76
 452               		.loc 1 89 14 is_stmt 0 view .LVU77
 453 0090 EB80      		ldd r14,Y+3
 454 0092 FC80      		ldd r15,Y+4
 455               	.LVL41:
  90:test5.c       ****       y_prev = y;
 456               		.loc 1 90 7 is_stmt 1 view .LVU78
 457               		.loc 1 90 14 is_stmt 0 view .LVU79
 458 0094 C980      		ldd r12,Y+1
 459 0096 DA80      		ldd r13,Y+2
 460               	.LVL42:
  91:test5.c       ****       update = 1;
 461               		.loc 1 91 7 is_stmt 1 view .LVU80
 462               		.loc 1 91 7 is_stmt 0 view .LVU81
 463 0098 0F90      		pop __tmp_reg__
 464 009a 0F90      		pop __tmp_reg__
 465 009c 0F90      		pop __tmp_reg__
 466 009e 0F90      		pop __tmp_reg__
 467 00a0 0F90      		pop __tmp_reg__
 468 00a2 0F90      		pop __tmp_reg__
 469               	.L29:
  92:test5.c       ****     } else {
  93:test5.c       ****       UG_TouchUpdate(x_prev, y_prev, TOUCH_STATE_RELEASED);
  94:test5.c       ****       update = 1;
  95:test5.c       ****     }
  96:test5.c       **** 
  97:test5.c       ****     if (update == 1)
 470               		.loc 1 97 5 is_stmt 1 view .LVU82
  98:test5.c       ****     {
  99:test5.c       ****         UG_Update();
 471               		.loc 1 99 9 view .LVU83
 472 00a4 0E94 0000 		call UG_Update
 473               	.LVL43:
 100:test5.c       ****         update = 0;
 474               		.loc 1 100 9 view .LVU84
 475               		.loc 1 100 9 is_stmt 0 view .LVU85
 476 00a8 00C0      		rjmp .L30
 477               	.L28:
  93:test5.c       ****       update = 1;
 478               		.loc 1 93 7 is_stmt 1 view .LVU86
 479 00aa 40E0      		ldi r20,0
 480 00ac B601      		movw r22,r12
 481 00ae C701      		movw r24,r14
 482 00b0 0E94 0000 		call UG_TouchUpdate
 483               	.LVL44:
  94:test5.c       ****     }
 484               		.loc 1 94 7 view .LVU87
  94:test5.c       ****     }
 485               		.loc 1 94 7 is_stmt 0 view .LVU88
 486 00b4 00C0      		rjmp .L29
 487               		.cfi_endproc
 488               	.LFE19:
 490               	.global	uart_input
 491               		.data
 494               	uart_input:
 495 0000 0000 00   		.zero	3
 496 0003 01        		.byte	1
 497 0004 0000 0000 		.zero	4
 498 0008 0000      		.word	0
 499 000a 0000      		.word	gs(uart_getchar)
 500 000c 0000      		.word	0
 501               	.global	uart_output
 504               	uart_output:
 505 000e 0000 00   		.zero	3
 506 0011 02        		.byte	2
 507 0012 0000 0000 		.zero	4
 508 0016 0000      		.word	gs(uart_putchar)
 509 0018 0000      		.word	0
 510 001a 0000      		.word	0
 511               		.text
 512               	.Letext0:
 513               		.file 2 "/usr/avr/include/stdint.h"
 514               		.file 3 "lib/pirc_lcd/XPT2046.h"
 515               		.file 4 "/usr/lib/gcc/avr/9.2.0/include/stddef.h"
 516               		.file 5 "/usr/avr/include/stdio.h"
 517               		.file 6 "lib/uart.h"
 518               		.file 7 "/usr/avr/include/stdlib.h"
 519               		.file 8 "lib/pirc_lcd/ugui_config.h"
 520               		.file 9 "lib/pirc_lcd/ugui.h"
 521               		.file 10 "lib/pirc_lcd/LCD_Ili9341.h"
 522               		.file 11 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 test5.c
     /tmp/ccZWcOsO.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccZWcOsO.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccZWcOsO.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccZWcOsO.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccZWcOsO.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccZWcOsO.s:16     .text:0000000000000000 window_1_callback
     /tmp/ccZWcOsO.s:58     .text:0000000000000008 draw_home_scren
     /tmp/ccZWcOsO.s:350    .text.startup:0000000000000000 main
     /tmp/ccZWcOsO.s:494    .data:0000000000000000 uart_input
     /tmp/ccZWcOsO.s:504    .data:000000000000000e uart_output

UNDEFINED SYMBOLS
puts
UG_WindowCreate
UG_WindowSetBackColor
UG_WindowSetTitleTextColor
UG_WindowSetTitleColor
UG_WindowSetTitleText
UG_WindowSetTitleHeight
UG_ButtonCreate
UG_ButtonSetForeColor
UG_ButtonSetBackColor
UG_ButtonShow
UG_WindowSetTitleInactiveColor
UG_WindowShow
UG_ButtonSetText
UG_Update
LCD_Init
XPT2046_Init
XPT2046_setCalibration
uart_init
__iob
XPT2046_isTouching
XPT2046_getPosition
printf
UG_TouchUpdate
uart_getchar
uart_putchar
__do_copy_data
