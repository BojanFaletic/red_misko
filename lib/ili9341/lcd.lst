   1               		.file	"lcd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	lcd_ddr_init
  12               	lcd_ddr_init:
  13               	.LFB7:
  14               		.file 1 "lib/ili9341/lcd.c"
   1:lib/ili9341/lcd.c **** #include <avr/io.h>
   2:lib/ili9341/lcd.c **** #include <util/delay.h>
   3:lib/ili9341/lcd.c **** #include <math.h>
   4:lib/ili9341/lcd.c **** 
   5:lib/ili9341/lcd.c **** #include "lcd.h"
   6:lib/ili9341/lcd.c **** #include "ili9341cmd.h"
   7:lib/ili9341/lcd.c **** #include "font.c"
   8:lib/ili9341/lcd.c **** #include "../spi.h"
   9:lib/ili9341/lcd.c **** #include "../gpio.h"
  10:lib/ili9341/lcd.c **** #include "colors.h"
  11:lib/ili9341/lcd.c **** 
  12:lib/ili9341/lcd.c **** #define SPI_DIRECTION_PORT DDRB
  13:lib/ili9341/lcd.c **** #define SPI_PORT PORTB
  14:lib/ili9341/lcd.c **** #define SPI_CS PINB2
  15:lib/ili9341/lcd.c **** #define SPI_DC PINB0
  16:lib/ili9341/lcd.c **** 
  17:lib/ili9341/lcd.c **** #define CONTROL_DIRECTION_PORT DDRD
  18:lib/ili9341/lcd.c **** #define CONTROL_PORT PORTD
  19:lib/ili9341/lcd.c **** #define BACKLIGHT_PIN PIND6
  20:lib/ili9341/lcd.c **** #define RESET PIND7
  21:lib/ili9341/lcd.c **** 
  22:lib/ili9341/lcd.c **** uint16_t lcd_max_x, lcd_max_y;
  23:lib/ili9341/lcd.c **** uint8_t lcd_orientation;
  24:lib/ili9341/lcd.c **** uint16_t lcd_bg_color = black;
  25:lib/ili9341/lcd.c **** 
  26:lib/ili9341/lcd.c **** void lcd_ddr_init()
  27:lib/ili9341/lcd.c **** {
  15               		.loc 1 27 1 view -0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  28:lib/ili9341/lcd.c ****     SPI_DIRECTION_PORT |= _BV(SPI_CS) | _BV(SPI_DC);
  21               		.loc 1 28 5 view .LVU1
  22               		.loc 1 28 24 is_stmt 0 view .LVU2
  23 0000 84B1      		in r24,0x4
  24 0002 8560      		ori r24,lo8(5)
  25 0004 84B9      		out 0x4,r24
  29:lib/ili9341/lcd.c ****     CONTROL_DIRECTION_PORT |= _BV(BACKLIGHT_PIN) | _BV(RESET); 
  26               		.loc 1 29 5 is_stmt 1 view .LVU3
  27               		.loc 1 29 28 is_stmt 0 view .LVU4
  28 0006 8AB1      		in r24,0xa
  29 0008 806C      		ori r24,lo8(-64)
  30 000a 8AB9      		out 0xa,r24
  31               	/* epilogue start */
  30:lib/ili9341/lcd.c **** }
  32               		.loc 1 30 1 view .LVU5
  33 000c 0895      		ret
  34               		.cfi_endproc
  35               	.LFE7:
  37               	.global	lcd_cs_low
  39               	lcd_cs_low:
  40               	.LFB8:
  31:lib/ili9341/lcd.c **** 
  32:lib/ili9341/lcd.c **** 
  33:lib/ili9341/lcd.c **** void lcd_cs_low()
  34:lib/ili9341/lcd.c **** {
  41               		.loc 1 34 1 is_stmt 1 view -0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  35:lib/ili9341/lcd.c **** 	SPI_PORT &=~ _BV(SPI_CS);
  47               		.loc 1 35 2 view .LVU7
  48               		.loc 1 35 11 is_stmt 0 view .LVU8
  49 000e 2A98      		cbi 0x5,2
  50               	/* epilogue start */
  36:lib/ili9341/lcd.c **** }
  51               		.loc 1 36 1 view .LVU9
  52 0010 0895      		ret
  53               		.cfi_endproc
  54               	.LFE8:
  56               	.global	lcd_cs_high
  58               	lcd_cs_high:
  59               	.LFB9:
  37:lib/ili9341/lcd.c **** 
  38:lib/ili9341/lcd.c **** void lcd_cs_high()
  39:lib/ili9341/lcd.c **** {
  60               		.loc 1 39 1 is_stmt 1 view -0
  61               		.cfi_startproc
  62               	/* prologue: function */
  63               	/* frame size = 0 */
  64               	/* stack size = 0 */
  65               	.L__stack_usage = 0
  40:lib/ili9341/lcd.c **** 	SPI_PORT |= _BV(SPI_CS);
  66               		.loc 1 40 2 view .LVU11
  67               		.loc 1 40 11 is_stmt 0 view .LVU12
  68 0012 2A9A      		sbi 0x5,2
  69               	/* epilogue start */
  41:lib/ili9341/lcd.c **** }
  70               		.loc 1 41 1 view .LVU13
  71 0014 0895      		ret
  72               		.cfi_endproc
  73               	.LFE9:
  75               	.global	lcd_dc_low
  77               	lcd_dc_low:
  78               	.LFB10:
  42:lib/ili9341/lcd.c **** 
  43:lib/ili9341/lcd.c **** void lcd_dc_low()
  44:lib/ili9341/lcd.c **** {
  79               		.loc 1 44 1 is_stmt 1 view -0
  80               		.cfi_startproc
  81               	/* prologue: function */
  82               	/* frame size = 0 */
  83               	/* stack size = 0 */
  84               	.L__stack_usage = 0
  45:lib/ili9341/lcd.c **** 	SPI_PORT &= ~_BV(SPI_DC);
  85               		.loc 1 45 2 view .LVU15
  86               		.loc 1 45 11 is_stmt 0 view .LVU16
  87 0016 2898      		cbi 0x5,0
  88               	/* epilogue start */
  46:lib/ili9341/lcd.c **** }
  89               		.loc 1 46 1 view .LVU17
  90 0018 0895      		ret
  91               		.cfi_endproc
  92               	.LFE10:
  94               	.global	lcd_dc_high
  96               	lcd_dc_high:
  97               	.LFB11:
  47:lib/ili9341/lcd.c **** 
  48:lib/ili9341/lcd.c **** void lcd_dc_high()
  49:lib/ili9341/lcd.c **** {
  98               		.loc 1 49 1 is_stmt 1 view -0
  99               		.cfi_startproc
 100               	/* prologue: function */
 101               	/* frame size = 0 */
 102               	/* stack size = 0 */
 103               	.L__stack_usage = 0
  50:lib/ili9341/lcd.c **** 	SPI_PORT |= _BV(SPI_DC);
 104               		.loc 1 50 2 view .LVU19
 105               		.loc 1 50 11 is_stmt 0 view .LVU20
 106 001a 289A      		sbi 0x5,0
 107               	/* epilogue start */
  51:lib/ili9341/lcd.c **** }
 108               		.loc 1 51 1 view .LVU21
 109 001c 0895      		ret
 110               		.cfi_endproc
 111               	.LFE11:
 113               	.global	backlight_off
 115               	backlight_off:
 116               	.LFB12:
  52:lib/ili9341/lcd.c **** 
  53:lib/ili9341/lcd.c **** void backlight_off()
  54:lib/ili9341/lcd.c **** {
 117               		.loc 1 54 1 is_stmt 1 view -0
 118               		.cfi_startproc
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
  55:lib/ili9341/lcd.c **** 	CONTROL_PORT |= _BV(BACKLIGHT_PIN);
 123               		.loc 1 55 2 view .LVU23
 124               		.loc 1 55 15 is_stmt 0 view .LVU24
 125 001e 5E9A      		sbi 0xb,6
 126               	/* epilogue start */
  56:lib/ili9341/lcd.c **** }
 127               		.loc 1 56 1 view .LVU25
 128 0020 0895      		ret
 129               		.cfi_endproc
 130               	.LFE12:
 132               	.global	lcd_backlight_on
 134               	lcd_backlight_on:
 135               	.LFB13:
  57:lib/ili9341/lcd.c **** 
  58:lib/ili9341/lcd.c **** void lcd_backlight_on()
  59:lib/ili9341/lcd.c **** {
 136               		.loc 1 59 1 is_stmt 1 view -0
 137               		.cfi_startproc
 138               	/* prologue: function */
 139               	/* frame size = 0 */
 140               	/* stack size = 0 */
 141               	.L__stack_usage = 0
  60:lib/ili9341/lcd.c **** 	CONTROL_PORT &= ~_BV(BACKLIGHT_PIN);
 142               		.loc 1 60 2 view .LVU27
 143               		.loc 1 60 15 is_stmt 0 view .LVU28
 144 0022 5E98      		cbi 0xb,6
 145               	/* epilogue start */
  61:lib/ili9341/lcd.c **** }
 146               		.loc 1 61 1 view .LVU29
 147 0024 0895      		ret
 148               		.cfi_endproc
 149               	.LFE13:
 151               	.global	lcd_rst_on
 153               	lcd_rst_on:
 154               	.LFB14:
  62:lib/ili9341/lcd.c **** 
  63:lib/ili9341/lcd.c **** void lcd_rst_on()
  64:lib/ili9341/lcd.c **** {
 155               		.loc 1 64 1 is_stmt 1 view -0
 156               		.cfi_startproc
 157               	/* prologue: function */
 158               	/* frame size = 0 */
 159               	/* stack size = 0 */
 160               	.L__stack_usage = 0
  65:lib/ili9341/lcd.c ****     CONTROL_PORT |= _BV(RESET);   
 161               		.loc 1 65 5 view .LVU31
 162               		.loc 1 65 18 is_stmt 0 view .LVU32
 163 0026 5F9A      		sbi 0xb,7
 164               	/* epilogue start */
  66:lib/ili9341/lcd.c **** }
 165               		.loc 1 66 1 view .LVU33
 166 0028 0895      		ret
 167               		.cfi_endproc
 168               	.LFE14:
 170               	.global	lcd_rst_off
 172               	lcd_rst_off:
 173               	.LFB15:
  67:lib/ili9341/lcd.c **** 
  68:lib/ili9341/lcd.c **** void lcd_rst_off()
  69:lib/ili9341/lcd.c **** {
 174               		.loc 1 69 1 is_stmt 1 view -0
 175               		.cfi_startproc
 176               	/* prologue: function */
 177               	/* frame size = 0 */
 178               	/* stack size = 0 */
 179               	.L__stack_usage = 0
  70:lib/ili9341/lcd.c ****     CONTROL_PORT &= ~_BV(RESET);   
 180               		.loc 1 70 5 view .LVU35
 181               		.loc 1 70 18 is_stmt 0 view .LVU36
 182 002a 5F98      		cbi 0xb,7
 183               	/* epilogue start */
  71:lib/ili9341/lcd.c **** }
 184               		.loc 1 71 1 view .LVU37
 185 002c 0895      		ret
 186               		.cfi_endproc
 187               	.LFE15:
 189               	.global	lcd_send_cmd
 191               	lcd_send_cmd:
 192               	.LVL0:
 193               	.LFB16:
  72:lib/ili9341/lcd.c **** 
  73:lib/ili9341/lcd.c **** 
  74:lib/ili9341/lcd.c **** void lcd_send_cmd(char data)
  75:lib/ili9341/lcd.c **** {
 194               		.loc 1 75 1 is_stmt 1 view -0
 195               		.cfi_startproc
 196               		.loc 1 75 1 is_stmt 0 view .LVU39
 197 002e CF93      		push r28
 198               	.LCFI0:
 199               		.cfi_def_cfa_offset 3
 200               		.cfi_offset 28, -2
 201               	/* prologue: function */
 202               	/* frame size = 0 */
 203               	/* stack size = 1 */
 204               	.L__stack_usage = 1
 205 0030 C82F      		mov r28,r24
  76:lib/ili9341/lcd.c ****     lcd_dc_low();
 206               		.loc 1 76 5 is_stmt 1 view .LVU40
 207 0032 0E94 0000 		call lcd_dc_low
 208               	.LVL1:
  77:lib/ili9341/lcd.c ****     lcd_cs_low();
 209               		.loc 1 77 5 view .LVU41
 210 0036 0E94 0000 		call lcd_cs_low
 211               	.LVL2:
  78:lib/ili9341/lcd.c ****     SPI_master_transmit(data);
 212               		.loc 1 78 5 view .LVU42
 213 003a 8C2F      		mov r24,r28
 214 003c 0E94 0000 		call SPI_master_transmit
 215               	.LVL3:
  79:lib/ili9341/lcd.c ****     lcd_cs_high();
 216               		.loc 1 79 5 view .LVU43
 217               	/* epilogue start */
  80:lib/ili9341/lcd.c **** }
 218               		.loc 1 80 1 is_stmt 0 view .LVU44
 219 0040 CF91      		pop r28
 220               	.LVL4:
  79:lib/ili9341/lcd.c ****     lcd_cs_high();
 221               		.loc 1 79 5 view .LVU45
 222 0042 0C94 0000 		jmp lcd_cs_high
 223               	.LVL5:
 224               		.cfi_endproc
 225               	.LFE16:
 227               	.global	lcd_send_data
 229               	lcd_send_data:
 230               	.LVL6:
 231               	.LFB17:
  81:lib/ili9341/lcd.c **** 
  82:lib/ili9341/lcd.c **** void lcd_send_data(char data)
  83:lib/ili9341/lcd.c **** {
 232               		.loc 1 83 1 is_stmt 1 view -0
 233               		.cfi_startproc
 234               		.loc 1 83 1 is_stmt 0 view .LVU47
 235 0046 CF93      		push r28
 236               	.LCFI1:
 237               		.cfi_def_cfa_offset 3
 238               		.cfi_offset 28, -2
 239               	/* prologue: function */
 240               	/* frame size = 0 */
 241               	/* stack size = 1 */
 242               	.L__stack_usage = 1
 243 0048 C82F      		mov r28,r24
  84:lib/ili9341/lcd.c ****     lcd_dc_high();
 244               		.loc 1 84 5 is_stmt 1 view .LVU48
 245 004a 0E94 0000 		call lcd_dc_high
 246               	.LVL7:
  85:lib/ili9341/lcd.c ****     lcd_cs_low();
 247               		.loc 1 85 5 view .LVU49
 248 004e 0E94 0000 		call lcd_cs_low
 249               	.LVL8:
  86:lib/ili9341/lcd.c ****     SPI_master_transmit(data);
 250               		.loc 1 86 5 view .LVU50
 251 0052 8C2F      		mov r24,r28
 252 0054 0E94 0000 		call SPI_master_transmit
 253               	.LVL9:
  87:lib/ili9341/lcd.c ****     lcd_cs_high();
 254               		.loc 1 87 5 view .LVU51
 255               	/* epilogue start */
  88:lib/ili9341/lcd.c **** }
 256               		.loc 1 88 1 is_stmt 0 view .LVU52
 257 0058 CF91      		pop r28
 258               	.LVL10:
  87:lib/ili9341/lcd.c ****     lcd_cs_high();
 259               		.loc 1 87 5 view .LVU53
 260 005a 0C94 0000 		jmp lcd_cs_high
 261               	.LVL11:
 262               		.cfi_endproc
 263               	.LFE17:
 265               	.global	lcd_send_data16
 267               	lcd_send_data16:
 268               	.LVL12:
 269               	.LFB18:
  89:lib/ili9341/lcd.c **** 
  90:lib/ili9341/lcd.c **** void lcd_send_data16(uint16_t data)
  91:lib/ili9341/lcd.c **** {
 270               		.loc 1 91 1 is_stmt 1 view -0
 271               		.cfi_startproc
 272               		.loc 1 91 1 is_stmt 0 view .LVU55
 273 005e CF93      		push r28
 274               	.LCFI2:
 275               		.cfi_def_cfa_offset 3
 276               		.cfi_offset 28, -2
 277 0060 DF93      		push r29
 278               	.LCFI3:
 279               		.cfi_def_cfa_offset 4
 280               		.cfi_offset 29, -3
 281               	/* prologue: function */
 282               	/* frame size = 0 */
 283               	/* stack size = 2 */
 284               	.L__stack_usage = 2
 285 0062 EC01      		movw r28,r24
  92:lib/ili9341/lcd.c ****     uint8_t data_high = (uint8_t)(data >> 8);
 286               		.loc 1 92 5 is_stmt 1 view .LVU56
 287               	.LVL13:
  93:lib/ili9341/lcd.c ****     uint8_t data_low = (uint8_t)(data & 0xff);
 288               		.loc 1 93 5 view .LVU57
  94:lib/ili9341/lcd.c ****     lcd_dc_high();
 289               		.loc 1 94 5 view .LVU58
 290 0064 0E94 0000 		call lcd_dc_high
 291               	.LVL14:
  95:lib/ili9341/lcd.c ****     lcd_cs_low();
 292               		.loc 1 95 5 view .LVU59
 293 0068 0E94 0000 		call lcd_cs_low
 294               	.LVL15:
  96:lib/ili9341/lcd.c ****     SPI_master_transmit(data_high);
 295               		.loc 1 96 5 view .LVU60
 296 006c 8D2F      		mov r24,r29
 297 006e 0E94 0000 		call SPI_master_transmit
 298               	.LVL16:
  97:lib/ili9341/lcd.c ****     SPI_master_transmit(data_low);
 299               		.loc 1 97 5 view .LVU61
 300 0072 8C2F      		mov r24,r28
 301 0074 0E94 0000 		call SPI_master_transmit
 302               	.LVL17:
  98:lib/ili9341/lcd.c ****     lcd_cs_high();
 303               		.loc 1 98 5 view .LVU62
 304               	/* epilogue start */
  99:lib/ili9341/lcd.c **** }
 305               		.loc 1 99 1 is_stmt 0 view .LVU63
 306 0078 DF91      		pop r29
 307               	.LVL18:
 308               		.loc 1 99 1 view .LVU64
 309 007a CF91      		pop r28
 310               	.LVL19:
  98:lib/ili9341/lcd.c ****     lcd_cs_high();
 311               		.loc 1 98 5 view .LVU65
 312 007c 0C94 0000 		jmp lcd_cs_high
 313               	.LVL20:
 314               		.cfi_endproc
 315               	.LFE18:
 317               	.global	lcd_setOrientation
 319               	lcd_setOrientation:
 320               	.LVL21:
 321               	.LFB19:
 100:lib/ili9341/lcd.c **** 
 101:lib/ili9341/lcd.c **** void lcd_setOrientation(uint8_t orientation)
 102:lib/ili9341/lcd.c **** {
 322               		.loc 1 102 1 is_stmt 1 view -0
 323               		.cfi_startproc
 324               	/* prologue: function */
 325               	/* frame size = 0 */
 326               	/* stack size = 0 */
 327               	.L__stack_usage = 0
 103:lib/ili9341/lcd.c ****     if(orientation == PORTRAIT)
 328               		.loc 1 103 5 view .LVU67
 329               		.loc 1 103 7 is_stmt 0 view .LVU68
 330 0080 8111      		cpse r24,__zero_reg__
 331 0082 00C0      		rjmp .L14
 104:lib/ili9341/lcd.c ****     {
 105:lib/ili9341/lcd.c ****         lcd_max_x = 240;
 332               		.loc 1 105 9 is_stmt 1 view .LVU69
 333               		.loc 1 105 19 is_stmt 0 view .LVU70
 334 0084 20EF      		ldi r18,lo8(-16)
 335 0086 30E0      		ldi r19,0
 336 0088 3093 0000 		sts lcd_max_x+1,r19
 337 008c 2093 0000 		sts lcd_max_x,r18
 106:lib/ili9341/lcd.c ****         lcd_max_y = 320;
 338               		.loc 1 106 9 is_stmt 1 view .LVU71
 339               		.loc 1 106 19 is_stmt 0 view .LVU72
 340 0090 20E4      		ldi r18,lo8(64)
 341 0092 31E0      		ldi r19,lo8(1)
 342               	.L16:
 107:lib/ili9341/lcd.c ****     }
 108:lib/ili9341/lcd.c ****     else if (orientation == LANDSCAPE)
 109:lib/ili9341/lcd.c ****     {
 110:lib/ili9341/lcd.c ****         lcd_max_x = 320;
 111:lib/ili9341/lcd.c ****         lcd_max_y = 240;
 343               		.loc 1 111 19 view .LVU73
 344 0094 3093 0000 		sts lcd_max_y+1,r19
 345 0098 2093 0000 		sts lcd_max_y,r18
 346               	.L15:
 112:lib/ili9341/lcd.c ****     }
 113:lib/ili9341/lcd.c ****     lcd_orientation = orientation;
 347               		.loc 1 113 5 is_stmt 1 view .LVU74
 348               		.loc 1 113 21 is_stmt 0 view .LVU75
 349 009c 8093 0000 		sts lcd_orientation,r24
 350               	/* epilogue start */
 114:lib/ili9341/lcd.c **** }
 351               		.loc 1 114 1 view .LVU76
 352 00a0 0895      		ret
 353               	.L14:
 108:lib/ili9341/lcd.c ****     {
 354               		.loc 1 108 10 is_stmt 1 view .LVU77
 108:lib/ili9341/lcd.c ****     {
 355               		.loc 1 108 13 is_stmt 0 view .LVU78
 356 00a2 8130      		cpi r24,lo8(1)
 357 00a4 01F4      		brne .L15
 110:lib/ili9341/lcd.c ****         lcd_max_y = 240;
 358               		.loc 1 110 9 is_stmt 1 view .LVU79
 110:lib/ili9341/lcd.c ****         lcd_max_y = 240;
 359               		.loc 1 110 19 is_stmt 0 view .LVU80
 360 00a6 20E4      		ldi r18,lo8(64)
 361 00a8 31E0      		ldi r19,lo8(1)
 362 00aa 3093 0000 		sts lcd_max_x+1,r19
 363 00ae 2093 0000 		sts lcd_max_x,r18
 111:lib/ili9341/lcd.c ****     }
 364               		.loc 1 111 9 is_stmt 1 view .LVU81
 111:lib/ili9341/lcd.c ****     }
 365               		.loc 1 111 19 is_stmt 0 view .LVU82
 366 00b2 20EF      		ldi r18,lo8(-16)
 367 00b4 30E0      		ldi r19,0
 368 00b6 00C0      		rjmp .L16
 369               		.cfi_endproc
 370               	.LFE19:
 372               	.global	lcd_set_x
 374               	lcd_set_x:
 375               	.LVL22:
 376               	.LFB20:
 115:lib/ili9341/lcd.c **** 
 116:lib/ili9341/lcd.c **** void lcd_set_x(uint16_t x0, uint16_t x1)
 117:lib/ili9341/lcd.c **** {
 377               		.loc 1 117 1 is_stmt 1 view -0
 378               		.cfi_startproc
 379               		.loc 1 117 1 is_stmt 0 view .LVU84
 380 00b8 0F93      		push r16
 381               	.LCFI4:
 382               		.cfi_def_cfa_offset 3
 383               		.cfi_offset 16, -2
 384 00ba 1F93      		push r17
 385               	.LCFI5:
 386               		.cfi_def_cfa_offset 4
 387               		.cfi_offset 17, -3
 388 00bc CF93      		push r28
 389               	.LCFI6:
 390               		.cfi_def_cfa_offset 5
 391               		.cfi_offset 28, -4
 392 00be DF93      		push r29
 393               	.LCFI7:
 394               		.cfi_def_cfa_offset 6
 395               		.cfi_offset 29, -5
 396               	/* prologue: function */
 397               	/* frame size = 0 */
 398               	/* stack size = 4 */
 399               	.L__stack_usage = 4
 400 00c0 8C01      		movw r16,r24
 401 00c2 D62F      		mov r29,r22
 402 00c4 C72F      		mov r28,r23
 118:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_COLUMN_ADDRESS_SET);
 403               		.loc 1 118 5 is_stmt 1 view .LVU85
 404 00c6 8AE2      		ldi r24,lo8(42)
 405               	.LVL23:
 406               		.loc 1 118 5 is_stmt 0 view .LVU86
 407 00c8 0E94 0000 		call lcd_send_cmd
 408               	.LVL24:
 119:lib/ili9341/lcd.c ****     lcd_send_data16(x0);
 409               		.loc 1 119 5 is_stmt 1 view .LVU87
 410 00cc C801      		movw r24,r16
 411 00ce 0E94 0000 		call lcd_send_data16
 412               	.LVL25:
 120:lib/ili9341/lcd.c ****     lcd_send_data16(x1);
 413               		.loc 1 120 5 view .LVU88
 414 00d2 8D2F      		mov r24,r29
 415 00d4 9C2F      		mov r25,r28
 416               	/* epilogue start */
 121:lib/ili9341/lcd.c **** }
 417               		.loc 1 121 1 is_stmt 0 view .LVU89
 418 00d6 DF91      		pop r29
 419 00d8 CF91      		pop r28
 420 00da 1F91      		pop r17
 421 00dc 0F91      		pop r16
 422               	.LVL26:
 120:lib/ili9341/lcd.c ****     lcd_send_data16(x1);
 423               		.loc 1 120 5 view .LVU90
 424 00de 0C94 0000 		jmp lcd_send_data16
 425               	.LVL27:
 426               		.cfi_endproc
 427               	.LFE20:
 429               	.global	lcd_set_y
 431               	lcd_set_y:
 432               	.LVL28:
 433               	.LFB21:
 122:lib/ili9341/lcd.c **** 
 123:lib/ili9341/lcd.c **** void lcd_set_y(uint16_t y0, uint16_t y1)
 124:lib/ili9341/lcd.c **** {
 434               		.loc 1 124 1 is_stmt 1 view -0
 435               		.cfi_startproc
 436               		.loc 1 124 1 is_stmt 0 view .LVU92
 437 00e2 0F93      		push r16
 438               	.LCFI8:
 439               		.cfi_def_cfa_offset 3
 440               		.cfi_offset 16, -2
 441 00e4 1F93      		push r17
 442               	.LCFI9:
 443               		.cfi_def_cfa_offset 4
 444               		.cfi_offset 17, -3
 445 00e6 CF93      		push r28
 446               	.LCFI10:
 447               		.cfi_def_cfa_offset 5
 448               		.cfi_offset 28, -4
 449 00e8 DF93      		push r29
 450               	.LCFI11:
 451               		.cfi_def_cfa_offset 6
 452               		.cfi_offset 29, -5
 453               	/* prologue: function */
 454               	/* frame size = 0 */
 455               	/* stack size = 4 */
 456               	.L__stack_usage = 4
 457 00ea 8C01      		movw r16,r24
 458 00ec D62F      		mov r29,r22
 459 00ee C72F      		mov r28,r23
 125:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_PAGE_ADDRESS_SET);
 460               		.loc 1 125 5 is_stmt 1 view .LVU93
 461 00f0 8BE2      		ldi r24,lo8(43)
 462               	.LVL29:
 463               		.loc 1 125 5 is_stmt 0 view .LVU94
 464 00f2 0E94 0000 		call lcd_send_cmd
 465               	.LVL30:
 126:lib/ili9341/lcd.c ****     lcd_send_data16(y0);
 466               		.loc 1 126 5 is_stmt 1 view .LVU95
 467 00f6 C801      		movw r24,r16
 468 00f8 0E94 0000 		call lcd_send_data16
 469               	.LVL31:
 127:lib/ili9341/lcd.c ****     lcd_send_data16(y1);
 470               		.loc 1 127 5 view .LVU96
 471 00fc 8D2F      		mov r24,r29
 472 00fe 9C2F      		mov r25,r28
 473               	/* epilogue start */
 128:lib/ili9341/lcd.c **** }
 474               		.loc 1 128 1 is_stmt 0 view .LVU97
 475 0100 DF91      		pop r29
 476 0102 CF91      		pop r28
 477 0104 1F91      		pop r17
 478 0106 0F91      		pop r16
 479               	.LVL32:
 127:lib/ili9341/lcd.c ****     lcd_send_data16(y1);
 480               		.loc 1 127 5 view .LVU98
 481 0108 0C94 0000 		jmp lcd_send_data16
 482               	.LVL33:
 483               		.cfi_endproc
 484               	.LFE21:
 486               	.global	lcd_setXY
 488               	lcd_setXY:
 489               	.LVL34:
 490               	.LFB22:
 129:lib/ili9341/lcd.c **** 
 130:lib/ili9341/lcd.c **** void lcd_setXY(uint16_t x0, uint16_t y0)
 131:lib/ili9341/lcd.c **** {
 491               		.loc 1 131 1 is_stmt 1 view -0
 492               		.cfi_startproc
 493               		.loc 1 131 1 is_stmt 0 view .LVU100
 494 010c CF93      		push r28
 495               	.LCFI12:
 496               		.cfi_def_cfa_offset 3
 497               		.cfi_offset 28, -2
 498 010e DF93      		push r29
 499               	.LCFI13:
 500               		.cfi_def_cfa_offset 4
 501               		.cfi_offset 29, -3
 502               	/* prologue: function */
 503               	/* frame size = 0 */
 504               	/* stack size = 2 */
 505               	.L__stack_usage = 2
 506 0110 D62F      		mov r29,r22
 507 0112 C72F      		mov r28,r23
 132:lib/ili9341/lcd.c ****     lcd_set_x(x0, x0);
 508               		.loc 1 132 5 is_stmt 1 view .LVU101
 509 0114 BC01      		movw r22,r24
 510               	.LVL35:
 511               		.loc 1 132 5 is_stmt 0 view .LVU102
 512 0116 0E94 0000 		call lcd_set_x
 513               	.LVL36:
 133:lib/ili9341/lcd.c ****     lcd_set_y(y0, y0);
 514               		.loc 1 133 5 is_stmt 1 view .LVU103
 515 011a 6D2F      		mov r22,r29
 516 011c 7C2F      		mov r23,r28
 517 011e 8D2F      		mov r24,r29
 518 0120 9C2F      		mov r25,r28
 519 0122 0E94 0000 		call lcd_set_y
 520               	.LVL37:
 134:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 521               		.loc 1 134 5 view .LVU104
 522 0126 8CE2      		ldi r24,lo8(44)
 523               	/* epilogue start */
 135:lib/ili9341/lcd.c **** }
 524               		.loc 1 135 1 is_stmt 0 view .LVU105
 525 0128 DF91      		pop r29
 526 012a CF91      		pop r28
 134:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 527               		.loc 1 134 5 view .LVU106
 528 012c 0C94 0000 		jmp lcd_send_cmd
 529               	.LVL38:
 530               		.cfi_endproc
 531               	.LFE22:
 533               	.global	lcd_pixel
 535               	lcd_pixel:
 536               	.LVL39:
 537               	.LFB23:
 136:lib/ili9341/lcd.c **** 
 137:lib/ili9341/lcd.c **** 
 138:lib/ili9341/lcd.c **** void lcd_pixel(uint16_t x0, uint16_t y0, uint16_t color)
 139:lib/ili9341/lcd.c **** {
 538               		.loc 1 139 1 is_stmt 1 view -0
 539               		.cfi_startproc
 540               		.loc 1 139 1 is_stmt 0 view .LVU108
 541 0130 CF93      		push r28
 542               	.LCFI14:
 543               		.cfi_def_cfa_offset 3
 544               		.cfi_offset 28, -2
 545 0132 DF93      		push r29
 546               	.LCFI15:
 547               		.cfi_def_cfa_offset 4
 548               		.cfi_offset 29, -3
 549               	/* prologue: function */
 550               	/* frame size = 0 */
 551               	/* stack size = 2 */
 552               	.L__stack_usage = 2
 553 0134 9C01      		movw r18,r24
 554 0136 CB01      		movw r24,r22
 555               	.LVL40:
 556               		.loc 1 139 1 view .LVU109
 557 0138 D42F      		mov r29,r20
 558 013a C52F      		mov r28,r21
 140:lib/ili9341/lcd.c ****     if (lcd_orientation == PORTRAIT)
 559               		.loc 1 140 5 is_stmt 1 view .LVU110
 560               		.loc 1 140 25 is_stmt 0 view .LVU111
 561 013c 4091 0000 		lds r20,lcd_orientation
 562               	.LVL41:
 563               		.loc 1 140 8 view .LVU112
 564 0140 4111      		cpse r20,__zero_reg__
 565 0142 00C0      		rjmp .L21
 141:lib/ili9341/lcd.c ****     {
 142:lib/ili9341/lcd.c ****         lcd_setXY(x0, y0);
 566               		.loc 1 142 9 is_stmt 1 view .LVU113
 567 0144 C901      		movw r24,r18
 568               	.LVL42:
 569               	.L23:
 570               	.LBB12:
 571               	.LBB13:
 143:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 144:lib/ili9341/lcd.c ****     }
 145:lib/ili9341/lcd.c ****     else if (lcd_orientation == LANDSCAPE)
 146:lib/ili9341/lcd.c ****     {
 147:lib/ili9341/lcd.c ****         lcd_setXY(y0, lcd_max_x-x0);
 572               		.loc 1 147 9 is_stmt 0 view .LVU114
 573 0146 0E94 0000 		call lcd_setXY
 574               	.LVL43:
 148:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 575               		.loc 1 148 9 is_stmt 1 view .LVU115
 576 014a 8D2F      		mov r24,r29
 577 014c 9C2F      		mov r25,r28
 578               	/* epilogue start */
 579               	.LBE13:
 580               	.LBE12:
 149:lib/ili9341/lcd.c ****     }
 150:lib/ili9341/lcd.c **** }
 581               		.loc 1 150 1 is_stmt 0 view .LVU116
 582 014e DF91      		pop r29
 583 0150 CF91      		pop r28
 584               	.LBB16:
 585               	.LBB14:
 148:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 586               		.loc 1 148 9 view .LVU117
 587 0152 0C94 0000 		jmp lcd_send_data16
 588               	.LVL44:
 589               	.L21:
 148:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 590               		.loc 1 148 9 view .LVU118
 591               	.LBE14:
 592               	.LBE16:
 145:lib/ili9341/lcd.c ****     {
 593               		.loc 1 145 10 is_stmt 1 view .LVU119
 145:lib/ili9341/lcd.c ****     {
 594               		.loc 1 145 13 is_stmt 0 view .LVU120
 595 0156 4130      		cpi r20,lo8(1)
 596 0158 01F4      		brne .L20
 597               	.LVL45:
 598               	.LBB17:
 599               	.LBI12:
 138:lib/ili9341/lcd.c **** {
 600               		.loc 1 138 6 is_stmt 1 view .LVU121
 601               	.LBB15:
 147:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 602               		.loc 1 147 9 view .LVU122
 603 015a 6091 0000 		lds r22,lcd_max_x
 604 015e 7091 0000 		lds r23,lcd_max_x+1
 605               	.LVL46:
 147:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 606               		.loc 1 147 9 is_stmt 0 view .LVU123
 607 0162 621B      		sub r22,r18
 608 0164 730B      		sbc r23,r19
 609 0166 00C0      		rjmp .L23
 610               	.LVL47:
 611               	.L20:
 612               	/* epilogue start */
 147:lib/ili9341/lcd.c ****         lcd_send_data16(color);
 613               		.loc 1 147 9 view .LVU124
 614               	.LBE15:
 615               	.LBE17:
 616               		.loc 1 150 1 view .LVU125
 617 0168 DF91      		pop r29
 618 016a CF91      		pop r28
 619 016c 0895      		ret
 620               		.cfi_endproc
 621               	.LFE23:
 623               	.global	lcd_line
 625               	lcd_line:
 626               	.LVL48:
 627               	.LFB24:
 151:lib/ili9341/lcd.c **** 
 152:lib/ili9341/lcd.c **** 
 153:lib/ili9341/lcd.c **** void lcd_line(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1,
 154:lib/ili9341/lcd.c ****     uint16_t color)
 155:lib/ili9341/lcd.c **** {
 628               		.loc 1 155 1 is_stmt 1 view -0
 629               		.cfi_startproc
 630               		.loc 1 155 1 is_stmt 0 view .LVU127
 631 016e 2F92      		push r2
 632               	.LCFI16:
 633               		.cfi_def_cfa_offset 3
 634               		.cfi_offset 2, -2
 635 0170 3F92      		push r3
 636               	.LCFI17:
 637               		.cfi_def_cfa_offset 4
 638               		.cfi_offset 3, -3
 639 0172 4F92      		push r4
 640               	.LCFI18:
 641               		.cfi_def_cfa_offset 5
 642               		.cfi_offset 4, -4
 643 0174 5F92      		push r5
 644               	.LCFI19:
 645               		.cfi_def_cfa_offset 6
 646               		.cfi_offset 5, -5
 647 0176 6F92      		push r6
 648               	.LCFI20:
 649               		.cfi_def_cfa_offset 7
 650               		.cfi_offset 6, -6
 651 0178 7F92      		push r7
 652               	.LCFI21:
 653               		.cfi_def_cfa_offset 8
 654               		.cfi_offset 7, -7
 655 017a 8F92      		push r8
 656               	.LCFI22:
 657               		.cfi_def_cfa_offset 9
 658               		.cfi_offset 8, -8
 659 017c 9F92      		push r9
 660               	.LCFI23:
 661               		.cfi_def_cfa_offset 10
 662               		.cfi_offset 9, -9
 663 017e AF92      		push r10
 664               	.LCFI24:
 665               		.cfi_def_cfa_offset 11
 666               		.cfi_offset 10, -10
 667 0180 BF92      		push r11
 668               	.LCFI25:
 669               		.cfi_def_cfa_offset 12
 670               		.cfi_offset 11, -11
 671 0182 CF92      		push r12
 672               	.LCFI26:
 673               		.cfi_def_cfa_offset 13
 674               		.cfi_offset 12, -12
 675 0184 DF92      		push r13
 676               	.LCFI27:
 677               		.cfi_def_cfa_offset 14
 678               		.cfi_offset 13, -13
 679 0186 EF92      		push r14
 680               	.LCFI28:
 681               		.cfi_def_cfa_offset 15
 682               		.cfi_offset 14, -14
 683 0188 FF92      		push r15
 684               	.LCFI29:
 685               		.cfi_def_cfa_offset 16
 686               		.cfi_offset 15, -15
 687 018a 0F93      		push r16
 688               	.LCFI30:
 689               		.cfi_def_cfa_offset 17
 690               		.cfi_offset 16, -16
 691 018c 1F93      		push r17
 692               	.LCFI31:
 693               		.cfi_def_cfa_offset 18
 694               		.cfi_offset 17, -17
 695 018e CF93      		push r28
 696               	.LCFI32:
 697               		.cfi_def_cfa_offset 19
 698               		.cfi_offset 28, -18
 699 0190 DF93      		push r29
 700               	.LCFI33:
 701               		.cfi_def_cfa_offset 20
 702               		.cfi_offset 29, -19
 703 0192 00D0      		rcall .
 704 0194 00D0      		rcall .
 705 0196 00D0      		rcall .
 706               	.LCFI34:
 707               		.cfi_def_cfa_offset 26
 708 0198 CDB7      		in r28,__SP_L__
 709 019a DEB7      		in r29,__SP_H__
 710               	.LCFI35:
 711               		.cfi_def_cfa_register 28
 712               	/* prologue: function */
 713               	/* frame size = 6 */
 714               	/* stack size = 24 */
 715               	.L__stack_usage = 24
 716 019c 7C01      		movw r14,r24
 717 019e 6D83      		std Y+5,r22
 718 01a0 7E83      		std Y+6,r23
 719 01a2 3A01      		movw r6,r20
 720 01a4 5901      		movw r10,r18
 721 01a6 0B83      		std Y+3,r16
 722 01a8 1C83      		std Y+4,r17
 156:lib/ili9341/lcd.c ****     int16_t x = x1-x0;
 723               		.loc 1 156 5 is_stmt 1 view .LVU128
 724               	.LVL49:
 157:lib/ili9341/lcd.c ****     int16_t y = y1-y0;
 725               		.loc 1 157 5 view .LVU129
 726               		.loc 1 157 19 is_stmt 0 view .LVU130
 727 01aa 8901      		movw r16,r18
 728               	.LVL50:
 729               		.loc 1 157 19 view .LVU131
 730 01ac 2D81      		ldd r18,Y+5
 731 01ae 3E81      		ldd r19,Y+6
 732               	.LVL51:
 733               		.loc 1 157 19 view .LVU132
 734 01b0 021B      		sub r16,r18
 735 01b2 130B      		sbc r17,r19
 736               	.LVL52:
 158:lib/ili9341/lcd.c **** 
 159:lib/ili9341/lcd.c ****     int16_t dx = abs(x), sx = x0<x1 ? 1 : -1;
 737               		.loc 1 159 5 is_stmt 1 view .LVU133
 738               		.loc 1 159 13 is_stmt 0 view .LVU134
 739 01b4 6A01      		movw r12,r20
 740 01b6 C81A      		sub r12,r24
 741 01b8 D90A      		sbc r13,r25
 742               	.LVL53:
 743               		.loc 1 159 13 view .LVU135
 744 01ba D7FE      		sbrs r13,7
 745 01bc 00C0      		rjmp .L25
 746 01be D194      		neg r13
 747 01c0 C194      		neg r12
 748 01c2 D108      		sbc r13,__zero_reg__
 749               	.LVL54:
 750               	.L25:
 751               		.loc 1 159 41 view .LVU136
 752 01c4 4424      		clr r4
 753 01c6 4A94      		dec r4
 754 01c8 542C      		mov r5,r4
 755               	.LVL55:
 756               		.loc 1 159 41 view .LVU137
 757 01ca E614      		cp r14,r6
 758 01cc F704      		cpc r15,r7
 759 01ce 00F4      		brsh .L26
 760 01d0 4424      		clr r4
 761 01d2 4394      		inc r4
 762 01d4 512C      		mov r5,__zero_reg__
 763               	.L26:
 764               	.LVL56:
 160:lib/ili9341/lcd.c ****     int16_t dy = -abs(y), sy = y0<y1 ? 1 : -1;
 765               		.loc 1 160 5 is_stmt 1 discriminator 4 view .LVU138
 766               		.loc 1 160 19 is_stmt 0 discriminator 4 view .LVU139
 767 01d6 17FF      		sbrs r17,7
 768 01d8 00C0      		rjmp .L27
 769 01da 1195      		neg r17
 770 01dc 0195      		neg r16
 771 01de 1109      		sbc r17,__zero_reg__
 772               	.LVL57:
 773               	.L27:
 774               		.loc 1 160 13 discriminator 4 view .LVU140
 775 01e0 8827      		clr r24
 776 01e2 9927      		clr r25
 777 01e4 801B      		sub r24,r16
 778 01e6 910B      		sbc r25,r17
 779               	.LVL58:
 780               		.loc 1 160 13 discriminator 4 view .LVU141
 781 01e8 9A83      		std Y+2,r25
 782 01ea 8983      		std Y+1,r24
 783               	.LVL59:
 784               		.loc 1 160 42 discriminator 4 view .LVU142
 785 01ec 2D81      		ldd r18,Y+5
 786 01ee 3E81      		ldd r19,Y+6
 787               	.LVL60:
 788               		.loc 1 160 42 discriminator 4 view .LVU143
 789 01f0 2224      		clr r2
 790 01f2 2A94      		dec r2
 791 01f4 322C      		mov r3,r2
 792               	.LVL61:
 793               		.loc 1 160 42 discriminator 4 view .LVU144
 794 01f6 2A15      		cp r18,r10
 795 01f8 3B05      		cpc r19,r11
 796 01fa 00F4      		brsh .L28
 797               		.loc 1 160 42 view .LVU145
 798 01fc 2224      		clr r2
 799 01fe 2394      		inc r2
 800 0200 312C      		mov r3,__zero_reg__
 801               	.L28:
 802               	.LVL62:
 161:lib/ili9341/lcd.c **** 
 162:lib/ili9341/lcd.c ****     int err = dx+dy, e2;
 803               		.loc 1 162 5 is_stmt 1 discriminator 4 view .LVU146
 804 0202 4601      		movw r8,r12
 805 0204 801A      		sub r8,r16
 806 0206 910A      		sbc r9,r17
 807               	.LVL63:
 808               	.L29:
 163:lib/ili9341/lcd.c ****     while(1)
 809               		.loc 1 163 5 view .LVU147
 164:lib/ili9341/lcd.c ****     {
 165:lib/ili9341/lcd.c ****         lcd_pixel(x0, y0, color);
 810               		.loc 1 165 9 view .LVU148
 811 0208 4B81      		ldd r20,Y+3
 812 020a 5C81      		ldd r21,Y+4
 813 020c 6D81      		ldd r22,Y+5
 814 020e 7E81      		ldd r23,Y+6
 815 0210 C701      		movw r24,r14
 816 0212 0E94 0000 		call lcd_pixel
 817               	.LVL64:
 166:lib/ili9341/lcd.c ****         e2 = 2*err;
 818               		.loc 1 166 9 view .LVU149
 819               		.loc 1 166 12 is_stmt 0 view .LVU150
 820 0216 C401      		movw r24,r8
 821 0218 880F      		lsl r24
 822 021a 991F      		rol r25
 823               	.LVL65:
 167:lib/ili9341/lcd.c ****         if (e2 >= dy)
 824               		.loc 1 167 9 is_stmt 1 view .LVU151
 825               		.loc 1 167 12 is_stmt 0 view .LVU152
 826 021c 2981      		ldd r18,Y+1
 827 021e 3A81      		ldd r19,Y+2
 828 0220 8217      		cp r24,r18
 829 0222 9307      		cpc r25,r19
 830 0224 04F0      		brlt .L30
 168:lib/ili9341/lcd.c ****         {
 169:lib/ili9341/lcd.c ****             if (x0 == x1)
 831               		.loc 1 169 13 is_stmt 1 view .LVU153
 832               		.loc 1 169 16 is_stmt 0 view .LVU154
 833 0226 E614      		cp r14,r6
 834 0228 F704      		cpc r15,r7
 835 022a 01F0      		breq .L24
 170:lib/ili9341/lcd.c ****             {
 171:lib/ili9341/lcd.c ****                 break;
 172:lib/ili9341/lcd.c ****             }
 173:lib/ili9341/lcd.c ****             err += dy;
 836               		.loc 1 173 13 is_stmt 1 view .LVU155
 837 022c 801A      		sub r8,r16
 838 022e 910A      		sbc r9,r17
 839               	.LVL66:
 174:lib/ili9341/lcd.c ****             x0 += sx;
 840               		.loc 1 174 13 view .LVU156
 841               		.loc 1 174 16 is_stmt 0 view .LVU157
 842 0230 E40C      		add r14,r4
 843 0232 F51C      		adc r15,r5
 844               	.LVL67:
 175:lib/ili9341/lcd.c ****         }
 176:lib/ili9341/lcd.c ****         if (e2 <= dx)
 845               		.loc 1 176 9 is_stmt 1 view .LVU158
 846               		.loc 1 176 12 is_stmt 0 view .LVU159
 847 0234 C816      		cp r12,r24
 848 0236 D906      		cpc r13,r25
 849 0238 04F0      		brlt .L29
 850               	.L30:
 177:lib/ili9341/lcd.c ****         {
 178:lib/ili9341/lcd.c ****             if (y0 == y1)
 851               		.loc 1 178 13 is_stmt 1 view .LVU160
 852               		.loc 1 178 16 is_stmt 0 view .LVU161
 853 023a 8D81      		ldd r24,Y+5
 854 023c 9E81      		ldd r25,Y+6
 855               	.LVL68:
 856               		.loc 1 178 16 view .LVU162
 857 023e 8A15      		cp r24,r10
 858 0240 9B05      		cpc r25,r11
 859 0242 01F0      		breq .L24
 179:lib/ili9341/lcd.c ****             {
 180:lib/ili9341/lcd.c ****                 break;
 181:lib/ili9341/lcd.c ****             }
 182:lib/ili9341/lcd.c ****             err += dx;
 860               		.loc 1 182 13 is_stmt 1 view .LVU163
 861               		.loc 1 182 17 is_stmt 0 view .LVU164
 862 0244 8C0C      		add r8,r12
 863 0246 9D1C      		adc r9,r13
 864               	.LVL69:
 183:lib/ili9341/lcd.c ****             y0 += sy;
 865               		.loc 1 183 13 is_stmt 1 view .LVU165
 866               		.loc 1 183 16 is_stmt 0 view .LVU166
 867 0248 820D      		add r24,r2
 868 024a 931D      		adc r25,r3
 869 024c 9E83      		std Y+6,r25
 870 024e 8D83      		std Y+5,r24
 871               	.LVL70:
 872               		.loc 1 183 16 view .LVU167
 873 0250 00C0      		rjmp .L29
 874               	.LVL71:
 875               	.L24:
 876               	/* epilogue start */
 184:lib/ili9341/lcd.c ****         }
 185:lib/ili9341/lcd.c ****     }
 186:lib/ili9341/lcd.c **** }
 877               		.loc 1 186 1 view .LVU168
 878 0252 2696      		adiw r28,6
 879               	.LVL72:
 880               		.loc 1 186 1 view .LVU169
 881 0254 0FB6      		in __tmp_reg__,__SREG__
 882 0256 F894      		cli
 883 0258 DEBF      		out __SP_H__,r29
 884 025a 0FBE      		out __SREG__,__tmp_reg__
 885 025c CDBF      		out __SP_L__,r28
 886               	.LVL73:
 887               		.loc 1 186 1 view .LVU170
 888 025e DF91      		pop r29
 889 0260 CF91      		pop r28
 890 0262 1F91      		pop r17
 891 0264 0F91      		pop r16
 892 0266 FF90      		pop r15
 893 0268 EF90      		pop r14
 894               	.LVL74:
 895               		.loc 1 186 1 view .LVU171
 896 026a DF90      		pop r13
 897 026c CF90      		pop r12
 898 026e BF90      		pop r11
 899 0270 AF90      		pop r10
 900               	.LVL75:
 901               		.loc 1 186 1 view .LVU172
 902 0272 9F90      		pop r9
 903 0274 8F90      		pop r8
 904               	.LVL76:
 905               		.loc 1 186 1 view .LVU173
 906 0276 7F90      		pop r7
 907 0278 6F90      		pop r6
 908               	.LVL77:
 909               		.loc 1 186 1 view .LVU174
 910 027a 5F90      		pop r5
 911 027c 4F90      		pop r4
 912               	.LVL78:
 913               		.loc 1 186 1 view .LVU175
 914 027e 3F90      		pop r3
 915 0280 2F90      		pop r2
 916               	.LVL79:
 917               		.loc 1 186 1 view .LVU176
 918 0282 0895      		ret
 919               		.cfi_endproc
 920               	.LFE24:
 922               	.global	lcd_hline
 924               	lcd_hline:
 925               	.LVL80:
 926               	.LFB25:
 187:lib/ili9341/lcd.c **** 
 188:lib/ili9341/lcd.c **** void lcd_hline(uint16_t x0, uint16_t y0, uint16_t length,
 189:lib/ili9341/lcd.c ****     uint16_t color)
 190:lib/ili9341/lcd.c **** {
 927               		.loc 1 190 1 is_stmt 1 view -0
 928               		.cfi_startproc
 929               		.loc 1 190 1 is_stmt 0 view .LVU178
 930 0284 CF92      		push r12
 931               	.LCFI36:
 932               		.cfi_def_cfa_offset 3
 933               		.cfi_offset 12, -2
 934 0286 DF92      		push r13
 935               	.LCFI37:
 936               		.cfi_def_cfa_offset 4
 937               		.cfi_offset 13, -3
 938 0288 EF92      		push r14
 939               	.LCFI38:
 940               		.cfi_def_cfa_offset 5
 941               		.cfi_offset 14, -4
 942 028a FF92      		push r15
 943               	.LCFI39:
 944               		.cfi_def_cfa_offset 6
 945               		.cfi_offset 15, -5
 946 028c 0F93      		push r16
 947               	.LCFI40:
 948               		.cfi_def_cfa_offset 7
 949               		.cfi_offset 16, -6
 950 028e 1F93      		push r17
 951               	.LCFI41:
 952               		.cfi_def_cfa_offset 8
 953               		.cfi_offset 17, -7
 954 0290 CF93      		push r28
 955               	.LCFI42:
 956               		.cfi_def_cfa_offset 9
 957               		.cfi_offset 28, -8
 958 0292 DF93      		push r29
 959               	.LCFI43:
 960               		.cfi_def_cfa_offset 10
 961               		.cfi_offset 29, -9
 962               	/* prologue: function */
 963               	/* frame size = 0 */
 964               	/* stack size = 8 */
 965               	.L__stack_usage = 8
 966 0294 7C01      		movw r14,r24
 967 0296 8B01      		movw r16,r22
 968 0298 EA01      		movw r28,r20
 969 029a D22E      		mov r13,r18
 970 029c C32E      		mov r12,r19
 191:lib/ili9341/lcd.c ****     if (lcd_orientation == PORTRAIT)
 971               		.loc 1 191 5 is_stmt 1 view .LVU179
 972               		.loc 1 191 25 is_stmt 0 view .LVU180
 973 029e 8091 0000 		lds r24,lcd_orientation
 974               	.LVL81:
 975               		.loc 1 191 8 view .LVU181
 976 02a2 8111      		cpse r24,__zero_reg__
 977 02a4 00C0      		rjmp .L36
 192:lib/ili9341/lcd.c ****     {
 193:lib/ili9341/lcd.c ****         lcd_set_x(x0, x0+length);
 978               		.loc 1 193 9 is_stmt 1 view .LVU182
 979 02a6 B701      		movw r22,r14
 980               	.LVL82:
 981               		.loc 1 193 9 is_stmt 0 view .LVU183
 982 02a8 640F      		add r22,r20
 983 02aa 751F      		adc r23,r21
 984 02ac C701      		movw r24,r14
 985 02ae 0E94 0000 		call lcd_set_x
 986               	.LVL83:
 194:lib/ili9341/lcd.c ****         lcd_set_y(y0, y0);
 987               		.loc 1 194 9 is_stmt 1 view .LVU184
 988 02b2 B801      		movw r22,r16
 989 02b4 C801      		movw r24,r16
 990 02b6 0E94 0000 		call lcd_set_y
 991               	.LVL84:
 195:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 992               		.loc 1 195 9 view .LVU185
 993 02ba 8CE2      		ldi r24,lo8(44)
 994 02bc 0E94 0000 		call lcd_send_cmd
 995               	.LVL85:
 196:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 996               		.loc 1 196 9 view .LVU186
 997               	.LBB24:
 998               		.loc 1 196 14 view .LVU187
 999               		.loc 1 196 18 is_stmt 0 view .LVU188
 1000 02c0 10E0      		ldi r17,0
 1001 02c2 00E0      		ldi r16,0
 1002               	.LVL86:
 1003               	.L37:
 1004               		.loc 1 196 23 is_stmt 1 discriminator 1 view .LVU189
 1005               		.loc 1 196 9 is_stmt 0 discriminator 1 view .LVU190
 1006 02c4 C017      		cp r28,r16
 1007 02c6 D107      		cpc r29,r17
 1008 02c8 01F4      		brne .L38
 1009               	.LVL87:
 1010               	.L35:
 1011               	/* epilogue start */
 1012               		.loc 1 196 9 discriminator 1 view .LVU191
 1013               	.LBE24:
 197:lib/ili9341/lcd.c ****         {
 198:lib/ili9341/lcd.c ****             lcd_send_data16(color);
 199:lib/ili9341/lcd.c ****         }
 200:lib/ili9341/lcd.c ****     }
 201:lib/ili9341/lcd.c ****     else if (lcd_orientation == LANDSCAPE)
 202:lib/ili9341/lcd.c ****     {
 203:lib/ili9341/lcd.c ****         lcd_set_x(y0, y0);
 204:lib/ili9341/lcd.c ****         lcd_set_y(lcd_max_x-x0-length, lcd_max_x-x0);
 205:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 206:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 207:lib/ili9341/lcd.c ****         {
 208:lib/ili9341/lcd.c ****             lcd_send_data16(color);
 209:lib/ili9341/lcd.c ****         }
 210:lib/ili9341/lcd.c ****     }
 211:lib/ili9341/lcd.c **** }
 1014               		.loc 1 211 1 view .LVU192
 1015 02ca DF91      		pop r29
 1016 02cc CF91      		pop r28
 1017               	.LVL88:
 1018               		.loc 1 211 1 view .LVU193
 1019 02ce 1F91      		pop r17
 1020 02d0 0F91      		pop r16
 1021 02d2 FF90      		pop r15
 1022 02d4 EF90      		pop r14
 1023               	.LVL89:
 1024               		.loc 1 211 1 view .LVU194
 1025 02d6 DF90      		pop r13
 1026 02d8 CF90      		pop r12
 1027 02da 0895      		ret
 1028               	.LVL90:
 1029               	.L38:
 1030               	.LBB25:
 198:lib/ili9341/lcd.c ****         }
 1031               		.loc 1 198 13 is_stmt 1 discriminator 3 view .LVU195
 1032 02dc 8D2D      		mov r24,r13
 1033 02de 9C2D      		mov r25,r12
 1034 02e0 0E94 0000 		call lcd_send_data16
 1035               	.LVL91:
 196:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1036               		.loc 1 196 33 discriminator 3 view .LVU196
 196:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1037               		.loc 1 196 34 is_stmt 0 discriminator 3 view .LVU197
 1038 02e4 0F5F      		subi r16,-1
 1039 02e6 1F4F      		sbci r17,-1
 1040               	.LVL92:
 196:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1041               		.loc 1 196 34 discriminator 3 view .LVU198
 1042 02e8 00C0      		rjmp .L37
 1043               	.LVL93:
 1044               	.L36:
 196:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1045               		.loc 1 196 34 discriminator 3 view .LVU199
 1046               	.LBE25:
 201:lib/ili9341/lcd.c ****     {
 1047               		.loc 1 201 10 is_stmt 1 view .LVU200
 201:lib/ili9341/lcd.c ****     {
 1048               		.loc 1 201 13 is_stmt 0 view .LVU201
 1049 02ea 8130      		cpi r24,lo8(1)
 1050 02ec 01F4      		brne .L35
 1051               	.LVL94:
 1052               	.LBB26:
 1053               	.LBI26:
 188:lib/ili9341/lcd.c ****     uint16_t color)
 1054               		.loc 1 188 6 is_stmt 1 view .LVU202
 1055               	.LBB27:
 203:lib/ili9341/lcd.c ****         lcd_set_y(lcd_max_x-x0-length, lcd_max_x-x0);
 1056               		.loc 1 203 9 view .LVU203
 1057 02ee CB01      		movw r24,r22
 1058 02f0 0E94 0000 		call lcd_set_x
 1059               	.LVL95:
 204:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 1060               		.loc 1 204 9 view .LVU204
 1061 02f4 8091 0000 		lds r24,lcd_max_x
 1062 02f8 9091 0000 		lds r25,lcd_max_x+1
 1063 02fc 8E19      		sub r24,r14
 1064 02fe 9F09      		sbc r25,r15
 1065 0300 BC01      		movw r22,r24
 1066 0302 8C1B      		sub r24,r28
 1067 0304 9D0B      		sbc r25,r29
 1068 0306 0E94 0000 		call lcd_set_y
 1069               	.LVL96:
 205:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1070               		.loc 1 205 9 view .LVU205
 1071 030a 8CE2      		ldi r24,lo8(44)
 1072 030c 0E94 0000 		call lcd_send_cmd
 1073               	.LVL97:
 206:lib/ili9341/lcd.c ****         {
 1074               		.loc 1 206 9 view .LVU206
 1075               	.LBB28:
 206:lib/ili9341/lcd.c ****         {
 1076               		.loc 1 206 14 view .LVU207
 206:lib/ili9341/lcd.c ****         {
 1077               		.loc 1 206 18 is_stmt 0 view .LVU208
 1078 0310 10E0      		ldi r17,0
 1079 0312 00E0      		ldi r16,0
 1080               	.LVL98:
 1081               	.L40:
 206:lib/ili9341/lcd.c ****         {
 1082               		.loc 1 206 23 is_stmt 1 view .LVU209
 206:lib/ili9341/lcd.c ****         {
 1083               		.loc 1 206 9 is_stmt 0 view .LVU210
 1084 0314 0C17      		cp r16,r28
 1085 0316 1D07      		cpc r17,r29
 1086 0318 01F0      		breq .L35
 208:lib/ili9341/lcd.c ****         }
 1087               		.loc 1 208 13 is_stmt 1 view .LVU211
 1088 031a 8D2D      		mov r24,r13
 1089 031c 9C2D      		mov r25,r12
 1090 031e 0E94 0000 		call lcd_send_data16
 1091               	.LVL99:
 206:lib/ili9341/lcd.c ****         {
 1092               		.loc 1 206 33 view .LVU212
 206:lib/ili9341/lcd.c ****         {
 1093               		.loc 1 206 34 is_stmt 0 view .LVU213
 1094 0322 0F5F      		subi r16,-1
 1095 0324 1F4F      		sbci r17,-1
 1096               	.LVL100:
 206:lib/ili9341/lcd.c ****         {
 1097               		.loc 1 206 34 view .LVU214
 1098 0326 00C0      		rjmp .L40
 1099               	.LBE28:
 1100               	.LBE27:
 1101               	.LBE26:
 1102               		.cfi_endproc
 1103               	.LFE25:
 1105               	.global	lcd_vline
 1107               	lcd_vline:
 1108               	.LVL101:
 1109               	.LFB26:
 212:lib/ili9341/lcd.c **** 
 213:lib/ili9341/lcd.c **** void lcd_vline(uint16_t x0, uint16_t y0, uint16_t length,
 214:lib/ili9341/lcd.c ****     uint16_t color)
 215:lib/ili9341/lcd.c **** {
 1110               		.loc 1 215 1 is_stmt 1 view -0
 1111               		.cfi_startproc
 1112               		.loc 1 215 1 is_stmt 0 view .LVU216
 1113 0328 CF92      		push r12
 1114               	.LCFI44:
 1115               		.cfi_def_cfa_offset 3
 1116               		.cfi_offset 12, -2
 1117 032a DF92      		push r13
 1118               	.LCFI45:
 1119               		.cfi_def_cfa_offset 4
 1120               		.cfi_offset 13, -3
 1121 032c EF92      		push r14
 1122               	.LCFI46:
 1123               		.cfi_def_cfa_offset 5
 1124               		.cfi_offset 14, -4
 1125 032e FF92      		push r15
 1126               	.LCFI47:
 1127               		.cfi_def_cfa_offset 6
 1128               		.cfi_offset 15, -5
 1129 0330 0F93      		push r16
 1130               	.LCFI48:
 1131               		.cfi_def_cfa_offset 7
 1132               		.cfi_offset 16, -6
 1133 0332 1F93      		push r17
 1134               	.LCFI49:
 1135               		.cfi_def_cfa_offset 8
 1136               		.cfi_offset 17, -7
 1137 0334 CF93      		push r28
 1138               	.LCFI50:
 1139               		.cfi_def_cfa_offset 9
 1140               		.cfi_offset 28, -8
 1141 0336 DF93      		push r29
 1142               	.LCFI51:
 1143               		.cfi_def_cfa_offset 10
 1144               		.cfi_offset 29, -9
 1145               	/* prologue: function */
 1146               	/* frame size = 0 */
 1147               	/* stack size = 8 */
 1148               	.L__stack_usage = 8
 1149 0338 7C01      		movw r14,r24
 1150 033a 8B01      		movw r16,r22
 1151 033c EA01      		movw r28,r20
 1152 033e D22E      		mov r13,r18
 1153 0340 C32E      		mov r12,r19
 216:lib/ili9341/lcd.c ****     if (lcd_orientation == PORTRAIT)
 1154               		.loc 1 216 5 is_stmt 1 view .LVU217
 1155               		.loc 1 216 25 is_stmt 0 view .LVU218
 1156 0342 8091 0000 		lds r24,lcd_orientation
 1157               	.LVL102:
 1158               		.loc 1 216 8 view .LVU219
 1159 0346 8111      		cpse r24,__zero_reg__
 1160 0348 00C0      		rjmp .L43
 217:lib/ili9341/lcd.c ****     {
 218:lib/ili9341/lcd.c ****         lcd_set_x(x0, x0);
 1161               		.loc 1 218 9 is_stmt 1 view .LVU220
 1162 034a B701      		movw r22,r14
 1163               	.LVL103:
 1164               		.loc 1 218 9 is_stmt 0 view .LVU221
 1165 034c C701      		movw r24,r14
 1166 034e 0E94 0000 		call lcd_set_x
 1167               	.LVL104:
 219:lib/ili9341/lcd.c ****         lcd_set_y(y0, y0+length);
 1168               		.loc 1 219 9 is_stmt 1 view .LVU222
 1169 0352 B801      		movw r22,r16
 1170 0354 6C0F      		add r22,r28
 1171 0356 7D1F      		adc r23,r29
 1172 0358 C801      		movw r24,r16
 1173 035a 0E94 0000 		call lcd_set_y
 1174               	.LVL105:
 220:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 1175               		.loc 1 220 9 view .LVU223
 1176 035e 8CE2      		ldi r24,lo8(44)
 1177 0360 0E94 0000 		call lcd_send_cmd
 1178               	.LVL106:
 221:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1179               		.loc 1 221 9 view .LVU224
 1180               	.LBB35:
 1181               		.loc 1 221 14 view .LVU225
 1182               		.loc 1 221 18 is_stmt 0 view .LVU226
 1183 0364 10E0      		ldi r17,0
 1184 0366 00E0      		ldi r16,0
 1185               	.LVL107:
 1186               	.L44:
 1187               		.loc 1 221 23 is_stmt 1 discriminator 1 view .LVU227
 1188               		.loc 1 221 9 is_stmt 0 discriminator 1 view .LVU228
 1189 0368 C017      		cp r28,r16
 1190 036a D107      		cpc r29,r17
 1191 036c 01F4      		brne .L45
 1192               	.LVL108:
 1193               	.L42:
 1194               	/* epilogue start */
 1195               		.loc 1 221 9 discriminator 1 view .LVU229
 1196               	.LBE35:
 222:lib/ili9341/lcd.c ****         {
 223:lib/ili9341/lcd.c ****             lcd_send_data16(color);
 224:lib/ili9341/lcd.c ****         }
 225:lib/ili9341/lcd.c ****     }
 226:lib/ili9341/lcd.c ****     else if (lcd_orientation == LANDSCAPE)
 227:lib/ili9341/lcd.c ****     {
 228:lib/ili9341/lcd.c ****         lcd_set_x(y0, y0 + length);
 229:lib/ili9341/lcd.c ****         lcd_set_y(lcd_max_x-x0, lcd_max_x-x0);
 230:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 231:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 232:lib/ili9341/lcd.c ****         {
 233:lib/ili9341/lcd.c ****             lcd_send_data16(color);
 234:lib/ili9341/lcd.c ****         }
 235:lib/ili9341/lcd.c ****     }
 236:lib/ili9341/lcd.c **** }
 1197               		.loc 1 236 1 view .LVU230
 1198 036e DF91      		pop r29
 1199 0370 CF91      		pop r28
 1200               	.LVL109:
 1201               		.loc 1 236 1 view .LVU231
 1202 0372 1F91      		pop r17
 1203 0374 0F91      		pop r16
 1204 0376 FF90      		pop r15
 1205 0378 EF90      		pop r14
 1206               	.LVL110:
 1207               		.loc 1 236 1 view .LVU232
 1208 037a DF90      		pop r13
 1209 037c CF90      		pop r12
 1210 037e 0895      		ret
 1211               	.LVL111:
 1212               	.L45:
 1213               	.LBB36:
 223:lib/ili9341/lcd.c ****         }
 1214               		.loc 1 223 13 is_stmt 1 discriminator 3 view .LVU233
 1215 0380 8D2D      		mov r24,r13
 1216 0382 9C2D      		mov r25,r12
 1217 0384 0E94 0000 		call lcd_send_data16
 1218               	.LVL112:
 221:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1219               		.loc 1 221 33 discriminator 3 view .LVU234
 221:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1220               		.loc 1 221 34 is_stmt 0 discriminator 3 view .LVU235
 1221 0388 0F5F      		subi r16,-1
 1222 038a 1F4F      		sbci r17,-1
 1223               	.LVL113:
 221:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1224               		.loc 1 221 34 discriminator 3 view .LVU236
 1225 038c 00C0      		rjmp .L44
 1226               	.LVL114:
 1227               	.L43:
 221:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1228               		.loc 1 221 34 discriminator 3 view .LVU237
 1229               	.LBE36:
 226:lib/ili9341/lcd.c ****     {
 1230               		.loc 1 226 10 is_stmt 1 view .LVU238
 226:lib/ili9341/lcd.c ****     {
 1231               		.loc 1 226 13 is_stmt 0 view .LVU239
 1232 038e 8130      		cpi r24,lo8(1)
 1233 0390 01F4      		brne .L42
 1234               	.LVL115:
 1235               	.LBB37:
 1236               	.LBI37:
 213:lib/ili9341/lcd.c ****     uint16_t color)
 1237               		.loc 1 213 6 is_stmt 1 view .LVU240
 1238               	.LBB38:
 228:lib/ili9341/lcd.c ****         lcd_set_y(lcd_max_x-x0, lcd_max_x-x0);
 1239               		.loc 1 228 9 view .LVU241
 1240 0392 640F      		add r22,r20
 1241 0394 751F      		adc r23,r21
 1242 0396 C801      		movw r24,r16
 1243 0398 0E94 0000 		call lcd_set_x
 1244               	.LVL116:
 229:lib/ili9341/lcd.c ****         lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 1245               		.loc 1 229 9 view .LVU242
 1246 039c 8091 0000 		lds r24,lcd_max_x
 1247 03a0 9091 0000 		lds r25,lcd_max_x+1
 1248 03a4 8E19      		sub r24,r14
 1249 03a6 9F09      		sbc r25,r15
 1250 03a8 BC01      		movw r22,r24
 1251 03aa 0E94 0000 		call lcd_set_y
 1252               	.LVL117:
 230:lib/ili9341/lcd.c ****         for (int i=0; i<length; i++)
 1253               		.loc 1 230 9 view .LVU243
 1254 03ae 8CE2      		ldi r24,lo8(44)
 1255 03b0 0E94 0000 		call lcd_send_cmd
 1256               	.LVL118:
 231:lib/ili9341/lcd.c ****         {
 1257               		.loc 1 231 9 view .LVU244
 1258               	.LBB39:
 231:lib/ili9341/lcd.c ****         {
 1259               		.loc 1 231 14 view .LVU245
 231:lib/ili9341/lcd.c ****         {
 1260               		.loc 1 231 18 is_stmt 0 view .LVU246
 1261 03b4 10E0      		ldi r17,0
 1262 03b6 00E0      		ldi r16,0
 1263               	.LVL119:
 1264               	.L47:
 231:lib/ili9341/lcd.c ****         {
 1265               		.loc 1 231 23 is_stmt 1 view .LVU247
 231:lib/ili9341/lcd.c ****         {
 1266               		.loc 1 231 9 is_stmt 0 view .LVU248
 1267 03b8 0C17      		cp r16,r28
 1268 03ba 1D07      		cpc r17,r29
 1269 03bc 01F0      		breq .L42
 233:lib/ili9341/lcd.c ****         }
 1270               		.loc 1 233 13 is_stmt 1 view .LVU249
 1271 03be 8D2D      		mov r24,r13
 1272 03c0 9C2D      		mov r25,r12
 1273 03c2 0E94 0000 		call lcd_send_data16
 1274               	.LVL120:
 231:lib/ili9341/lcd.c ****         {
 1275               		.loc 1 231 33 view .LVU250
 231:lib/ili9341/lcd.c ****         {
 1276               		.loc 1 231 34 is_stmt 0 view .LVU251
 1277 03c6 0F5F      		subi r16,-1
 1278 03c8 1F4F      		sbci r17,-1
 1279               	.LVL121:
 231:lib/ili9341/lcd.c ****         {
 1280               		.loc 1 231 34 view .LVU252
 1281 03ca 00C0      		rjmp .L47
 1282               	.LBE39:
 1283               	.LBE38:
 1284               	.LBE37:
 1285               		.cfi_endproc
 1286               	.LFE26:
 1288               	.global	lcd_rectange
 1290               	lcd_rectange:
 1291               	.LVL122:
 1292               	.LFB27:
 237:lib/ili9341/lcd.c **** 
 238:lib/ili9341/lcd.c **** void lcd_rectange(uint16_t x0, uint16_t y0, uint16_t length,
 239:lib/ili9341/lcd.c ****    uint16_t width, uint16_t color)
 240:lib/ili9341/lcd.c **** {
 1293               		.loc 1 240 1 is_stmt 1 view -0
 1294               		.cfi_startproc
 1295               		.loc 1 240 1 is_stmt 0 view .LVU254
 1296 03cc AF92      		push r10
 1297               	.LCFI52:
 1298               		.cfi_def_cfa_offset 3
 1299               		.cfi_offset 10, -2
 1300 03ce BF92      		push r11
 1301               	.LCFI53:
 1302               		.cfi_def_cfa_offset 4
 1303               		.cfi_offset 11, -3
 1304 03d0 CF92      		push r12
 1305               	.LCFI54:
 1306               		.cfi_def_cfa_offset 5
 1307               		.cfi_offset 12, -4
 1308 03d2 DF92      		push r13
 1309               	.LCFI55:
 1310               		.cfi_def_cfa_offset 6
 1311               		.cfi_offset 13, -5
 1312 03d4 EF92      		push r14
 1313               	.LCFI56:
 1314               		.cfi_def_cfa_offset 7
 1315               		.cfi_offset 14, -6
 1316 03d6 FF92      		push r15
 1317               	.LCFI57:
 1318               		.cfi_def_cfa_offset 8
 1319               		.cfi_offset 15, -7
 1320 03d8 0F93      		push r16
 1321               	.LCFI58:
 1322               		.cfi_def_cfa_offset 9
 1323               		.cfi_offset 16, -8
 1324 03da 1F93      		push r17
 1325               	.LCFI59:
 1326               		.cfi_def_cfa_offset 10
 1327               		.cfi_offset 17, -9
 1328 03dc CF93      		push r28
 1329               	.LCFI60:
 1330               		.cfi_def_cfa_offset 11
 1331               		.cfi_offset 28, -10
 1332 03de DF93      		push r29
 1333               	.LCFI61:
 1334               		.cfi_def_cfa_offset 12
 1335               		.cfi_offset 29, -11
 1336               	/* prologue: function */
 1337               	/* frame size = 0 */
 1338               	/* stack size = 10 */
 1339               	.L__stack_usage = 10
 1340 03e0 EC01      		movw r28,r24
 1341 03e2 7B01      		movw r14,r22
 1342 03e4 6A01      		movw r12,r20
 1343 03e6 5901      		movw r10,r18
 241:lib/ili9341/lcd.c ****     lcd_hline(x0, y0, length, color);
 1344               		.loc 1 241 5 is_stmt 1 view .LVU255
 1345 03e8 9801      		movw r18,r16
 1346               	.LVL123:
 1347               		.loc 1 241 5 is_stmt 0 view .LVU256
 1348 03ea 0E94 0000 		call lcd_hline
 1349               	.LVL124:
 242:lib/ili9341/lcd.c ****     lcd_hline(x0, y0+width, length, color);
 1350               		.loc 1 242 5 is_stmt 1 view .LVU257
 1351 03ee B701      		movw r22,r14
 1352 03f0 6A0D      		add r22,r10
 1353 03f2 7B1D      		adc r23,r11
 1354 03f4 9801      		movw r18,r16
 1355 03f6 A601      		movw r20,r12
 1356 03f8 CE01      		movw r24,r28
 1357 03fa 0E94 0000 		call lcd_hline
 1358               	.LVL125:
 243:lib/ili9341/lcd.c ****     lcd_vline(x0, y0, width, color);
 1359               		.loc 1 243 5 view .LVU258
 1360 03fe 9801      		movw r18,r16
 1361 0400 A501      		movw r20,r10
 1362 0402 B701      		movw r22,r14
 1363 0404 CE01      		movw r24,r28
 1364 0406 0E94 0000 		call lcd_vline
 1365               	.LVL126:
 244:lib/ili9341/lcd.c ****     lcd_vline(x0+length, y0, width, color);
 1366               		.loc 1 244 5 view .LVU259
 1367 040a 9801      		movw r18,r16
 1368 040c A501      		movw r20,r10
 1369 040e B701      		movw r22,r14
 1370 0410 CE01      		movw r24,r28
 1371 0412 8C0D      		add r24,r12
 1372 0414 9D1D      		adc r25,r13
 1373               	/* epilogue start */
 245:lib/ili9341/lcd.c **** }
 1374               		.loc 1 245 1 is_stmt 0 view .LVU260
 1375 0416 DF91      		pop r29
 1376 0418 CF91      		pop r28
 1377               	.LVL127:
 1378               		.loc 1 245 1 view .LVU261
 1379 041a 1F91      		pop r17
 1380 041c 0F91      		pop r16
 1381               	.LVL128:
 1382               		.loc 1 245 1 view .LVU262
 1383 041e FF90      		pop r15
 1384 0420 EF90      		pop r14
 1385               	.LVL129:
 1386               		.loc 1 245 1 view .LVU263
 1387 0422 DF90      		pop r13
 1388 0424 CF90      		pop r12
 1389               	.LVL130:
 1390               		.loc 1 245 1 view .LVU264
 1391 0426 BF90      		pop r11
 1392 0428 AF90      		pop r10
 1393               	.LVL131:
 244:lib/ili9341/lcd.c ****     lcd_vline(x0+length, y0, width, color);
 1394               		.loc 1 244 5 view .LVU265
 1395 042a 0C94 0000 		jmp lcd_vline
 1396               	.LVL132:
 244:lib/ili9341/lcd.c ****     lcd_vline(x0+length, y0, width, color);
 1397               		.loc 1 244 5 view .LVU266
 1398               		.cfi_endproc
 1399               	.LFE27:
 1401               	.global	lcd_fill_rectange
 1403               	lcd_fill_rectange:
 1404               	.LVL133:
 1405               	.LFB28:
 246:lib/ili9341/lcd.c **** 
 247:lib/ili9341/lcd.c **** void lcd_fill_rectange(uint16_t x0, uint16_t y0, uint16_t length,
 248:lib/ili9341/lcd.c ****     uint16_t width, uint16_t color)
 249:lib/ili9341/lcd.c **** {
 1406               		.loc 1 249 1 is_stmt 1 view -0
 1407               		.cfi_startproc
 1408               		.loc 1 249 1 is_stmt 0 view .LVU268
 1409 042e AF92      		push r10
 1410               	.LCFI62:
 1411               		.cfi_def_cfa_offset 3
 1412               		.cfi_offset 10, -2
 1413 0430 BF92      		push r11
 1414               	.LCFI63:
 1415               		.cfi_def_cfa_offset 4
 1416               		.cfi_offset 11, -3
 1417 0432 CF92      		push r12
 1418               	.LCFI64:
 1419               		.cfi_def_cfa_offset 5
 1420               		.cfi_offset 12, -4
 1421 0434 DF92      		push r13
 1422               	.LCFI65:
 1423               		.cfi_def_cfa_offset 6
 1424               		.cfi_offset 13, -5
 1425 0436 EF92      		push r14
 1426               	.LCFI66:
 1427               		.cfi_def_cfa_offset 7
 1428               		.cfi_offset 14, -6
 1429 0438 FF92      		push r15
 1430               	.LCFI67:
 1431               		.cfi_def_cfa_offset 8
 1432               		.cfi_offset 15, -7
 1433 043a 0F93      		push r16
 1434               	.LCFI68:
 1435               		.cfi_def_cfa_offset 9
 1436               		.cfi_offset 16, -8
 1437 043c 1F93      		push r17
 1438               	.LCFI69:
 1439               		.cfi_def_cfa_offset 10
 1440               		.cfi_offset 17, -9
 1441 043e CF93      		push r28
 1442               	.LCFI70:
 1443               		.cfi_def_cfa_offset 11
 1444               		.cfi_offset 28, -10
 1445 0440 DF93      		push r29
 1446               	.LCFI71:
 1447               		.cfi_def_cfa_offset 12
 1448               		.cfi_offset 29, -11
 1449               	/* prologue: function */
 1450               	/* frame size = 0 */
 1451               	/* stack size = 10 */
 1452               	.L__stack_usage = 10
 1453 0442 D82E      		mov r13,r24
 1454 0444 C92E      		mov r12,r25
 1455 0446 EB01      		movw r28,r22
 1456 0448 B42E      		mov r11,r20
 1457 044a A52E      		mov r10,r21
 250:lib/ili9341/lcd.c ****     for (int i=0; i<width; i++)
 1458               		.loc 1 250 5 is_stmt 1 view .LVU269
 1459               	.LBB40:
 1460               		.loc 1 250 10 view .LVU270
 1461               	.LVL134:
 1462               		.loc 1 250 10 is_stmt 0 view .LVU271
 1463 044c 7901      		movw r14,r18
 1464 044e E60E      		add r14,r22
 1465 0450 F71E      		adc r15,r23
 1466               	.LVL135:
 1467               	.L51:
 1468               		.loc 1 250 19 is_stmt 1 discriminator 1 view .LVU272
 1469               		.loc 1 250 5 is_stmt 0 discriminator 1 view .LVU273
 1470 0452 CE15      		cp r28,r14
 1471 0454 DF05      		cpc r29,r15
 1472 0456 01F4      		brne .L52
 1473               	/* epilogue start */
 1474               	.LBE40:
 251:lib/ili9341/lcd.c ****     {
 252:lib/ili9341/lcd.c ****         lcd_hline(x0, y0+i, length, color);
 253:lib/ili9341/lcd.c ****     }
 254:lib/ili9341/lcd.c **** }
 1475               		.loc 1 254 1 view .LVU274
 1476 0458 DF91      		pop r29
 1477 045a CF91      		pop r28
 1478 045c 1F91      		pop r17
 1479 045e 0F91      		pop r16
 1480               	.LVL136:
 1481               		.loc 1 254 1 view .LVU275
 1482 0460 FF90      		pop r15
 1483 0462 EF90      		pop r14
 1484 0464 DF90      		pop r13
 1485 0466 CF90      		pop r12
 1486 0468 BF90      		pop r11
 1487 046a AF90      		pop r10
 1488 046c 0895      		ret
 1489               	.LVL137:
 1490               	.L52:
 1491               	.LBB41:
 252:lib/ili9341/lcd.c ****     }
 1492               		.loc 1 252 9 is_stmt 1 discriminator 3 view .LVU276
 1493 046e 9801      		movw r18,r16
 1494 0470 4B2D      		mov r20,r11
 1495 0472 5A2D      		mov r21,r10
 1496 0474 BE01      		movw r22,r28
 1497 0476 8D2D      		mov r24,r13
 1498 0478 9C2D      		mov r25,r12
 1499 047a 0E94 0000 		call lcd_hline
 1500               	.LVL138:
 250:lib/ili9341/lcd.c ****     for (int i=0; i<width; i++)
 1501               		.loc 1 250 28 discriminator 3 view .LVU277
 250:lib/ili9341/lcd.c ****     for (int i=0; i<width; i++)
 1502               		.loc 1 250 28 is_stmt 0 discriminator 3 view .LVU278
 1503 047e 2196      		adiw r28,1
 1504 0480 00C0      		rjmp .L51
 1505               	.LBE41:
 1506               		.cfi_endproc
 1507               	.LFE28:
 1509               	.global	lcd_bg
 1511               	lcd_bg:
 1512               	.LVL139:
 1513               	.LFB29:
 255:lib/ili9341/lcd.c **** 
 256:lib/ili9341/lcd.c **** void lcd_bg(uint16_t color)
 257:lib/ili9341/lcd.c **** {
 1514               		.loc 1 257 1 is_stmt 1 view -0
 1515               		.cfi_startproc
 1516               		.loc 1 257 1 is_stmt 0 view .LVU280
 1517 0482 0F93      		push r16
 1518               	.LCFI72:
 1519               		.cfi_def_cfa_offset 3
 1520               		.cfi_offset 16, -2
 1521 0484 1F93      		push r17
 1522               	.LCFI73:
 1523               		.cfi_def_cfa_offset 4
 1524               		.cfi_offset 17, -3
 1525               	/* prologue: function */
 1526               	/* frame size = 0 */
 1527               	/* stack size = 2 */
 1528               	.L__stack_usage = 2
 1529 0486 8C01      		movw r16,r24
 258:lib/ili9341/lcd.c ****     lcd_fill_rectange(0,0,lcd_max_x, lcd_max_y, color);
 1530               		.loc 1 258 5 is_stmt 1 view .LVU281
 1531 0488 2091 0000 		lds r18,lcd_max_y
 1532 048c 3091 0000 		lds r19,lcd_max_y+1
 1533 0490 4091 0000 		lds r20,lcd_max_x
 1534 0494 5091 0000 		lds r21,lcd_max_x+1
 1535 0498 70E0      		ldi r23,0
 1536 049a 60E0      		ldi r22,0
 1537 049c 90E0      		ldi r25,0
 1538 049e 80E0      		ldi r24,0
 1539               	.LVL140:
 1540               		.loc 1 258 5 is_stmt 0 view .LVU282
 1541 04a0 0E94 0000 		call lcd_fill_rectange
 1542               	.LVL141:
 1543               	/* epilogue start */
 259:lib/ili9341/lcd.c **** }
 1544               		.loc 1 259 1 view .LVU283
 1545 04a4 1F91      		pop r17
 1546 04a6 0F91      		pop r16
 1547               	.LVL142:
 1548               		.loc 1 259 1 view .LVU284
 1549 04a8 0895      		ret
 1550               		.cfi_endproc
 1551               	.LFE29:
 1553               	.global	lcd_circle
 1555               	lcd_circle:
 1556               	.LVL143:
 1557               	.LFB30:
 260:lib/ili9341/lcd.c **** 
 261:lib/ili9341/lcd.c **** 
 262:lib/ili9341/lcd.c **** void lcd_circle(uint16_t x0, uint16_t y0, uint16_t r,
 263:lib/ili9341/lcd.c ****     uint16_t color)
 264:lib/ili9341/lcd.c **** {
 1558               		.loc 1 264 1 is_stmt 1 view -0
 1559               		.cfi_startproc
 1560               		.loc 1 264 1 is_stmt 0 view .LVU286
 1561 04aa 2F92      		push r2
 1562               	.LCFI74:
 1563               		.cfi_def_cfa_offset 3
 1564               		.cfi_offset 2, -2
 1565 04ac 3F92      		push r3
 1566               	.LCFI75:
 1567               		.cfi_def_cfa_offset 4
 1568               		.cfi_offset 3, -3
 1569 04ae 4F92      		push r4
 1570               	.LCFI76:
 1571               		.cfi_def_cfa_offset 5
 1572               		.cfi_offset 4, -4
 1573 04b0 5F92      		push r5
 1574               	.LCFI77:
 1575               		.cfi_def_cfa_offset 6
 1576               		.cfi_offset 5, -5
 1577 04b2 6F92      		push r6
 1578               	.LCFI78:
 1579               		.cfi_def_cfa_offset 7
 1580               		.cfi_offset 6, -6
 1581 04b4 7F92      		push r7
 1582               	.LCFI79:
 1583               		.cfi_def_cfa_offset 8
 1584               		.cfi_offset 7, -7
 1585 04b6 8F92      		push r8
 1586               	.LCFI80:
 1587               		.cfi_def_cfa_offset 9
 1588               		.cfi_offset 8, -8
 1589 04b8 9F92      		push r9
 1590               	.LCFI81:
 1591               		.cfi_def_cfa_offset 10
 1592               		.cfi_offset 9, -9
 1593 04ba AF92      		push r10
 1594               	.LCFI82:
 1595               		.cfi_def_cfa_offset 11
 1596               		.cfi_offset 10, -10
 1597 04bc BF92      		push r11
 1598               	.LCFI83:
 1599               		.cfi_def_cfa_offset 12
 1600               		.cfi_offset 11, -11
 1601 04be CF92      		push r12
 1602               	.LCFI84:
 1603               		.cfi_def_cfa_offset 13
 1604               		.cfi_offset 12, -12
 1605 04c0 DF92      		push r13
 1606               	.LCFI85:
 1607               		.cfi_def_cfa_offset 14
 1608               		.cfi_offset 13, -13
 1609 04c2 EF92      		push r14
 1610               	.LCFI86:
 1611               		.cfi_def_cfa_offset 15
 1612               		.cfi_offset 14, -14
 1613 04c4 FF92      		push r15
 1614               	.LCFI87:
 1615               		.cfi_def_cfa_offset 16
 1616               		.cfi_offset 15, -15
 1617 04c6 0F93      		push r16
 1618               	.LCFI88:
 1619               		.cfi_def_cfa_offset 17
 1620               		.cfi_offset 16, -16
 1621 04c8 1F93      		push r17
 1622               	.LCFI89:
 1623               		.cfi_def_cfa_offset 18
 1624               		.cfi_offset 17, -17
 1625 04ca CF93      		push r28
 1626               	.LCFI90:
 1627               		.cfi_def_cfa_offset 19
 1628               		.cfi_offset 28, -18
 1629 04cc DF93      		push r29
 1630               	.LCFI91:
 1631               		.cfi_def_cfa_offset 20
 1632               		.cfi_offset 29, -19
 1633               	/* prologue: function */
 1634               	/* frame size = 0 */
 1635               	/* stack size = 18 */
 1636               	.L__stack_usage = 18
 1637 04ce 2C01      		movw r4,r24
 1638 04d0 3B01      		movw r6,r22
 1639 04d2 1901      		movw r2,r18
 265:lib/ili9341/lcd.c ****     int16_t x = -r, y=0, err = 2-2*r, e2;
 1640               		.loc 1 265 5 is_stmt 1 view .LVU287
 1641               		.loc 1 265 17 is_stmt 0 view .LVU288
 1642 04d4 0027      		clr r16
 1643 04d6 1127      		clr r17
 1644 04d8 041B      		sub r16,r20
 1645 04da 150B      		sbc r17,r21
 1646               	.LVL144:
 1647               		.loc 1 265 33 view .LVU289
 1648 04dc C1E0      		ldi r28,lo8(1)
 1649 04de D0E0      		ldi r29,0
 1650 04e0 C41B      		sub r28,r20
 1651 04e2 D50B      		sbc r29,r21
 1652 04e4 CC0F      		lsl r28
 1653 04e6 DD1F      		rol r29
 1654               	.LVL145:
 1655               		.loc 1 265 21 view .LVU290
 1656 04e8 F12C      		mov r15,__zero_reg__
 1657 04ea E12C      		mov r14,__zero_reg__
 1658               	.LVL146:
 1659               	.L58:
 266:lib/ili9341/lcd.c ****     do
 1660               		.loc 1 266 5 is_stmt 1 view .LVU291
 267:lib/ili9341/lcd.c ****     {
 268:lib/ili9341/lcd.c ****        lcd_pixel(x0-x, y0+y, color);
 1661               		.loc 1 268 8 view .LVU292
 1662 04ec A101      		movw r20,r2
 1663 04ee 5701      		movw r10,r14
 1664 04f0 A60C      		add r10,r6
 1665 04f2 B71C      		adc r11,r7
 1666 04f4 B501      		movw r22,r10
 1667 04f6 6201      		movw r12,r4
 1668 04f8 C01A      		sub r12,r16
 1669 04fa D10A      		sbc r13,r17
 1670 04fc C601      		movw r24,r12
 1671 04fe 0E94 0000 		call lcd_pixel
 1672               	.LVL147:
 269:lib/ili9341/lcd.c ****        lcd_pixel(x0+x, y0+y, color);
 1673               		.loc 1 269 8 view .LVU293
 1674 0502 A101      		movw r20,r2
 1675 0504 B501      		movw r22,r10
 1676 0506 4801      		movw r8,r16
 1677 0508 840C      		add r8,r4
 1678 050a 951C      		adc r9,r5
 1679 050c C401      		movw r24,r8
 1680 050e 0E94 0000 		call lcd_pixel
 1681               	.LVL148:
 270:lib/ili9341/lcd.c ****        lcd_pixel(x0+x, y0-y, color);
 1682               		.loc 1 270 8 view .LVU294
 1683 0512 A101      		movw r20,r2
 1684 0514 5301      		movw r10,r6
 1685 0516 AE18      		sub r10,r14
 1686 0518 BF08      		sbc r11,r15
 1687 051a B501      		movw r22,r10
 1688 051c C401      		movw r24,r8
 1689 051e 0E94 0000 		call lcd_pixel
 1690               	.LVL149:
 271:lib/ili9341/lcd.c ****        lcd_pixel(x0-x, y0-y, color);
 1691               		.loc 1 271 8 view .LVU295
 1692 0522 A101      		movw r20,r2
 1693 0524 B501      		movw r22,r10
 1694 0526 C601      		movw r24,r12
 1695 0528 0E94 0000 		call lcd_pixel
 1696               	.LVL150:
 272:lib/ili9341/lcd.c ****        e2 = err;
 1697               		.loc 1 272 8 view .LVU296
 273:lib/ili9341/lcd.c ****        if (e2 <= y)
 1698               		.loc 1 273 8 view .LVU297
 1699               		.loc 1 273 11 is_stmt 0 view .LVU298
 1700 052c EC16      		cp r14,r28
 1701 052e FD06      		cpc r15,r29
 1702 0530 04F0      		brlt .L59
 274:lib/ili9341/lcd.c ****        {
 275:lib/ili9341/lcd.c ****            err += ++y*2+1;
 1703               		.loc 1 275 12 is_stmt 1 view .LVU299
 1704               		.loc 1 275 24 is_stmt 0 view .LVU300
 1705 0532 8FEF      		ldi r24,-1
 1706 0534 E81A      		sub r14,r24
 1707 0536 F80A      		sbc r15,r24
 1708               	.LVL151:
 1709               		.loc 1 275 22 view .LVU301
 1710 0538 C701      		movw r24,r14
 1711 053a 880F      		lsl r24
 1712 053c 991F      		rol r25
 1713               		.loc 1 275 24 view .LVU302
 1714 053e 0196      		adiw r24,1
 1715               		.loc 1 275 16 view .LVU303
 1716 0540 8C0F      		add r24,r28
 1717 0542 9D1F      		adc r25,r29
 1718               	.LVL152:
 276:lib/ili9341/lcd.c ****            if (-x == y && e2 <= x)
 1719               		.loc 1 276 12 is_stmt 1 view .LVU304
 1720               		.loc 1 276 16 is_stmt 0 view .LVU305
 1721 0544 2227      		clr r18
 1722 0546 3327      		clr r19
 1723 0548 201B      		sub r18,r16
 1724 054a 310B      		sbc r19,r17
 1725               		.loc 1 276 15 view .LVU306
 1726 054c 2E15      		cp r18,r14
 1727 054e 3F05      		cpc r19,r15
 1728 0550 01F4      		brne .L55
 1729               		.loc 1 276 24 discriminator 1 view .LVU307
 1730 0552 0C17      		cp r16,r28
 1731 0554 1D07      		cpc r17,r29
 1732 0556 04F0      		brlt .L56
 277:lib/ili9341/lcd.c ****            {
 278:lib/ili9341/lcd.c ****                e2 = 0;
 1733               		.loc 1 278 19 view .LVU308
 1734 0558 D0E0      		ldi r29,0
 1735 055a C0E0      		ldi r28,0
 1736               	.LVL153:
 1737               	.L55:
 279:lib/ili9341/lcd.c ****            }
 280:lib/ili9341/lcd.c ****        }
 281:lib/ili9341/lcd.c ****        if (e2 > x)
 1738               		.loc 1 281 8 is_stmt 1 view .LVU309
 1739               		.loc 1 281 11 is_stmt 0 view .LVU310
 1740 055c 0C17      		cp r16,r28
 1741 055e 1D07      		cpc r17,r29
 1742 0560 04F4      		brge .L60
 1743               	.L56:
 1744               	.LVL154:
 282:lib/ili9341/lcd.c ****        {
 283:lib/ili9341/lcd.c ****            err += ++x*2+1;
 1745               		.loc 1 283 12 is_stmt 1 view .LVU311
 1746               		.loc 1 283 24 is_stmt 0 view .LVU312
 1747 0562 0F5F      		subi r16,-1
 1748 0564 1F4F      		sbci r17,-1
 1749               	.LVL155:
 1750               		.loc 1 283 22 view .LVU313
 1751 0566 E801      		movw r28,r16
 1752 0568 CC0F      		lsl r28
 1753 056a DD1F      		rol r29
 1754               		.loc 1 283 24 view .LVU314
 1755 056c 2196      		adiw r28,1
 1756               		.loc 1 283 16 view .LVU315
 1757 056e C80F      		add r28,r24
 1758 0570 D91F      		adc r29,r25
 1759               	.LVL156:
 1760               	.L57:
 284:lib/ili9341/lcd.c ****        }
 285:lib/ili9341/lcd.c ****     } while(x <= 0);
 1761               		.loc 1 285 12 is_stmt 1 view .LVU316
 1762               		.loc 1 285 5 is_stmt 0 view .LVU317
 1763 0572 1016      		cp __zero_reg__,r16
 1764 0574 1106      		cpc __zero_reg__,r17
 1765 0576 04F0      		brlt .+2
 1766 0578 00C0      		rjmp .L58
 1767               	/* epilogue start */
 286:lib/ili9341/lcd.c **** }
 1768               		.loc 1 286 1 view .LVU318
 1769 057a DF91      		pop r29
 1770 057c CF91      		pop r28
 1771               	.LVL157:
 1772               		.loc 1 286 1 view .LVU319
 1773 057e 1F91      		pop r17
 1774 0580 0F91      		pop r16
 1775               	.LVL158:
 1776               		.loc 1 286 1 view .LVU320
 1777 0582 FF90      		pop r15
 1778 0584 EF90      		pop r14
 1779               	.LVL159:
 1780               		.loc 1 286 1 view .LVU321
 1781 0586 DF90      		pop r13
 1782 0588 CF90      		pop r12
 1783 058a BF90      		pop r11
 1784 058c AF90      		pop r10
 1785 058e 9F90      		pop r9
 1786 0590 8F90      		pop r8
 1787 0592 7F90      		pop r7
 1788 0594 6F90      		pop r6
 1789               	.LVL160:
 1790               		.loc 1 286 1 view .LVU322
 1791 0596 5F90      		pop r5
 1792 0598 4F90      		pop r4
 1793               	.LVL161:
 1794               		.loc 1 286 1 view .LVU323
 1795 059a 3F90      		pop r3
 1796 059c 2F90      		pop r2
 1797               	.LVL162:
 1798               		.loc 1 286 1 view .LVU324
 1799 059e 0895      		ret
 1800               	.LVL163:
 1801               	.L59:
 1802               		.loc 1 286 1 view .LVU325
 1803 05a0 CE01      		movw r24,r28
 1804 05a2 00C0      		rjmp .L55
 1805               	.LVL164:
 1806               	.L60:
 1807               		.loc 1 286 1 view .LVU326
 1808 05a4 EC01      		movw r28,r24
 1809               	.LVL165:
 1810               		.loc 1 286 1 view .LVU327
 1811 05a6 00C0      		rjmp .L57
 1812               		.cfi_endproc
 1813               	.LFE30:
 1815               	.global	lcd_init
 1817               	lcd_init:
 1818               	.LFB31:
 287:lib/ili9341/lcd.c **** 
 288:lib/ili9341/lcd.c **** void lcd_init()
 289:lib/ili9341/lcd.c **** {
 1819               		.loc 1 289 1 is_stmt 1 view -0
 1820               		.cfi_startproc
 1821               	/* prologue: function */
 1822               	/* frame size = 0 */
 1823               	/* stack size = 0 */
 1824               	.L__stack_usage = 0
 290:lib/ili9341/lcd.c ****     lcd_ddr_init();
 1825               		.loc 1 290 5 view .LVU329
 1826 05a8 0E94 0000 		call lcd_ddr_init
 1827               	.LVL166:
 291:lib/ili9341/lcd.c ****     SPI_master_init();
 1828               		.loc 1 291 5 view .LVU330
 1829 05ac 0E94 0000 		call SPI_master_init
 1830               	.LVL167:
 292:lib/ili9341/lcd.c ****     lcd_cs_high();
 1831               		.loc 1 292 5 view .LVU331
 1832 05b0 0E94 0000 		call lcd_cs_high
 1833               	.LVL168:
 293:lib/ili9341/lcd.c ****     lcd_dc_high();
 1834               		.loc 1 293 5 view .LVU332
 1835 05b4 0E94 0000 		call lcd_dc_high
 1836               	.LVL169:
 294:lib/ili9341/lcd.c **** 
 295:lib/ili9341/lcd.c ****     lcd_rst_on();
 1837               		.loc 1 295 5 view .LVU333
 1838 05b8 0E94 0000 		call lcd_rst_on
 1839               	.LVL170:
 296:lib/ili9341/lcd.c ****     _delay_ms(10);
 1840               		.loc 1 296 5 view .LVU334
 1841               	.LBB42:
 1842               	.LBI42:
 1843               		.file 2 "/usr/avr/include/util/delay.h"
   1:/usr/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/avr/include/util/delay.h **** 
   6:/usr/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/avr/include/util/delay.h **** 
   9:/usr/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/avr/include/util/delay.h **** 
  12:/usr/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/avr/include/util/delay.h ****      distribution.
  16:/usr/avr/include/util/delay.h **** 
  17:/usr/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/avr/include/util/delay.h **** 
  21:/usr/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/avr/include/util/delay.h **** 
  33:/usr/avr/include/util/delay.h **** /* $Id: delay.h.in 2506 2016-02-08 10:05:45Z joerg_wunsch $ */
  34:/usr/avr/include/util/delay.h **** 
  35:/usr/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
  36:/usr/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/avr/include/util/delay.h **** 
  38:/usr/avr/include/util/delay.h **** #ifndef __DOXYGEN__
  39:/usr/avr/include/util/delay.h **** #  ifndef __HAS_DELAY_CYCLES
  40:/usr/avr/include/util/delay.h **** #    define __HAS_DELAY_CYCLES 1
  41:/usr/avr/include/util/delay.h **** #  endif
  42:/usr/avr/include/util/delay.h **** #endif  /* __DOXYGEN__ */
  43:/usr/avr/include/util/delay.h **** 
  44:/usr/avr/include/util/delay.h **** #include <inttypes.h>
  45:/usr/avr/include/util/delay.h **** #include <util/delay_basic.h>
  46:/usr/avr/include/util/delay.h **** #include <math.h>
  47:/usr/avr/include/util/delay.h **** 
  48:/usr/avr/include/util/delay.h **** /** \file */
  49:/usr/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  50:/usr/avr/include/util/delay.h ****     \code
  51:/usr/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  52:/usr/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  53:/usr/avr/include/util/delay.h ****     #include <util/delay.h>
  54:/usr/avr/include/util/delay.h ****     \endcode
  55:/usr/avr/include/util/delay.h **** 
  56:/usr/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  57:/usr/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  58:/usr/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  59:/usr/avr/include/util/delay.h ****     used.
  60:/usr/avr/include/util/delay.h **** 
  61:/usr/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  62:/usr/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  63:/usr/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  64:/usr/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  65:/usr/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  66:/usr/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  67:/usr/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  68:/usr/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  69:/usr/avr/include/util/delay.h **** 
  70:/usr/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  71:/usr/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  72:/usr/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  73:/usr/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  74:/usr/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  75:/usr/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  76:/usr/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  77:/usr/avr/include/util/delay.h ****     routines linked into the application.
  78:/usr/avr/include/util/delay.h **** 
  79:/usr/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  80:/usr/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  81:/usr/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  82:/usr/avr/include/util/delay.h **** 
  83:/usr/avr/include/util/delay.h **** */
  84:/usr/avr/include/util/delay.h **** 
  85:/usr/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  86:/usr/avr/include/util/delay.h **** static __inline__ void _delay_us(double __us) __attribute__((__always_inline__));
  87:/usr/avr/include/util/delay.h **** static __inline__ void _delay_ms(double __ms) __attribute__((__always_inline__));
  88:/usr/avr/include/util/delay.h **** #endif
  89:/usr/avr/include/util/delay.h **** 
  90:/usr/avr/include/util/delay.h **** #ifndef F_CPU
  91:/usr/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  92:/usr/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  93:/usr/avr/include/util/delay.h **** /** \ingroup util_delay
  94:/usr/avr/include/util/delay.h ****     \def F_CPU
  95:/usr/avr/include/util/delay.h ****     \brief CPU frequency in Hz
  96:/usr/avr/include/util/delay.h **** 
  97:/usr/avr/include/util/delay.h ****     The macro F_CPU specifies the CPU frequency to be considered by
  98:/usr/avr/include/util/delay.h ****     the delay macros.  This macro is normally supplied by the
  99:/usr/avr/include/util/delay.h ****     environment (e.g. from within a project header, or the project's
 100:/usr/avr/include/util/delay.h ****     Makefile).  The value 1 MHz here is only provided as a "vanilla"
 101:/usr/avr/include/util/delay.h ****     fallback if no such user-provided definition could be found.
 102:/usr/avr/include/util/delay.h **** 
 103:/usr/avr/include/util/delay.h ****     In terms of the delay functions, the CPU frequency can be given as
 104:/usr/avr/include/util/delay.h ****     a floating-point constant (e.g. 3.6864E6 for 3.6864 MHz).
 105:/usr/avr/include/util/delay.h ****     However, the macros in <util/setbaud.h> require it to be an
 106:/usr/avr/include/util/delay.h ****     integer value.
 107:/usr/avr/include/util/delay.h ****  */
 108:/usr/avr/include/util/delay.h **** # define F_CPU 1000000UL
 109:/usr/avr/include/util/delay.h **** #endif
 110:/usr/avr/include/util/delay.h **** 
 111:/usr/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
 112:/usr/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
 113:/usr/avr/include/util/delay.h **** #endif
 114:/usr/avr/include/util/delay.h **** 
 115:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 116:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 117:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 118:/usr/avr/include/util/delay.h **** #  include <math.h>
 119:/usr/avr/include/util/delay.h **** #endif
 120:/usr/avr/include/util/delay.h **** 
 121:/usr/avr/include/util/delay.h **** /**
 122:/usr/avr/include/util/delay.h ****    \ingroup util_delay
 123:/usr/avr/include/util/delay.h **** 
 124:/usr/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 125:/usr/avr/include/util/delay.h **** 
 126:/usr/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 127:/usr/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 128:/usr/avr/include/util/delay.h **** 
 129:/usr/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 130:/usr/avr/include/util/delay.h **** 
 131:/usr/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 132:/usr/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 133:/usr/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 134:/usr/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 135:/usr/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 136:/usr/avr/include/util/delay.h **** 
 137:/usr/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles()
 138:/usr/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 139:/usr/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 140:/usr/avr/include/util/delay.h ****    no delay i.e., 0ms.
 141:/usr/avr/include/util/delay.h **** 
 142:/usr/avr/include/util/delay.h ****    Conversion of \c __ms into clock cycles may not always result in
 143:/usr/avr/include/util/delay.h ****    integer.  By default, the clock cycles rounded up to next
 144:/usr/avr/include/util/delay.h ****    integer. This ensures that the user gets at least \c __ms
 145:/usr/avr/include/util/delay.h ****    microseconds of delay.
 146:/usr/avr/include/util/delay.h **** 
 147:/usr/avr/include/util/delay.h ****    Alternatively, by defining the macro \c __DELAY_ROUND_DOWN__, or
 148:/usr/avr/include/util/delay.h ****    \c __DELAY_ROUND_CLOSEST__, before including this header file, the
 149:/usr/avr/include/util/delay.h ****    algorithm can be made to round down, or round to closest integer,
 150:/usr/avr/include/util/delay.h ****    respectively.
 151:/usr/avr/include/util/delay.h **** 
 152:/usr/avr/include/util/delay.h ****    \note
 153:/usr/avr/include/util/delay.h **** 
 154:/usr/avr/include/util/delay.h ****    The implementation of _delay_ms() based on
 155:/usr/avr/include/util/delay.h ****    __builtin_avr_delay_cycles() is not backward compatible with older
 156:/usr/avr/include/util/delay.h ****    implementations.  In order to get functionality backward compatible
 157:/usr/avr/include/util/delay.h ****    with previous versions, the macro \c "__DELAY_BACKWARD_COMPATIBLE__"
 158:/usr/avr/include/util/delay.h ****    must be defined before including this header file. Also, the
 159:/usr/avr/include/util/delay.h ****    backward compatible algorithm will be chosen if the code is
 160:/usr/avr/include/util/delay.h ****    compiled in a <em>freestanding environment</em> (GCC option
 161:/usr/avr/include/util/delay.h ****    \c -ffreestanding), as the math functions required for rounding are
 162:/usr/avr/include/util/delay.h ****    not available to the compiler then.
 163:/usr/avr/include/util/delay.h **** 
 164:/usr/avr/include/util/delay.h ****  */
 165:/usr/avr/include/util/delay.h **** void
 166:/usr/avr/include/util/delay.h **** _delay_ms(double __ms)
 1844               		.loc 2 166 1 view .LVU335
 1845               	.LBB43:
 167:/usr/avr/include/util/delay.h **** {
 168:/usr/avr/include/util/delay.h **** 	double __tmp ;
 1846               		.loc 2 168 2 view .LVU336
 169:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 170:/usr/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 171:/usr/avr/include/util/delay.h ****   __STDC_HOSTED__
 172:/usr/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 1847               		.loc 2 172 2 view .LVU337
 173:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 1848               		.loc 2 173 2 view .LVU338
 174:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 1849               		.loc 2 174 2 view .LVU339
 175:/usr/avr/include/util/delay.h **** 
 176:/usr/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 177:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 178:/usr/avr/include/util/delay.h **** 
 179:/usr/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 180:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 181:/usr/avr/include/util/delay.h **** 
 182:/usr/avr/include/util/delay.h **** 	#else
 183:/usr/avr/include/util/delay.h **** 		//round up by default
 184:/usr/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 1850               		.loc 2 184 3 view .LVU340
 185:/usr/avr/include/util/delay.h **** 	#endif
 186:/usr/avr/include/util/delay.h **** 
 187:/usr/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 1851               		.loc 2 187 2 view .LVU341
 1852 05bc 8FE3      		ldi r24,lo8(-25537)
 1853 05be 9CE9      		ldi r25,hi8(-25537)
 1854 05c0 0197      	1:	sbiw r24,1
 1855 05c2 01F4      		brne 1b
 1856 05c4 00C0      		rjmp .
 1857 05c6 0000      		nop
 1858               	.LVL171:
 1859               		.loc 2 187 2 is_stmt 0 view .LVU342
 1860               	.LBE43:
 1861               	.LBE42:
 297:lib/ili9341/lcd.c ****     lcd_rst_off();
 1862               		.loc 1 297 5 is_stmt 1 view .LVU343
 1863 05c8 0E94 0000 		call lcd_rst_off
 1864               	.LVL172:
 298:lib/ili9341/lcd.c **** 
 299:lib/ili9341/lcd.c ****     lcd_setOrientation(PORTRAIT);
 1865               		.loc 1 299 5 view .LVU344
 1866 05cc 80E0      		ldi r24,0
 1867 05ce 0E94 0000 		call lcd_setOrientation
 1868               	.LVL173:
 300:lib/ili9341/lcd.c **** 
 301:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_POWER_ON_SEQ_CONTROL);
 1869               		.loc 1 301 5 view .LVU345
 1870 05d2 8BEC      		ldi r24,lo8(-53)
 1871 05d4 0E94 0000 		call lcd_send_cmd
 1872               	.LVL174:
 302:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_IDLE_MODE_ON);
 1873               		.loc 1 302 5 view .LVU346
 1874 05d8 89E3      		ldi r24,lo8(57)
 1875 05da 0E94 0000 		call lcd_send_data
 1876               	.LVL175:
 303:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_MEMORY_WRITE);
 1877               		.loc 1 303 5 view .LVU347
 1878 05de 8CE2      		ldi r24,lo8(44)
 1879 05e0 0E94 0000 		call lcd_send_data
 1880               	.LVL176:
 304:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 1881               		.loc 1 304 5 view .LVU348
 1882 05e4 80E0      		ldi r24,0
 1883 05e6 0E94 0000 		call lcd_send_data
 1884               	.LVL177:
 305:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_TEARING_EFFECT_LINE_OFF);
 1885               		.loc 1 305 5 view .LVU349
 1886 05ea 84E3      		ldi r24,lo8(52)
 1887 05ec 0E94 0000 		call lcd_send_data
 1888               	.LVL178:
 306:lib/ili9341/lcd.c ****     lcd_send_data(0x02);
 1889               		.loc 1 306 5 view .LVU350
 1890 05f0 82E0      		ldi r24,lo8(2)
 1891 05f2 0E94 0000 		call lcd_send_data
 1892               	.LVL179:
 307:lib/ili9341/lcd.c **** 
 308:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_POWER_CONTROL_B);
 1893               		.loc 1 308 5 view .LVU351
 1894 05f6 8FEC      		ldi r24,lo8(-49)
 1895 05f8 0E94 0000 		call lcd_send_cmd
 1896               	.LVL180:
 309:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 1897               		.loc 1 309 5 view .LVU352
 1898 05fc 80E0      		ldi r24,0
 1899 05fe 0E94 0000 		call lcd_send_data
 1900               	.LVL181:
 310:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_POWER_CONTROL_2);
 1901               		.loc 1 310 5 view .LVU353
 1902 0602 81EC      		ldi r24,lo8(-63)
 1903 0604 0E94 0000 		call lcd_send_data
 1904               	.LVL182:
 311:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_PARTIAL_AREA);
 1905               		.loc 1 311 5 view .LVU354
 1906 0608 80E3      		ldi r24,lo8(48)
 1907 060a 0E94 0000 		call lcd_send_data
 1908               	.LVL183:
 312:lib/ili9341/lcd.c **** 
 313:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_DRIVER_TIMING_CONTROL_A);
 1909               		.loc 1 313 5 view .LVU355
 1910 060e 88EE      		ldi r24,lo8(-24)
 1911 0610 0E94 0000 		call lcd_send_cmd
 1912               	.LVL184:
 314:lib/ili9341/lcd.c ****     lcd_send_data(0x85);
 1913               		.loc 1 314 5 view .LVU356
 1914 0614 85E8      		ldi r24,lo8(-123)
 1915 0616 0E94 0000 		call lcd_send_data
 1916               	.LVL185:
 315:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 1917               		.loc 1 315 5 view .LVU357
 1918 061a 80E0      		ldi r24,0
 1919 061c 0E94 0000 		call lcd_send_data
 1920               	.LVL186:
 316:lib/ili9341/lcd.c ****     lcd_send_data(0x78);
 1921               		.loc 1 316 5 view .LVU358
 1922 0620 88E7      		ldi r24,lo8(120)
 1923 0622 0E94 0000 		call lcd_send_data
 1924               	.LVL187:
 317:lib/ili9341/lcd.c **** 
 318:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_DRIVER_TIMING_CONTROL_B);
 1925               		.loc 1 318 5 view .LVU359
 1926 0626 8AEE      		ldi r24,lo8(-22)
 1927 0628 0E94 0000 		call lcd_send_cmd
 1928               	.LVL188:
 319:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 1929               		.loc 1 319 5 view .LVU360
 1930 062c 80E0      		ldi r24,0
 1931 062e 0E94 0000 		call lcd_send_data
 1932               	.LVL189:
 320:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 1933               		.loc 1 320 5 view .LVU361
 1934 0632 80E0      		ldi r24,0
 1935 0634 0E94 0000 		call lcd_send_data
 1936               	.LVL190:
 321:lib/ili9341/lcd.c **** 
 322:lib/ili9341/lcd.c ****     lcd_send_cmd(0xED);
 1937               		.loc 1 322 5 view .LVU362
 1938 0638 8DEE      		ldi r24,lo8(-19)
 1939 063a 0E94 0000 		call lcd_send_cmd
 1940               	.LVL191:
 323:lib/ili9341/lcd.c ****     lcd_send_data(0x64);
 1941               		.loc 1 323 5 view .LVU363
 1942 063e 84E6      		ldi r24,lo8(100)
 1943 0640 0E94 0000 		call lcd_send_data
 1944               	.LVL192:
 324:lib/ili9341/lcd.c ****     lcd_send_data(0x03);
 1945               		.loc 1 324 5 view .LVU364
 1946 0644 83E0      		ldi r24,lo8(3)
 1947 0646 0E94 0000 		call lcd_send_data
 1948               	.LVL193:
 325:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_PARTIAL_MODE_ON);
 1949               		.loc 1 325 5 view .LVU365
 1950 064a 82E1      		ldi r24,lo8(18)
 1951 064c 0E94 0000 		call lcd_send_data
 1952               	.LVL194:
 326:lib/ili9341/lcd.c ****     lcd_send_data(0x81);
 1953               		.loc 1 326 5 view .LVU366
 1954 0650 81E8      		ldi r24,lo8(-127)
 1955 0652 0E94 0000 		call lcd_send_data
 1956               	.LVL195:
 327:lib/ili9341/lcd.c **** 
 328:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_PUMP_RATIO_CONTROL);
 1957               		.loc 1 328 5 view .LVU367
 1958 0656 87EF      		ldi r24,lo8(-9)
 1959 0658 0E94 0000 		call lcd_send_cmd
 1960               	.LVL196:
 329:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_DISP_INVERSION_OFF);
 1961               		.loc 1 329 5 view .LVU368
 1962 065c 80E2      		ldi r24,lo8(32)
 1963 065e 0E94 0000 		call lcd_send_data
 1964               	.LVL197:
 330:lib/ili9341/lcd.c **** 
 331:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_POWER_CONTROL_1);
 1965               		.loc 1 331 5 view .LVU369
 1966 0662 80EC      		ldi r24,lo8(-64)
 1967 0664 0E94 0000 		call lcd_send_cmd
 1968               	.LVL198:
 332:lib/ili9341/lcd.c ****     lcd_send_data(0x23);
 1969               		.loc 1 332 5 view .LVU370
 1970 0668 83E2      		ldi r24,lo8(35)
 1971 066a 0E94 0000 		call lcd_send_data
 1972               	.LVL199:
 333:lib/ili9341/lcd.c **** 
 334:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_POWER_CONTROL_2);
 1973               		.loc 1 334 5 view .LVU371
 1974 066e 81EC      		ldi r24,lo8(-63)
 1975 0670 0E94 0000 		call lcd_send_cmd
 1976               	.LVL200:
 335:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_ENTER_SLEEP_MODE);
 1977               		.loc 1 335 5 view .LVU372
 1978 0674 80E1      		ldi r24,lo8(16)
 1979 0676 0E94 0000 		call lcd_send_data
 1980               	.LVL201:
 336:lib/ili9341/lcd.c **** 
 337:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_VCOM_CONTROL_1);
 1981               		.loc 1 337 5 view .LVU373
 1982 067a 85EC      		ldi r24,lo8(-59)
 1983 067c 0E94 0000 		call lcd_send_cmd
 1984               	.LVL202:
 338:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_MEMORY_CONTINUE);
 1985               		.loc 1 338 5 view .LVU374
 1986 0680 8EE3      		ldi r24,lo8(62)
 1987 0682 0E94 0000 		call lcd_send_data
 1988               	.LVL203:
 339:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_DISPLAY_OFF);
 1989               		.loc 1 339 5 view .LVU375
 1990 0686 88E2      		ldi r24,lo8(40)
 1991 0688 0E94 0000 		call lcd_send_data
 1992               	.LVL204:
 340:lib/ili9341/lcd.c **** 
 341:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_VCOM_CONTROL_2);
 1993               		.loc 1 341 5 view .LVU376
 1994 068c 87EC      		ldi r24,lo8(-57)
 1995 068e 0E94 0000 		call lcd_send_cmd
 1996               	.LVL205:
 342:lib/ili9341/lcd.c ****     lcd_send_data(0x86);
 1997               		.loc 1 342 5 view .LVU377
 1998 0692 86E8      		ldi r24,lo8(-122)
 1999 0694 0E94 0000 		call lcd_send_data
 2000               	.LVL206:
 343:lib/ili9341/lcd.c **** 
 344:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_MEMORY_ACCESS_CONTROL);
 2001               		.loc 1 344 5 view .LVU378
 2002 0698 86E3      		ldi r24,lo8(54)
 2003 069a 0E94 0000 		call lcd_send_cmd
 2004               	.LVL207:
 345:lib/ili9341/lcd.c ****     lcd_send_data(0x48);
 2005               		.loc 1 345 5 view .LVU379
 2006 069e 88E4      		ldi r24,lo8(72)
 2007 06a0 0E94 0000 		call lcd_send_data
 2008               	.LVL208:
 346:lib/ili9341/lcd.c **** 
 347:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_COLMOD_PIXEL_FORMAT_SET);
 2009               		.loc 1 347 5 view .LVU380
 2010 06a4 8AE3      		ldi r24,lo8(58)
 2011 06a6 0E94 0000 		call lcd_send_cmd
 2012               	.LVL209:
 348:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_WRITE_CONTENT_ADAPT_BRIGHTNESS);
 2013               		.loc 1 348 5 view .LVU381
 2014 06aa 85E5      		ldi r24,lo8(85)
 2015 06ac 0E94 0000 		call lcd_send_data
 2016               	.LVL210:
 349:lib/ili9341/lcd.c **** 
 350:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_FRAME_RATE_CONTROL_NORMAL);
 2017               		.loc 1 350 5 view .LVU382
 2018 06b0 81EB      		ldi r24,lo8(-79)
 2019 06b2 0E94 0000 		call lcd_send_cmd
 2020               	.LVL211:
 351:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 2021               		.loc 1 351 5 view .LVU383
 2022 06b6 80E0      		ldi r24,0
 2023 06b8 0E94 0000 		call lcd_send_data
 2024               	.LVL212:
 352:lib/ili9341/lcd.c ****     lcd_send_data(0x18);
 2025               		.loc 1 352 5 view .LVU384
 2026 06bc 88E1      		ldi r24,lo8(24)
 2027 06be 0E94 0000 		call lcd_send_data
 2028               	.LVL213:
 353:lib/ili9341/lcd.c **** 
 354:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_DISPLAY_FUNCTION_CONTROL);
 2029               		.loc 1 354 5 view .LVU385
 2030 06c2 86EB      		ldi r24,lo8(-74)
 2031 06c4 0E94 0000 		call lcd_send_cmd
 2032               	.LVL214:
 355:lib/ili9341/lcd.c ****     lcd_send_data(0x08);
 2033               		.loc 1 355 5 view .LVU386
 2034 06c8 88E0      		ldi r24,lo8(8)
 2035 06ca 0E94 0000 		call lcd_send_data
 2036               	.LVL215:
 356:lib/ili9341/lcd.c ****     lcd_send_data(0x82);
 2037               		.loc 1 356 5 view .LVU387
 2038 06ce 82E8      		ldi r24,lo8(-126)
 2039 06d0 0E94 0000 		call lcd_send_data
 2040               	.LVL216:
 357:lib/ili9341/lcd.c ****     lcd_send_data(0x27);
 2041               		.loc 1 357 5 view .LVU388
 2042 06d4 87E2      		ldi r24,lo8(39)
 2043 06d6 0E94 0000 		call lcd_send_data
 2044               	.LVL217:
 358:lib/ili9341/lcd.c **** 
 359:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_ENABLE_3_GAMMA_CONTROL);
 2045               		.loc 1 359 5 view .LVU389
 2046 06da 82EF      		ldi r24,lo8(-14)
 2047 06dc 0E94 0000 		call lcd_send_cmd
 2048               	.LVL218:
 360:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 2049               		.loc 1 360 5 view .LVU390
 2050 06e0 80E0      		ldi r24,0
 2051 06e2 0E94 0000 		call lcd_send_data
 2052               	.LVL219:
 361:lib/ili9341/lcd.c **** 
 362:lib/ili9341/lcd.c ****     // Select Gamma curve 
 363:lib/ili9341/lcd.c ****     lcd_send_cmd(0x26);
 2053               		.loc 1 363 5 view .LVU391
 2054 06e6 86E2      		ldi r24,lo8(38)
 2055 06e8 0E94 0000 		call lcd_send_cmd
 2056               	.LVL220:
 364:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_SOFTWARE_RESET);
 2057               		.loc 1 364 5 view .LVU392
 2058 06ec 81E0      		ldi r24,lo8(1)
 2059 06ee 0E94 0000 		call lcd_send_data
 2060               	.LVL221:
 365:lib/ili9341/lcd.c **** 
 366:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_POSITIVE_GAMMA_CORRECTION);
 2061               		.loc 1 366 5 view .LVU393
 2062 06f2 80EE      		ldi r24,lo8(-32)
 2063 06f4 0E94 0000 		call lcd_send_cmd
 2064               	.LVL222:
 367:lib/ili9341/lcd.c ****     lcd_send_data(0x0f);
 2065               		.loc 1 367 5 view .LVU394
 2066 06f8 8FE0      		ldi r24,lo8(15)
 2067 06fa 0E94 0000 		call lcd_send_data
 2068               	.LVL223:
 368:lib/ili9341/lcd.c ****     lcd_send_data(0x31);
 2069               		.loc 1 368 5 view .LVU395
 2070 06fe 81E3      		ldi r24,lo8(49)
 2071 0700 0E94 0000 		call lcd_send_data
 2072               	.LVL224:
 369:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_PAGE_ADDRESS_SET);
 2073               		.loc 1 369 5 view .LVU396
 2074 0704 8BE2      		ldi r24,lo8(43)
 2075 0706 0E94 0000 		call lcd_send_data
 2076               	.LVL225:
 370:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_PIXEL_FORMAT);
 2077               		.loc 1 370 5 view .LVU397
 2078 070a 8CE0      		ldi r24,lo8(12)
 2079 070c 0E94 0000 		call lcd_send_data
 2080               	.LVL226:
 371:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_SIGNAL_MODE);
 2081               		.loc 1 371 5 view .LVU398
 2082 0710 8EE0      		ldi r24,lo8(14)
 2083 0712 0E94 0000 		call lcd_send_data
 2084               	.LVL227:
 372:lib/ili9341/lcd.c ****     lcd_send_data(0x08);
 2085               		.loc 1 372 5 view .LVU399
 2086 0716 88E0      		ldi r24,lo8(8)
 2087 0718 0E94 0000 		call lcd_send_data
 2088               	.LVL228:
 373:lib/ili9341/lcd.c ****     lcd_send_data(0x4e);
 2089               		.loc 1 373 5 view .LVU400
 2090 071c 8EE4      		ldi r24,lo8(78)
 2091 071e 0E94 0000 		call lcd_send_data
 2092               	.LVL229:
 374:lib/ili9341/lcd.c ****     lcd_send_data(0xf1);
 2093               		.loc 1 374 5 view .LVU401
 2094 0722 81EF      		ldi r24,lo8(-15)
 2095 0724 0E94 0000 		call lcd_send_data
 2096               	.LVL230:
 375:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_VERT_SCROLL_START_ADDRESS);
 2097               		.loc 1 375 5 view .LVU402
 2098 0728 87E3      		ldi r24,lo8(55)
 2099 072a 0E94 0000 		call lcd_send_data
 2100               	.LVL231:
 376:lib/ili9341/lcd.c ****     lcd_send_data(0x07);
 2101               		.loc 1 376 5 view .LVU403
 2102 072e 87E0      		ldi r24,lo8(7)
 2103 0730 0E94 0000 		call lcd_send_data
 2104               	.LVL232:
 377:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_ENTER_SLEEP_MODE);
 2105               		.loc 1 377 5 view .LVU404
 2106 0734 80E1      		ldi r24,lo8(16)
 2107 0736 0E94 0000 		call lcd_send_data
 2108               	.LVL233:
 378:lib/ili9341/lcd.c ****     lcd_send_data(0x03);
 2109               		.loc 1 378 5 view .LVU405
 2110 073a 83E0      		ldi r24,lo8(3)
 2111 073c 0E94 0000 		call lcd_send_data
 2112               	.LVL234:
 379:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_SIGNAL_MODE);
 2113               		.loc 1 379 5 view .LVU406
 2114 0740 8EE0      		ldi r24,lo8(14)
 2115 0742 0E94 0000 		call lcd_send_data
 2116               	.LVL235:
 380:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_STATUS);
 2117               		.loc 1 380 5 view .LVU407
 2118 0746 89E0      		ldi r24,lo8(9)
 2119 0748 0E94 0000 		call lcd_send_data
 2120               	.LVL236:
 381:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 2121               		.loc 1 381 5 view .LVU408
 2122 074c 80E0      		ldi r24,0
 2123 074e 0E94 0000 		call lcd_send_data
 2124               	.LVL237:
 382:lib/ili9341/lcd.c **** 
 383:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_NEGATIVE_GAMMA_CORRECTION);
 2125               		.loc 1 383 5 view .LVU409
 2126 0752 81EE      		ldi r24,lo8(-31)
 2127 0754 0E94 0000 		call lcd_send_cmd
 2128               	.LVL238:
 384:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_NOP);
 2129               		.loc 1 384 5 view .LVU410
 2130 0758 80E0      		ldi r24,0
 2131 075a 0E94 0000 		call lcd_send_data
 2132               	.LVL239:
 385:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_SIGNAL_MODE);
 2133               		.loc 1 385 5 view .LVU411
 2134 075e 8EE0      		ldi r24,lo8(14)
 2135 0760 0E94 0000 		call lcd_send_data
 2136               	.LVL240:
 386:lib/ili9341/lcd.c ****     lcd_send_data(0x14);
 2137               		.loc 1 386 5 view .LVU412
 2138 0764 84E1      		ldi r24,lo8(20)
 2139 0766 0E94 0000 		call lcd_send_data
 2140               	.LVL241:
 387:lib/ili9341/lcd.c ****     lcd_send_data(0x03);
 2141               		.loc 1 387 5 view .LVU413
 2142 076a 83E0      		ldi r24,lo8(3)
 2143 076c 0E94 0000 		call lcd_send_data
 2144               	.LVL242:
 388:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_SLEEP_OUT);
 2145               		.loc 1 388 5 view .LVU414
 2146 0770 81E1      		ldi r24,lo8(17)
 2147 0772 0E94 0000 		call lcd_send_data
 2148               	.LVL243:
 389:lib/ili9341/lcd.c ****     lcd_send_data(0x07);
 2149               		.loc 1 389 5 view .LVU415
 2150 0776 87E0      		ldi r24,lo8(7)
 2151 0778 0E94 0000 		call lcd_send_data
 2152               	.LVL244:
 390:lib/ili9341/lcd.c ****     lcd_send_data(0x31);
 2153               		.loc 1 390 5 view .LVU416
 2154 077c 81E3      		ldi r24,lo8(49)
 2155 077e 0E94 0000 		call lcd_send_data
 2156               	.LVL245:
 391:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_POWER_CONTROL_2);
 2157               		.loc 1 391 5 view .LVU417
 2158 0782 81EC      		ldi r24,lo8(-63)
 2159 0784 0E94 0000 		call lcd_send_data
 2160               	.LVL246:
 392:lib/ili9341/lcd.c ****     lcd_send_data(0x48);
 2161               		.loc 1 392 5 view .LVU418
 2162 0788 88E4      		ldi r24,lo8(72)
 2163 078a 0E94 0000 		call lcd_send_data
 2164               	.LVL247:
 393:lib/ili9341/lcd.c ****     lcd_send_data(0x08);
 2165               		.loc 1 393 5 view .LVU419
 2166 078e 88E0      		ldi r24,lo8(8)
 2167 0790 0E94 0000 		call lcd_send_data
 2168               	.LVL248:
 394:lib/ili9341/lcd.c ****     lcd_send_data(0x0f);
 2169               		.loc 1 394 5 view .LVU420
 2170 0794 8FE0      		ldi r24,lo8(15)
 2171 0796 0E94 0000 		call lcd_send_data
 2172               	.LVL249:
 395:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_PIXEL_FORMAT);
 2173               		.loc 1 395 5 view .LVU421
 2174 079a 8CE0      		ldi r24,lo8(12)
 2175 079c 0E94 0000 		call lcd_send_data
 2176               	.LVL250:
 396:lib/ili9341/lcd.c ****     lcd_send_data(0x31);
 2177               		.loc 1 396 5 view .LVU422
 2178 07a0 81E3      		ldi r24,lo8(49)
 2179 07a2 0E94 0000 		call lcd_send_data
 2180               	.LVL251:
 397:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_MEMORY_ACCESS_CONTROL);
 2181               		.loc 1 397 5 view .LVU423
 2182 07a6 86E3      		ldi r24,lo8(54)
 2183 07a8 0E94 0000 		call lcd_send_data
 2184               	.LVL252:
 398:lib/ili9341/lcd.c ****     lcd_send_data(ILI9341_CMD_READ_DISP_SELF_DIAGNOSTIC);
 2185               		.loc 1 398 5 view .LVU424
 2186 07ac 8FE0      		ldi r24,lo8(15)
 2187 07ae 0E94 0000 		call lcd_send_data
 2188               	.LVL253:
 399:lib/ili9341/lcd.c **** 
 400:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_SLEEP_OUT);
 2189               		.loc 1 400 5 view .LVU425
 2190 07b2 81E1      		ldi r24,lo8(17)
 2191 07b4 0E94 0000 		call lcd_send_cmd
 2192               	.LVL254:
 401:lib/ili9341/lcd.c ****     _delay_ms(120);
 2193               		.loc 1 401 5 view .LVU426
 2194               	.LBB44:
 2195               	.LBI44:
 166:/usr/avr/include/util/delay.h **** {
 2196               		.loc 2 166 1 view .LVU427
 2197               	.LBB45:
 168:/usr/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 2198               		.loc 2 168 2 view .LVU428
 172:/usr/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 2199               		.loc 2 172 2 view .LVU429
 173:/usr/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 2200               		.loc 2 173 2 view .LVU430
 174:/usr/avr/include/util/delay.h **** 
 2201               		.loc 2 174 2 view .LVU431
 184:/usr/avr/include/util/delay.h **** 	#endif
 2202               		.loc 2 184 3 view .LVU432
 2203               		.loc 2 187 2 view .LVU433
 2204 07b8 9FEF      		ldi r25,lo8(383999)
 2205 07ba 2BED      		ldi r18,hi8(383999)
 2206 07bc 85E0      		ldi r24,hlo8(383999)
 2207 07be 9150      	1:	subi r25,1
 2208 07c0 2040      		sbci r18,0
 2209 07c2 8040      		sbci r24,0
 2210 07c4 01F4      		brne 1b
 2211 07c6 00C0      		rjmp .
 2212 07c8 0000      		nop
 2213               	.LVL255:
 2214               		.loc 2 187 2 is_stmt 0 view .LVU434
 2215               	.LBE45:
 2216               	.LBE44:
 402:lib/ili9341/lcd.c **** 
 403:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_DISPLAY_ON);
 2217               		.loc 1 403 5 is_stmt 1 view .LVU435
 2218 07ca 89E2      		ldi r24,lo8(41)
 2219 07cc 0E94 0000 		call lcd_send_cmd
 2220               	.LVL256:
 404:lib/ili9341/lcd.c ****     lcd_send_cmd(ILI9341_CMD_MEMORY_WRITE);
 2221               		.loc 1 404 5 view .LVU436
 2222 07d0 8CE2      		ldi r24,lo8(44)
 2223 07d2 0E94 0000 		call lcd_send_cmd
 2224               	.LVL257:
 405:lib/ili9341/lcd.c ****     lcd_bg(lcd_bg_color);
 2225               		.loc 1 405 5 view .LVU437
 2226 07d6 8091 0000 		lds r24,lcd_bg_color
 2227 07da 9091 0000 		lds r25,lcd_bg_color+1
 2228 07de 0C94 0000 		jmp lcd_bg
 2229               	.LVL258:
 2230               		.cfi_endproc
 2231               	.LFE31:
 2233               	.global	lcd_bg_color
 2234               		.section .bss
 2237               	lcd_bg_color:
 2238 0000 0000      		.zero	2
 2239               		.comm	lcd_orientation,1,1
 2240               		.comm	lcd_max_y,2,1
 2241               		.comm	lcd_max_x,2,1
 2242               	.global	simpleFont
 2243               		.section	.progmem.data,"a",@progbits
 2246               	simpleFont:
 2247 0000 00        		.string	""
 2248 0001 00        		.string	""
 2249 0002 00        		.string	""
 2250 0003 00        		.string	""
 2251 0004 00        		.string	""
 2252 0005 00        		.string	""
 2253 0006 00        		.string	""
 2254 0007 00        		.string	""
 2255 0008 00        		.string	""
 2256 0009 00        		.string	""
 2257 000a 5F00      		.string	"_"
 2258 000c 00        		.string	""
 2259 000d 00        		.string	""
 2260 000e 00        		.string	""
 2261 000f 00        		.string	""
 2262 0010 00        		.string	""
 2263 0011 00        		.string	""
 2264 0012 0700      		.string	"\007"
 2265 0014 0700      		.string	"\007"
 2266 0016 00        		.string	""
 2267 0017 00        		.string	""
 2268 0018 00        		.string	""
 2269 0019 147F 147F 		.string	"\024\177\024\177\024"
 2269      1400 
 2270 001f 00        		.string	""
 2271 0020 00        		.string	""
 2272 0021 242A 7F2A 		.string	"$*\177*\022"
 2272      1200 
 2273 0027 00        		.string	""
 2274 0028 00        		.string	""
 2275 0029 2313 0864 		.string	"#\023\bdb"
 2275      6200 
 2276 002f 00        		.string	""
 2277 0030 00        		.string	""
 2278 0031 3649 5522 		.string	"6IU\"P"
 2278      5000 
 2279 0037 00        		.string	""
 2280 0038 00        		.string	""
 2281 0039 00        		.string	""
 2282 003a 0503 00   		.string	"\005\003"
 2283 003d 00        		.string	""
 2284 003e 00        		.string	""
 2285 003f 00        		.string	""
 2286 0040 00        		.string	""
 2287 0041 1C22 4100 		.string	"\034\"A"
 2288 0045 00        		.string	""
 2289 0046 00        		.string	""
 2290 0047 00        		.string	""
 2291 0048 00        		.string	""
 2292 0049 4122 1C00 		.string	"A\"\034"
 2293 004d 00        		.string	""
 2294 004e 00        		.string	""
 2295 004f 00        		.string	""
 2296 0050 00        		.string	""
 2297 0051 082A 1C2A 		.string	"\b*\034*\b"
 2297      0800 
 2298 0057 00        		.string	""
 2299 0058 00        		.string	""
 2300 0059 0808 3E08 		.string	"\b\b>\b\b"
 2300      0800 
 2301 005f 00        		.string	""
 2302 0060 00        		.string	""
 2303 0061 A060 00   		.string	"\240`"
 2304 0064 00        		.string	""
 2305 0065 00        		.string	""
 2306 0066 00        		.string	""
 2307 0067 00        		.string	""
 2308 0068 00        		.string	""
 2309 0069 0808 0808 		.string	"\b\b\b\b\b"
 2309      0800 
 2310 006f 00        		.string	""
 2311 0070 00        		.string	""
 2312 0071 6060 00   		.string	"``"
 2313 0074 00        		.string	""
 2314 0075 00        		.string	""
 2315 0076 00        		.string	""
 2316 0077 00        		.string	""
 2317 0078 00        		.string	""
 2318 0079 2010 0804 		.string	" \020\b\004\002"
 2318      0200 
 2319 007f 00        		.string	""
 2320 0080 00        		.string	""
 2321 0081 3E51 4945 		.string	">QIE>"
 2321      3E00 
 2322 0087 00        		.string	""
 2323 0088 00        		.string	""
 2324 0089 00        		.string	""
 2325 008a 427F 4000 		.string	"B\177@"
 2326 008e 00        		.string	""
 2327 008f 00        		.string	""
 2328 0090 00        		.string	""
 2329 0091 6251 4949 		.string	"bQIIF"
 2329      4600 
 2330 0097 00        		.string	""
 2331 0098 00        		.string	""
 2332 0099 2241 4949 		.string	"\"AII6"
 2332      3600 
 2333 009f 00        		.string	""
 2334 00a0 00        		.string	""
 2335 00a1 1814 127F 		.string	"\030\024\022\177\020"
 2335      1000 
 2336 00a7 00        		.string	""
 2337 00a8 00        		.string	""
 2338 00a9 2745 4545 		.string	"'EEE9"
 2338      3900 
 2339 00af 00        		.string	""
 2340 00b0 00        		.string	""
 2341 00b1 3C4A 4949 		.string	"<JII0"
 2341      3000 
 2342 00b7 00        		.string	""
 2343 00b8 00        		.string	""
 2344 00b9 0171 0905 		.string	"\001q\t\005\003"
 2344      0300 
 2345 00bf 00        		.string	""
 2346 00c0 00        		.string	""
 2347 00c1 3649 4949 		.string	"6III6"
 2347      3600 
 2348 00c7 00        		.string	""
 2349 00c8 00        		.string	""
 2350 00c9 0649 4929 		.string	"\006II)\036"
 2350      1E00 
 2351 00cf 00        		.string	""
 2352 00d0 00        		.string	""
 2353 00d1 00        		.string	""
 2354 00d2 3636 00   		.string	"66"
 2355 00d5 00        		.string	""
 2356 00d6 00        		.string	""
 2357 00d7 00        		.string	""
 2358 00d8 00        		.string	""
 2359 00d9 00        		.string	""
 2360 00da AC6C 00   		.string	"\254l"
 2361 00dd 00        		.string	""
 2362 00de 00        		.string	""
 2363 00df 00        		.string	""
 2364 00e0 00        		.string	""
 2365 00e1 0814 2241 		.string	"\b\024\"A"
 2365      00
 2366 00e6 00        		.string	""
 2367 00e7 00        		.string	""
 2368 00e8 00        		.string	""
 2369 00e9 1414 1414 		.string	"\024\024\024\024\024"
 2369      1400 
 2370 00ef 00        		.string	""
 2371 00f0 00        		.string	""
 2372 00f1 4122 1408 		.string	"A\"\024\b"
 2372      00
 2373 00f6 00        		.string	""
 2374 00f7 00        		.string	""
 2375 00f8 00        		.string	""
 2376 00f9 0201 5109 		.string	"\002\001Q\t\006"
 2376      0600 
 2377 00ff 00        		.string	""
 2378 0100 00        		.string	""
 2379 0101 3249 7941 		.string	"2IyA>"
 2379      3E00 
 2380 0107 00        		.string	""
 2381 0108 00        		.string	""
 2382 0109 7E09 0909 		.string	"~\t\t\t~"
 2382      7E00 
 2383 010f 00        		.string	""
 2384 0110 00        		.string	""
 2385 0111 7F49 4949 		.string	"\177III6"
 2385      3600 
 2386 0117 00        		.string	""
 2387 0118 00        		.string	""
 2388 0119 3E41 4141 		.string	">AAA\""
 2388      2200 
 2389 011f 00        		.string	""
 2390 0120 00        		.string	""
 2391 0121 7F41 4122 		.string	"\177AA\"\034"
 2391      1C00 
 2392 0127 00        		.string	""
 2393 0128 00        		.string	""
 2394 0129 7F49 4949 		.string	"\177IIIA"
 2394      4100 
 2395 012f 00        		.string	""
 2396 0130 00        		.string	""
 2397 0131 7F09 0909 		.string	"\177\t\t\t\001"
 2397      0100 
 2398 0137 00        		.string	""
 2399 0138 00        		.string	""
 2400 0139 3E41 4151 		.string	">AAQr"
 2400      7200 
 2401 013f 00        		.string	""
 2402 0140 00        		.string	""
 2403 0141 7F08 0808 		.string	"\177\b\b\b\177"
 2403      7F00 
 2404 0147 00        		.string	""
 2405 0148 00        		.string	""
 2406 0149 417F 4100 		.string	"A\177A"
 2407 014d 00        		.string	""
 2408 014e 00        		.string	""
 2409 014f 00        		.string	""
 2410 0150 00        		.string	""
 2411 0151 2040 413F 		.string	" @A?\001"
 2411      0100 
 2412 0157 00        		.string	""
 2413 0158 00        		.string	""
 2414 0159 7F08 1422 		.string	"\177\b\024\"A"
 2414      4100 
 2415 015f 00        		.string	""
 2416 0160 00        		.string	""
 2417 0161 7F40 4040 		.string	"\177@@@@"
 2417      4000 
 2418 0167 00        		.string	""
 2419 0168 00        		.string	""
 2420 0169 7F02 0C02 		.string	"\177\002\f\002\177"
 2420      7F00 
 2421 016f 00        		.string	""
 2422 0170 00        		.string	""
 2423 0171 7F04 0810 		.string	"\177\004\b\020\177"
 2423      7F00 
 2424 0177 00        		.string	""
 2425 0178 00        		.string	""
 2426 0179 3E41 4141 		.string	">AAA>"
 2426      3E00 
 2427 017f 00        		.string	""
 2428 0180 00        		.string	""
 2429 0181 7F09 0909 		.string	"\177\t\t\t\006"
 2429      0600 
 2430 0187 00        		.string	""
 2431 0188 00        		.string	""
 2432 0189 3E41 5121 		.string	">AQ!^"
 2432      5E00 
 2433 018f 00        		.string	""
 2434 0190 00        		.string	""
 2435 0191 7F09 1929 		.string	"\177\t\031)F"
 2435      4600 
 2436 0197 00        		.string	""
 2437 0198 00        		.string	""
 2438 0199 2649 4949 		.string	"&III2"
 2438      3200 
 2439 019f 00        		.string	""
 2440 01a0 00        		.string	""
 2441 01a1 0101 7F01 		.string	"\001\001\177\001\001"
 2441      0100 
 2442 01a7 00        		.string	""
 2443 01a8 00        		.string	""
 2444 01a9 3F40 4040 		.string	"?@@@?"
 2444      3F00 
 2445 01af 00        		.string	""
 2446 01b0 00        		.string	""
 2447 01b1 1F20 4020 		.string	"\037 @ \037"
 2447      1F00 
 2448 01b7 00        		.string	""
 2449 01b8 00        		.string	""
 2450 01b9 3F40 3840 		.string	"?@8@?"
 2450      3F00 
 2451 01bf 00        		.string	""
 2452 01c0 00        		.string	""
 2453 01c1 6314 0814 		.string	"c\024\b\024c"
 2453      6300 
 2454 01c7 00        		.string	""
 2455 01c8 00        		.string	""
 2456 01c9 0304 7804 		.string	"\003\004x\004\003"
 2456      0300 
 2457 01cf 00        		.string	""
 2458 01d0 00        		.string	""
 2459 01d1 6151 4945 		.string	"aQIEC"
 2459      4300 
 2460 01d7 00        		.string	""
 2461 01d8 00        		.string	""
 2462 01d9 7F41 4100 		.string	"\177AA"
 2463 01dd 00        		.string	""
 2464 01de 00        		.string	""
 2465 01df 00        		.string	""
 2466 01e0 00        		.string	""
 2467 01e1 0204 0810 		.string	"\002\004\b\020 "
 2467      2000 
 2468 01e7 00        		.string	""
 2469 01e8 00        		.string	""
 2470 01e9 4141 7F00 		.string	"AA\177"
 2471 01ed 00        		.string	""
 2472 01ee 00        		.string	""
 2473 01ef 00        		.string	""
 2474 01f0 00        		.string	""
 2475 01f1 0402 0102 		.string	"\004\002\001\002\004"
 2475      0400 
 2476 01f7 00        		.string	""
 2477 01f8 00        		.string	""
 2478 01f9 8080 8080 		.string	"\200\200\200\200\200"
 2478      8000 
 2479 01ff 00        		.string	""
 2480 0200 00        		.string	""
 2481 0201 0102 0400 		.string	"\001\002\004"
 2482 0205 00        		.string	""
 2483 0206 00        		.string	""
 2484 0207 00        		.string	""
 2485 0208 00        		.string	""
 2486 0209 2054 5454 		.string	" TTTx"
 2486      7800 
 2487 020f 00        		.string	""
 2488 0210 00        		.string	""
 2489 0211 7F48 4444 		.string	"\177HDD8"
 2489      3800 
 2490 0217 00        		.string	""
 2491 0218 00        		.string	""
 2492 0219 3844 4428 		.string	"8DD("
 2492      00
 2493 021e 00        		.string	""
 2494 021f 00        		.string	""
 2495 0220 00        		.string	""
 2496 0221 3844 4448 		.string	"8DDH\177"
 2496      7F00 
 2497 0227 00        		.string	""
 2498 0228 00        		.string	""
 2499 0229 3854 5454 		.string	"8TTT\030"
 2499      1800 
 2500 022f 00        		.string	""
 2501 0230 00        		.string	""
 2502 0231 087E 0902 		.string	"\b~\t\002"
 2502      00
 2503 0236 00        		.string	""
 2504 0237 00        		.string	""
 2505 0238 00        		.string	""
 2506 0239 18A4 A4A4 		.string	"\030\244\244\244|"
 2506      7C00 
 2507 023f 00        		.string	""
 2508 0240 00        		.string	""
 2509 0241 7F08 0404 		.string	"\177\b\004\004x"
 2509      7800 
 2510 0247 00        		.string	""
 2511 0248 00        		.string	""
 2512 0249 00        		.string	""
 2513 024a 7D00      		.string	"}"
 2514 024c 00        		.string	""
 2515 024d 00        		.string	""
 2516 024e 00        		.string	""
 2517 024f 00        		.string	""
 2518 0250 00        		.string	""
 2519 0251 8084 7D00 		.string	"\200\204}"
 2520 0255 00        		.string	""
 2521 0256 00        		.string	""
 2522 0257 00        		.string	""
 2523 0258 00        		.string	""
 2524 0259 7F10 2844 		.string	"\177\020(D"
 2524      00
 2525 025e 00        		.string	""
 2526 025f 00        		.string	""
 2527 0260 00        		.string	""
 2528 0261 417F 4000 		.string	"A\177@"
 2529 0265 00        		.string	""
 2530 0266 00        		.string	""
 2531 0267 00        		.string	""
 2532 0268 00        		.string	""
 2533 0269 7C04 1804 		.string	"|\004\030\004x"
 2533      7800 
 2534 026f 00        		.string	""
 2535 0270 00        		.string	""
 2536 0271 7C08 047C 		.string	"|\b\004|"
 2536      00
 2537 0276 00        		.string	""
 2538 0277 00        		.string	""
 2539 0278 00        		.string	""
 2540 0279 3844 4438 		.string	"8DD8"
 2540      00
 2541 027e 00        		.string	""
 2542 027f 00        		.string	""
 2543 0280 00        		.string	""
 2544 0281 FC24 2418 		.string	"\374$$\030"
 2544      00
 2545 0286 00        		.string	""
 2546 0287 00        		.string	""
 2547 0288 00        		.string	""
 2548 0289 1824 24FC 		.string	"\030$$\374"
 2548      00
 2549 028e 00        		.string	""
 2550 028f 00        		.string	""
 2551 0290 00        		.string	""
 2552 0291 00        		.string	""
 2553 0292 7C08 0400 		.string	"|\b\004"
 2554 0296 00        		.string	""
 2555 0297 00        		.string	""
 2556 0298 00        		.string	""
 2557 0299 4854 5424 		.string	"HTT$"
 2557      00
 2558 029e 00        		.string	""
 2559 029f 00        		.string	""
 2560 02a0 00        		.string	""
 2561 02a1 047F 4400 		.string	"\004\177D"
 2562 02a5 00        		.string	""
 2563 02a6 00        		.string	""
 2564 02a7 00        		.string	""
 2565 02a8 00        		.string	""
 2566 02a9 3C40 407C 		.string	"<@@|"
 2566      00
 2567 02ae 00        		.string	""
 2568 02af 00        		.string	""
 2569 02b0 00        		.string	""
 2570 02b1 1C20 4020 		.string	"\034 @ \034"
 2570      1C00 
 2571 02b7 00        		.string	""
 2572 02b8 00        		.string	""
 2573 02b9 3C40 3040 		.string	"<@0@<"
 2573      3C00 
 2574 02bf 00        		.string	""
 2575 02c0 00        		.string	""
 2576 02c1 4428 1028 		.string	"D(\020(D"
 2576      4400 
 2577 02c7 00        		.string	""
 2578 02c8 00        		.string	""
 2579 02c9 1CA0 A07C 		.string	"\034\240\240|"
 2579      00
 2580 02ce 00        		.string	""
 2581 02cf 00        		.string	""
 2582 02d0 00        		.string	""
 2583 02d1 4464 544C 		.string	"DdTLD"
 2583      4400 
 2584 02d7 00        		.string	""
 2585 02d8 00        		.string	""
 2586 02d9 0836 4100 		.string	"\b6A"
 2587 02dd 00        		.string	""
 2588 02de 00        		.string	""
 2589 02df 00        		.string	""
 2590 02e0 00        		.string	""
 2591 02e1 00        		.string	""
 2592 02e2 7F00      		.string	"\177"
 2593 02e4 00        		.string	""
 2594 02e5 00        		.string	""
 2595 02e6 00        		.string	""
 2596 02e7 00        		.string	""
 2597 02e8 00        		.string	""
 2598 02e9 4136 0800 		.string	"A6\b"
 2599 02ed 00        		.string	""
 2600 02ee 00        		.string	""
 2601 02ef 00        		.string	""
 2602 02f0 00        		.string	""
 2603 02f1 0201 0102 		.string	"\002\001\001\002\001"
 2603      0100 
 2604 02f7 00        		.string	""
 2605 02f8 00        		.string	""
 2606 02f9 0205 0502 		.string	"\002\005\005\002"
 2606      00
 2607 02fe 00        		.string	""
 2608 02ff 00        		.string	""
 2609 0300 00        		.string	""
 2610 0301 FFFF FFFF 		.string	"\377\377\377\377\377"
 2610      FF00 
 2611 0307 00        		.string	""
 2612               		.text
 2613               	.Letext0:
 2614               		.file 3 "/usr/avr/include/stdint.h"
 2615               		.file 4 "lib/ili9341/font.c"
 2616               		.file 5 "lib/ili9341/../spi.h"
 2617               		.file 6 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd.c
     /tmp/ccCXd4ZZ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCXd4ZZ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCXd4ZZ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCXd4ZZ.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCXd4ZZ.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCXd4ZZ.s:12     .text:0000000000000000 lcd_ddr_init
     /tmp/ccCXd4ZZ.s:39     .text:000000000000000e lcd_cs_low
     /tmp/ccCXd4ZZ.s:58     .text:0000000000000012 lcd_cs_high
     /tmp/ccCXd4ZZ.s:77     .text:0000000000000016 lcd_dc_low
     /tmp/ccCXd4ZZ.s:96     .text:000000000000001a lcd_dc_high
     /tmp/ccCXd4ZZ.s:115    .text:000000000000001e backlight_off
     /tmp/ccCXd4ZZ.s:134    .text:0000000000000022 lcd_backlight_on
     /tmp/ccCXd4ZZ.s:153    .text:0000000000000026 lcd_rst_on
     /tmp/ccCXd4ZZ.s:172    .text:000000000000002a lcd_rst_off
     /tmp/ccCXd4ZZ.s:191    .text:000000000000002e lcd_send_cmd
     /tmp/ccCXd4ZZ.s:229    .text:0000000000000046 lcd_send_data
     /tmp/ccCXd4ZZ.s:267    .text:000000000000005e lcd_send_data16
     /tmp/ccCXd4ZZ.s:319    .text:0000000000000080 lcd_setOrientation
                            *COM*:0000000000000002 lcd_max_x
                            *COM*:0000000000000002 lcd_max_y
                            *COM*:0000000000000001 lcd_orientation
     /tmp/ccCXd4ZZ.s:374    .text:00000000000000b8 lcd_set_x
     /tmp/ccCXd4ZZ.s:431    .text:00000000000000e2 lcd_set_y
     /tmp/ccCXd4ZZ.s:488    .text:000000000000010c lcd_setXY
     /tmp/ccCXd4ZZ.s:535    .text:0000000000000130 lcd_pixel
     /tmp/ccCXd4ZZ.s:625    .text:000000000000016e lcd_line
     /tmp/ccCXd4ZZ.s:924    .text:0000000000000284 lcd_hline
     /tmp/ccCXd4ZZ.s:1107   .text:0000000000000328 lcd_vline
     /tmp/ccCXd4ZZ.s:1290   .text:00000000000003cc lcd_rectange
     /tmp/ccCXd4ZZ.s:1403   .text:000000000000042e lcd_fill_rectange
     /tmp/ccCXd4ZZ.s:1511   .text:0000000000000482 lcd_bg
     /tmp/ccCXd4ZZ.s:1555   .text:00000000000004aa lcd_circle
     /tmp/ccCXd4ZZ.s:1817   .text:00000000000005a8 lcd_init
     /tmp/ccCXd4ZZ.s:2237   .bss:0000000000000000 lcd_bg_color
     /tmp/ccCXd4ZZ.s:2246   .progmem.data:0000000000000000 simpleFont

UNDEFINED SYMBOLS
SPI_master_transmit
SPI_master_init
__do_clear_bss
